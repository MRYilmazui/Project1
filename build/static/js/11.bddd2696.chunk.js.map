{"version":3,"sources":["Components/BreadCrumbNav/BreadCrumbNav.js","Assets/img/image_4.png","Components/FindValue/findValue.js","Components/SubCategories/SubCategories.js","Components/SubPosts/SubPosts.js","Actions/GetGeneralContentsPreview.js","Assets/img/nopath.png","Actions/GetGeneralContents.js","../node_modules/alertifyjs/build/alertify.js","Actions/GetRecall.js","Container/Subpage/getRecall.js"],"names":["BreadCrumbNav","props","state","e","a","length","push","i","query","window","location","pathname","breadCrumb","data","tr","name","link","sub","k","s","y","className","ReactHtmlParser","this","loop","Component","module","exports","findValue","param","pageName","url","value","undefined","q","split","linkLength","otherLink","otherLinkLength","p","t","lang","languageJson","localStorage","language","SubCategories","NewsSlider","activeClassName","to","mainurl","title","routeValue","src","listImageUrl","alt","listDescription","imageRepeater","SubPosts","class","uppername","GetGeneralContentsPreviews","langid","routevalue","previewID","axios","get","API","GetGeneralContentPreview","headers","params","then","response","catch","error","GetGeneralContents","GetGeneralContent","keys","defaults","autoReset","basic","closable","closableByDimmer","invokeOnCloseOff","frameless","defaultFocusOff","maintainFocus","maximizable","modal","movable","moveBounded","overflow","padding","pinnable","pinned","preventBodyShift","resizable","startMaximized","transition","transitionOff","tabbable","join","NOT_DISABLED_NOT_RESET","notifier","delay","position","closeButton","classes","base","prefix","message","top","right","bottom","left","center","visible","hidden","close","glossary","ok","cancel","acccpt","deny","confirm","decline","maximize","restore","theme","input","hooks","preinit","postinit","openDialogs","addClass","element","classNames","removeClass","original","toBeRemoved","x","index","indexOf","splice","isRightToLeft","getComputedStyle","document","body","direction","getScrollTop","documentElement","scrollTop","getScrollLeft","scrollLeft","clearContents","lastChild","removeChild","copy","cpy","Array","isArray","Date","getTime","RegExp","source","global","ignoreCase","multiline","lastIndex","prop","hasOwnProperty","destruct","instance","initialize","elements","root","parentNode","settings","__settings","__init","__internal","IsPassiveSupported","options","Object","defineProperty","addEventListener","removeEventListener","on","el","event","fn","useCapture","passive","capture","off","type","supported","transitions","style","delegate","context","method","arguments","args","apply","createCloseEvent","button","dispatchEvent","eventType","call","dialog","scrollX","scrollY","usedKeys","tabindex","isSafari","navigator","userAgent","templates","primary","auxiliary","setup","alertify","focus","buttons","select","buttonsDefinition","b","ref","internal","isOpen","activeElement","timerIn","timerOut","onshow","onclosing","onclose","onfocus","onmove","onmoved","onresize","onresized","onmaximize","onmaximized","onrestore","onrestored","resetHandler","beginMoveHandler","beginResizeHandler","bringToFrontHandler","modalClickHandler","buttonsClickHandler","commandsClickHandler","transitionInHandler","transitionOutHandler","destroy","createElement","display","innerHTML","dimmer","firstChild","reset","commands","container","nextSibling","pin","header","content","footer","resizeHandle","buttonTemplate","key","cloneNode","text","attrs","setAttribute","scope","appendChild","opKey","onReset","beginMove","beginResize","bringToFront","handleTransitionInEvent","handleTransitionOutEvent","set","build","restoreScrollPosition","scrollTo","ensureNoOverflow","requiresNoOverflow","isModal","isMaximized","topScroll","add","scrollHeight","clientHeight","setFocus","optionUpdated","option","oldValue","newValue","setHeader","unbindModelessEvents","updateAbsPositionFix","bindModelessEvents","updateDisplayMode","updateBasicMode","updateFramelessMode","removeAbsPositionFix","addAbsPositionFix","updatePinned","bindClosableEvents","unbindClosableEvents","updateClosable","updateMaximizable","updatePinnable","bindMovableEvents","resetMove","unbindMovableEvents","updateMovable","bindResizableEvents","resetResize","unbindResizableEvents","updateResizable","offsetWidth","updateTransition","updateTransitionOff","onupdate","update","obj","callback","old","result","op","items","found","Error","triggerClose","triggerCallback","invokeOnClose","srcElement","target","isPinned","unpin","marginTop","marginLeft","marginRight","parseInt","cancelClick","modalClickHandlerTS","timeStamp","callbackTS","cancelKeyup","check","now","idx","disabled","closeEvent","keyupHandler","keyCode","keydownHandler","preventDefault","stopPropagation","resetTarget","querySelector","firstReset","lastReset","lastFocusedElement","relatedTarget","within","contains","findTabbable","last","tabbables","slice","querySelectorAll","reverse","offsetParent","offsetHeight","getClientRects","recycleTab","shiftKey","clearTimeout","offsetX","offsetY","xProp","yProp","bounds","refreshTop","moveDelegate","moveElement","moveElementBounded","Math","min","maxLeft","max","minLeft","maxTop","minTop","eventSrc","targetTouches","current","offsetLeft","offsetTop","move","endMove","startingLeft","Number","Nan","startingWidth","minWidth","handleOffset","height","minHeight","width","maxWidth","resize","pageRelative","X","Y","pageX","pageY","clientX","clientY","isRTL","isNaN","diff","abs","resizeElement","endResize","windowResize","moveTo","resizeTo","w","parseFloat","h","regex","match","clientWidth","setting","self","o","n","settingUpdated","item","HTMLElement","setContent","showModal","show","setTimeout","hasAttribute","prepare","removeAttribute","closeOthers","closeAll","openInstances","baseClass","updatePosition","pushInstance","pushed","create","div","clickDelegate","getAttribute","dismiss","transitionDone","clearTimers","timer","transitionTimeout","clickHandler","transitionEndHandler","_content","_wait","wait","insertBefore","ondismiss","clicked","dismissOthers","dismissAll","except","clone","dialogs","extend","get_dialog","Factory","transient","definition","factory","register","notify","success","warning","main","_title","_message","_onok","onok","setMessage","label","returnValue","autoConfirm","duration","task","clearAutoConfirm","clearInterval","startAutoConfirm","setInterval","_oncancel","oncancel","labels","defaultFocus","reverseButtons","autoOk","autoCancel","_value","GetRecalls","chassisNumber","GetRecall","lng","Subpage","componentDidMount","componentDidUpdate","displayMenu","Loader","inputValue","GetRecallValue","handleChange","bind","galleries","imageUrl","GetGeneralContentsPage","setState","table","getElementsByClassName","html2canvas","canvas","imgData","toDataURL","pdf","jsPDF","addImage","save","allsite","htmlFor","onChange","onClick","postData","chassisNumer","actionName","status","href"],"mappings":"qOAMqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,GAHI,E,uDAQPC,GACV,IAAMC,EAAI,GAEV,GAAGD,EAAEE,OAAO,IAAM,EAChBD,EAAEE,KACA,MAAQH,EAAE,GAAK,YAGjB,IAAK,IAAII,EAAI,EAAGA,EAAIJ,EAAEE,OAAO,EAAGE,IAC9BH,EAAEE,KACAH,EAAEI,GAAG,OAKX,OAAOH,I,6BAGH,IACII,EAAQC,OAAOC,SAASC,SACxBC,EAAa,GAGbA,GAAcC,EAAKC,GAAG,GAAGC,KAEzB,IAAK,IAAIR,EAAI,EAAGA,EAAIM,EAAKC,GAAGT,OAAQE,IAChC,GAAIM,EAAKC,GAAGP,GAAGS,MAAQR,EACnBI,GAAc,eAAgBC,EAAKC,GAAGP,GAAGS,KAAM,KAAQH,EAAKC,GAAGP,GAAGQ,KAAO,YAGzE,GAAsB,MAAlBF,EAAKC,GAAGP,GAAGU,IACX,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAKC,GAAGP,GAAGU,IAAIZ,OAAQa,IACvC,GAAIL,EAAKC,GAAGP,GAAGU,IAAIC,GAAGF,MAAQR,EAC1BI,GAAc,cAAeC,EAAKC,GAAGP,GAAGS,KAAM,IAAOH,EAAKC,GAAGP,GAAGQ,KAAO,OACvEH,GAAc,cAAeC,EAAKC,GAAGP,GAAGU,IAAIC,GAAGF,KAAM,IAAOH,EAAKC,GAAGP,GAAGU,IAAIC,GAAGH,KAAO,YAGrF,GAA6B,MAAzBF,EAAKC,GAAGP,GAAGU,IAAIC,GAAGD,IAClB,IAAK,IAAIE,EAAI,EAAGA,EAAIN,EAAKC,GAAGP,GAAGU,IAAIC,GAAGD,IAAIZ,OAAQc,IAC9C,GAAIN,EAAKC,GAAGP,GAAGU,IAAIC,GAAGD,IAAIE,GAAGH,MAAQR,EACjCI,GAAc,cAAeC,EAAKC,GAAGP,GAAGS,KAAM,IAAOH,EAAKC,GAAGP,GAAGQ,KAAO,OACvEH,GAAc,cAAeC,EAAKC,GAAGP,GAAGU,IAAIC,GAAGF,KAAM,IAAOH,EAAKC,GAAGP,GAAGU,IAAIC,GAAGH,KAAO,OACrFH,GAAc,cAAeC,EAAKC,GAAGP,GAAGU,IAAIC,GAAGD,IAAIE,GAAGH,KAAM,IAAOH,EAAKC,GAAGP,GAAGU,IAAIC,GAAGD,IAAIE,GAAGJ,KAAO,YAGnG,GAAoC,MAAhCF,EAAKC,GAAGP,GAAGU,IAAIC,GAAGD,IAAIE,GAAGF,IACzB,IAAK,IAAIG,EAAI,EAAGA,EAAIP,EAAKC,GAAGP,GAAGU,IAAIC,GAAGD,IAAIE,GAAGF,IAAIZ,OAAQe,IACjDP,EAAKC,GAAGP,GAAGU,IAAIC,GAAGD,IAAIE,GAAGF,IAAIG,GAAGJ,MAAQR,IACxCI,GAAc,cAAeC,EAAKC,GAAGP,GAAGS,KAAM,IAAOH,EAAKC,GAAGP,GAAGQ,KAAO,OACvEH,GAAc,cAAeC,EAAKC,GAAGP,GAAGU,IAAIC,GAAGF,KAAM,IAAOH,EAAKC,GAAGP,GAAGU,IAAIC,GAAGH,KAAO,OACrFH,GAAc,cAAeC,EAAKC,GAAGP,GAAGU,IAAIC,GAAGD,IAAIE,GAAGH,KAAM,IAAOH,EAAKC,GAAGP,GAAGU,IAAIC,GAAGD,IAAIE,GAAGJ,KAAO,OACnGH,GAAc,cAAeC,EAAKC,GAAGP,GAAGU,IAAIC,GAAGD,IAAIE,GAAGF,IAAIG,GAAGJ,KAAM,IAAOH,EAAKC,GAAGP,GAAGU,IAAIC,GAAGD,IAAIE,GAAGF,IAAIG,GAAGL,KAAO,QAuDjK,OAAOH,I,+BAIX,OACE,yBAAKS,UAAU,iBACZC,IAAgBC,KAAKC,a,GAzHaC,c,oBCN3CC,EAAOC,QAAU,IAA0B,qC,2ECA5B,SAASC,EAAUC,EAAOC,EAAUnB,EAAUoB,GACzD,IAAMhB,EAAOe,EACb,GAAW,8BAARC,GAA+C,4BAARA,EACxC,MAAO,YACF,GAAY,sDAARA,GAAuE,mDAARA,EACxE,MAAO,iCAEF,GAAY,wCAARA,GAAyD,sCAARA,EAC1D,MAAO,eAEF,GAAY,gEAARA,GAAiF,oDAARA,EAClF,MAAO,4BAEF,GAAY,6CAARA,GAA8D,qCAARA,EAC/D,MAAO,gBAEF,GAAY,qDAARA,GAAsE,sDAARA,EACvE,MAAO,mCAEF,GAAY,gDAARA,GAAiE,2CAARA,EAClE,MAAO,yBAEF,GAAY,0DAARA,GAA2E,oDAARA,EAC5E,MAAO,eAEF,GAAY,wDAARA,GAAyE,oDAARA,EAC1E,MAAO,eAEF,GAAY,wDAARA,GAAyE,qDAARA,EAC1E,MAAO,gBAEF,GAAY,yDAARA,GAA0E,wDAARA,EAC3E,MAAO,mBAEF,GAAY,wEAARA,GAAyF,uEAARA,EAC1F,MAAO,+BAEF,GAAY,iFAARA,GAAkG,oEAARA,EACnG,MAAO,6BAEF,GAAY,wEAARA,GAAyF,oEAARA,EAC1F,MAAO,6BAGT,GAAgB,aAAbD,GAAwC,aAAbA,EAE5B,MAAgB,WAAbnB,GAAsC,UAAbA,EACnBkB,EAAM,GAAGZ,IAAI,GAAGA,IAAI,GAAGe,MAEvBH,EAAM,GAAGZ,IAAI,GAAGA,IAAI,GAAGe,MAGlC,GAAgB,aAAbF,GAAwC,aAAbA,EAE5B,MAAgB,cAAbnB,GAAsC,QAAbA,EACnBkB,EAAM,GAAGZ,IAAI,GAAGA,IAAI,GAAGe,MAEvBH,EAAM,GAAGZ,IAAI,GAAGA,IAAI,GAAGe,MAGlC,QAAgBC,IAAbtB,EAEC,GAAGkB,EAAM,GAAGZ,IAAI,GAAGF,OAASe,EACxB,IAAK,IAAII,EAAI,EAAGA,EAAIL,EAAM,GAAGZ,IAAI,GAAGA,IAAI,GAAGA,IAAIZ,OAAQ6B,IAAK,CACxD,IAAMlB,EAAOa,EAAM,GAAGZ,IAAI,GAAGA,IAAI,GAAGA,IAAIiB,GAAGlB,KAAKmB,MAAM,KAChDC,EAAapB,EAAKX,OAAO,EACzBgC,EAAY1B,EAASwB,MAAM,KAC3BG,EAAkBD,EAAUhC,OAAO,EAEzC,GAAGW,EAAKoB,KAAgBC,EAAUC,GAC9B,OAAOT,EAAM,GAAGZ,IAAI,GAAGA,IAAI,GAAGA,IAAIiB,GAAGF,WAM7C,IAAK,IAAIE,EAAI,EAAGA,EAAIL,EAAM,GAAGZ,IAAI,GAAGA,IAAI,GAAGA,IAAIZ,OAAQ6B,IAAK,CACxD,IAAMlB,EAAOa,EAAM,GAAGZ,IAAI,GAAGA,IAAI,GAAGA,IAAIiB,GAAGlB,KAAKmB,MAAM,KAChDC,EAAapB,EAAKX,OAAO,EACzBgC,EAAY1B,EAASwB,MAAM,KAC3BG,EAAkBD,EAAUhC,OAAO,EAEzC,GAAGW,EAAKoB,KAAgBC,EAAUC,GAC9B,OAAOT,EAAM,GAAGZ,IAAI,GAAGA,IAAI,GAAGA,IAAIiB,GAAGF,MAQrD,IAAK,IAAIzB,EAAI,EAAGA,EAAIsB,EAAMxB,OAAO,EAAGE,IAElC,GAAoB,OAAjBsB,EAAMtB,GAAGU,IAAc,CACxB,IAAMD,EAAOa,EAAMtB,GAAGS,KAAKmB,MAAM,KAGjC,GAAGnB,EAFgBA,EAAKX,OAAO,KAEPU,EACtB,OAAOc,EAAMtB,GAAGyB,MAKlB,IAAK,IAAId,EAAI,EAAGA,EAAIW,EAAMtB,GAAGU,IAAIZ,OAAQa,IAEvC,GAA2B,OAAxBW,EAAMtB,GAAGU,IAAIC,GAAGD,IAAc,CAC/B,IAAMD,EAAOa,EAAMtB,GAAGU,IAAIC,GAAGF,KAAKmB,MAAM,KAGxC,GAAGnB,EAFgBA,EAAKX,OAAO,KAEPU,EACtB,OAAOc,EAAMtB,GAAGU,IAAIC,GAAGc,MAKzB,IAAK,IAAIO,EAAI,EAAGA,EAAIV,EAAMtB,GAAGU,IAAIC,GAAGD,IAAIZ,OAAQkC,IAE9C,GAAkC,OAA/BV,EAAMtB,GAAGU,IAAIC,GAAGD,IAAIsB,GAAGtB,IAAc,CACtC,IAAMD,EAAOa,EAAMtB,GAAGU,IAAIC,GAAGD,IAAIsB,GAAGvB,KAAKmB,MAAM,KAG/C,GAAGnB,EAFgBA,EAAKX,OAAO,KAEPU,EACtB,OAAOc,EAAMtB,GAAGU,IAAIC,GAAGD,IAAIsB,GAAGP,MAKhC,IAAK,IAAIQ,EAAI,EAAGA,EAAIX,EAAMtB,GAAGU,IAAIC,GAAGD,IAAIsB,GAAGtB,IAAIZ,OAAQmC,IAAK,CAE1D,IAAMxB,EAAOa,EAAMtB,GAAGU,IAAIC,GAAGD,IAAIsB,GAAGtB,IAAIuB,GAAGxB,KAAKmB,MAAM,KAGtD,GAAGnB,EAFgBA,EAAKX,OAAO,KAEPU,EACtB,OAAOc,EAAMtB,GAAGU,IAAIC,GAAGD,IAAIsB,GAAGtB,IAAIuB,GAAGR,WAMpC,CACL,IAAMhB,EAAOa,EAAMtB,GAAGU,IAAIC,GAAGD,IAAIsB,GAAGvB,KAAKmB,MAAM,KAG/C,GAAGnB,EAFgBA,EAAKX,OAAO,KAEPU,EACtB,OAAOc,EAAMtB,GAAGU,IAAIC,GAAGD,IAAIsB,GAAGP,WAQ/B,CACL,IAAMhB,EAAOa,EAAMtB,GAAGU,IAAIC,GAAGF,KAAKmB,MAAM,KAGxC,GAAGnB,EAFgBA,EAAKX,OAAO,KAEPU,EACtB,OAAOc,EAAMtB,GAAGU,IAAIC,GAAGc,WAOxB,CACL,IAAMhB,EAAOa,EAAMtB,GAAGS,KAAKmB,MAAM,KAGjC,GAAGnB,EAFgBA,EAAKX,OAAO,KAEPU,EACtB,OAAOc,EAAMtB,GAAGyB,OAzK1B,mC,iKCUMS,GADMC,EAAaC,aAAaF,MACzBG,EAASD,aAAaF,OACdI,E,kDACnB,WAAY5C,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,GAHI,E,4DAUjB,IAFA,IAAM4C,EAAa,GAEVvC,EAAI,EAAGA,EAAIgB,KAAKtB,MAAMY,KAAKR,OAAQE,IAC1CuC,EAAWxC,KACT,yBAAKe,UAAU,oEACb,kBAAC,IAAD,CAAS0B,gBAAgB,SAASC,GAAI,IAAIP,EAAK,GAAGQ,QAAQC,MAAM,GAAG,IAAIT,EAAK,GAAGQ,QAAQC,MAAM,GAAG,IAAI3B,KAAKtB,MAAMY,KAAKN,GAAG4C,YACrH,0BAAM9B,UAAU,8CACd,yBAAK+B,IAAK7B,KAAKtB,MAAMY,KAAKN,GAAG8C,aAAcC,IAAI,MAEjD,0BAAMjC,UAAU,4BACd,4BAAKE,KAAKtB,MAAMY,KAAKN,GAAG2C,OACvB3B,KAAKtB,MAAMY,KAAKN,GAAGgD,oBAO9B,OAAOT,I,+BAMP,OACE,yBAAKzB,UAAU,iBAGQ,OAApBE,KAAKtB,MAAMY,KAERU,KAAKiC,gBAEL,Q,GAzC+B/B,c,8KCHrCgB,G,OAAOG,EAASD,aAAaF,OAEdgB,E,kDACnB,WAAYxD,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,GAHI,E,4DAUjB,IAFA,IAAM4C,EAAa,GAEVvC,EAAI,EAAGA,EAAIgB,KAAKtB,MAAMY,KAAKR,OAAQE,IAC1CuC,EAAWxC,KACT,yBAAKoD,MAAM,YACT,kBAAC,IAAD,CAASX,gBAAgB,SAASC,GAAI,IAAIP,EAAK,GAAGQ,QAAQC,MAAM,GAAG3B,KAAKtB,MAAM0D,UAAU,IAAIpC,KAAKtB,MAAMY,KAAKN,GAAG4C,YAC7G,0BAAMO,MAAM,8CACV,yBAAKN,IAAK7B,KAAKtB,MAAMY,KAAKN,GAAG8C,aAAcC,IAAI,MAEjD,0BAAMI,MAAM,4BACV,4BAAKnC,KAAKtB,MAAMY,KAAKN,GAAG2C,OACxB,2BACG3B,KAAKtB,MAAMY,KAAKN,GAAGgD,qBAShC,OAAOT,I,+BAKP,OACE,yBAAKzB,UAAU,4DAGQ,OAApBE,KAAKtB,MAAMY,KAERU,KAAKiC,gBAEL,Q,GA3C0B/B,c,wJCN/B,SAAemC,EAAtB,sC,4CAAO,WAA2CC,EAAQC,EAAYC,GAA/D,IAAA3D,EAAA,SAAAA,EAAA,sEACS4D,IAAMC,IAAN,UAAaC,KAAb,OAAmBC,KACjC,CACEC,QAAU,CACR,eAAiB,kCACjB,4BAA6B,mCAC7B,iBAAkB,QAEpBC,OAAQ,CACN,WAAcR,EACd,eAAkBC,EAClB,UAAcC,KAGhBO,MAAK,SAACC,GACN,OAAOA,EAAS1D,QAEjB2D,OAAM,SAAUC,GACf,OAAO,QAlBJ,cACDrE,EADC,yBAqBEA,GArBF,4C,4CCJPsB,EAAOC,QAAU,IAA0B,oC,wJCIpC,SAAe+C,EAAtB,oC,4CAAO,WAAmCb,EAAQC,GAA3C,IAAA1D,EAAA,SAAAA,EAAA,sEACS4D,IAAMC,IAAN,UAAaC,KAAb,OAAmBS,KACjC,CACEP,QAAU,CACR,eAAiB,kCACjB,4BAA6B,mCAC7B,iBAAkB,QAEpBC,OAAQ,CACN,WAAcR,EACd,eAAkBC,KAGpBQ,MAAK,SAACC,GACN,OAAOA,EAAS1D,QAEjB2D,OAAM,SAAUC,GACf,OAAO,QAjBJ,cACDrE,EADC,yBAoBEA,GApBF,4C,kECJP,OAKE,SAAWK,GACT,aACA,IAKImE,EACO,GADPA,EAEK,GAFLA,EAGI,IAHJA,EAIK,IAJLA,EAKM,GALNA,EAMO,GANPA,EAOK,EAMLC,EAAW,CACXC,WAAU,EACVC,OAAM,EACNC,UAAS,EACTC,kBAAiB,EACjBC,kBAAiB,EACjBC,WAAU,EACVC,iBAAgB,EAChBC,eAAc,EACdC,aAAY,EACZC,OAAM,EACNC,SAAQ,EACRC,aAAY,EACZC,UAAS,EACTC,SAAS,EACTC,UAAS,EACTC,QAAO,EACPC,kBAAiB,EACjBC,WAAU,EACVC,gBAAe,EACfC,WAAW,QACXC,eAAc,EACdC,SAAS,CAAC,SAAU,SAAU,QAAS,SAAU,WAAY,kEAA0DC,KAAKC,oCAC5HC,SAAS,CACLC,MAAM,EACNC,SAAS,eACTC,aAAY,EACZC,QAAS,CACLC,KAAM,oBACNC,OAAO,OACPC,QAAS,cACTC,IAAK,UACLC,MAAO,YACPC,OAAQ,aACRC,KAAM,WACNC,OAAQ,aACRC,QAAS,cACTC,OAAQ,aACRC,MAAO,cAGfC,SAAS,CACLpE,MAAM,aACNqE,GAAI,KACJC,OAAQ,SACRC,OAAQ,SACRC,KAAM,OACNC,QAAS,UACTC,QAAS,UACTP,MAAO,QACPQ,SAAU,WACVC,QAAS,WAEbC,MAAM,CACFC,MAAM,YACNT,GAAG,SACHC,OAAO,cAEXS,MAAM,CACFC,QAAQ,aACRC,SAAS,eAKbC,EAAc,GAUlB,SAASC,EAASC,EAAQC,GACtBD,EAAQjH,WAAa,IAAMkH,EAW/B,SAASC,EAAYF,EAASC,GAG1B,IAFA,IAAIE,EAAWH,EAAQjH,UAAUc,MAAM,KACnCuG,EAAcH,EAAWpG,MAAM,KAC1BwG,EAAI,EAAGA,EAAID,EAAYrI,OAAQsI,GAAK,EAAG,CAC5C,IAAIC,EAAQH,EAASI,QAAQH,EAAYC,IACrCC,GAAS,GACTH,EAASK,OAAOF,EAAM,GAG9BN,EAAQjH,UAAYoH,EAASrC,KAAK,KAQtC,SAAS2C,IACL,MAA4D,QAArDtI,EAAOuI,iBAAiBC,SAASC,MAAMC,UAOlD,SAASC,IACL,OAASH,SAASI,iBAAmBJ,SAASI,gBAAgBC,WAAcL,SAASC,KAAKI,UAQ9F,SAASC,IACL,OAASN,SAASI,iBAAmBJ,SAASI,gBAAgBG,YAAeP,SAASC,KAAKM,WAO/F,SAASC,EAAcnB,GACnB,KAAOA,EAAQoB,WACXpB,EAAQqB,YAAYrB,EAAQoB,WAWpC,SAASE,EAAKxG,GACV,GAAG,OAASA,EACR,OAAOA,EAEX,IAAIyG,EACJ,GAAGC,MAAMC,QAAQ3G,GAAK,CAClByG,EAAM,GACN,IAAI,IAAIlB,EAAE,EAAEA,EAAEvF,EAAI/C,OAAOsI,GAAG,EACxBkB,EAAIvJ,KAAKsJ,EAAKxG,EAAIuF,KAEtB,OAAOkB,EAGX,GAAGzG,aAAe4G,KACd,OAAO,IAAIA,KAAK5G,EAAI6G,WAGxB,GAAG7G,aAAe8G,OAMd,OALAL,EAAM,IAAIK,OAAO9G,EAAI+G,SACjBC,OAAShH,EAAIgH,OACjBP,EAAIQ,WAAajH,EAAIiH,WACrBR,EAAIS,UAAYlH,EAAIkH,UACpBT,EAAIU,UAAYnH,EAAImH,UACbV,EAGX,GAAkB,kBAARzG,EAAiB,CAGvB,IAAK,IAAIoH,KAFTX,EAAM,GAEWzG,EACTA,EAAIqH,eAAeD,KACnBX,EAAIW,GAAQZ,EAAKxG,EAAIoH,KAG7B,OAAOX,EAEX,OAAOzG,EAMX,SAASsH,EAASC,EAAUC,GACxB,GAAGD,EAASE,SAAS,CAEjB,IAAIC,EAAOH,EAASE,SAASC,KAC7BA,EAAKC,WAAWpB,YAAYmB,UACrBH,EAASE,SAEhBF,EAASK,SAAWpB,EAAKe,EAASM,YAElCN,EAASO,OAASN,SAEXD,EAASQ,YAOxB,IAAIC,GAAqB,EACzB,IACI,IAAIC,EAAUC,OAAOC,eAAe,GAAI,UAAW,CAC/CtH,IAAK,WACDmH,GAAqB,KAG7B3K,EAAO+K,iBAAiB,OAAQH,EAASA,GACzC5K,EAAOgL,oBAAoB,OAAQJ,EAASA,GAC9C,MAAOlL,IAWT,IAAIuL,EAAK,SAAUC,EAAIC,EAAOC,EAAIC,EAAYC,GAC1CJ,EAAGH,iBAAiBI,EAAOC,EAAIT,EAAqB,CAAEY,QAASF,EAAYC,QAASA,IAA2B,IAAfD,IAYhGG,EAAM,SAAUN,EAAIC,EAAOC,EAAIC,EAAYC,GAC3CJ,EAAGF,oBAAoBG,EAAOC,EAAIT,EAAqB,CAAEY,QAASF,EAAYC,QAASA,IAA2B,IAAfD,IAmBnG7F,EAAc,WACd,IAAIzD,EAAG0J,EACHC,GAAY,EACZC,EAAc,CACd,UAAqB,eACrB,WAAqB,8BACrB,YAAqB,iBACrB,aAAqB,eACrB,gBAAqB,sBAGzB,IAAK5J,KAAK4J,EACN,QAA0CnK,IAAtCgH,SAASI,gBAAgBgD,MAAM7J,GAAkB,CACjD0J,EAAOE,EAAY5J,GACnB2J,GAAY,EACZ,MAIR,MAAO,CACHD,KAAMA,EACNC,UAAWA,GArBD,GA8BlB,SAASG,EAASC,EAASC,GACvB,OAAO,WACH,GAAIC,UAAUpM,OAAS,EAAG,CAEtB,IADA,IAAIqM,EAAO,GACF/D,EAAI,EAAGA,EAAI8D,UAAUpM,OAAQsI,GAAK,EACvC+D,EAAKpM,KAAKmM,UAAU9D,IAGxB,OADA+D,EAAKpM,KAAKiM,GACHC,EAAOG,MAAMJ,EAASG,GAEjC,OAAOF,EAAOG,MAAMJ,EAAS,CAAC,KAAMA,KAQ5C,SAASK,EAAiBhE,EAAOiE,GAC7B,MAAO,CACHjE,MAAOA,EACPiE,OAAQA,EACRrF,QAAQ,GAWhB,SAASsF,EAAcC,EAAWpC,GAC9B,GAAwC,oBAA5BA,EAAS1G,IAAI8I,GACrB,OAAOpC,EAAS1G,IAAI8I,GAAWC,KAAKrC,GAU5C,IAAIsC,EAAU,WACV,IAySIC,EAASC,EAxSTC,EAAW,GAIXC,GAAW,EAEXC,EAAW7M,EAAO8M,UAAUC,UAAU3E,QAAQ,WAAa,GAAKpI,EAAO8M,UAAUC,UAAU3E,QAAQ,UAAY,EAE/G4E,EACW,iCADXA,EAGW,6CAHXA,EAIY,8CAJZA,EAKW,sCALXA,EAMc,6IANdA,EAOY,iCAPZA,EAQU,+BARVA,EASa,kCATbA,EAUY,iCAVZA,EAWa,CAAEC,QAAS,8CAA+CC,UAAW,iDAXlFF,EAYY,uCAZZA,EAakB,iCAGlB/G,EACiB,SADjBA,EAEkB,UAFlBA,EAGU,WAHVA,EAIU,YAJVA,EAKa,cALbA,EAMa,eANbA,EAOW,YAPXA,EAQc,gBARdA,EASY,aATZA,EAWe,gBAXfA,EAYgB,kBAZhBA,EAac,eAbdA,EAca,cAdbA,GAeiB,mBAfjBA,GAgBgB,kBAhBhBA,GAiBc,iBAjBdA,GAmBa,eAnBbA,GAoBY,OApBZA,GAqBe,gBArBfA,GAuBU,YAvBVA,GAwBa,eAxBbA,GAyBiB,oBAQrB,SAASkE,GAAWD,GAEhB,IAAIA,EAASQ,WAAW,CAYpB,IAAIyC,EAVJC,EAAShJ,SAASoD,MAAMC,QAAQyC,UAEzBA,EAASO,OAGZP,EAASM,aACTN,EAASM,WAAarB,EAAKe,EAASK,WAKX,oBAAnBL,EAASiD,QACfA,EAAQjD,EAASiD,SACXvC,QAAUuC,EAAMvC,SAAY,GAClCuC,EAAME,MAAQF,EAAME,OAAU,IAE9BF,EAAQ,CACJG,QAAQ,GACRD,MAAM,CACFxF,QAAQ,KACR0F,QAAO,GAEX3C,QAAQ,IAMa,kBAAnBV,EAAS1C,QACf0C,EAAS1C,MAAQ,IAIrB,IAAIgG,EAAoB,GACxB,GAAGnE,MAAMC,QAAQ6D,EAAMG,SACnB,IAAI,IAAIG,EAAE,EAAEA,EAAEN,EAAMG,QAAQ1N,OAAO6N,GAAG,EAAE,CACpC,IAAIC,EAAOP,EAAMG,QAAQG,GACrBrE,EAAM,GACV,IAAK,IAAItJ,KAAK4N,EACNA,EAAI1D,eAAelK,KACnBsJ,EAAItJ,GAAK4N,EAAI5N,IAGrB0N,EAAkB3N,KAAKuJ,GAI/B,IAAIuE,EAAWzD,EAASQ,WAAa,CAMjCkD,QAAO,EAQPC,cAAcrF,SAASC,KACvBqF,aAAQtM,EACRuM,cAASvM,EACT8L,QAASE,EACTH,MAAOF,EAAME,MACbzC,QAAS,CACLnI,WAAOjB,EACPsD,WAAOtD,EACP8C,WAAM9C,EACNkD,eAAUlD,EACVmD,qBAAgBnD,EAChB4D,YAAQ5D,EACRuD,aAASvD,EACTwD,iBAAYxD,EACZ8D,eAAW9D,EACX6C,eAAW7C,EACX+C,cAAU/C,EACVgD,sBAAkBhD,EAClBiD,sBAAiBjD,EACjBqD,iBAAarD,EACb+D,oBAAgB/D,EAChB2D,cAAU3D,EACVgE,gBAAYhE,EACZiE,mBAAejE,EACf0D,aAAQ1D,EACRyD,cAASzD,EACTwM,YAAOxM,EACPyM,eAAUzM,EACV0M,aAAQ1M,EACR2M,aAAQ3M,EACR4M,YAAO5M,EACP6M,aAAQ7M,EACR8M,cAAS9M,EACT+M,eAAU/M,EACVgN,gBAAWhN,EACXiN,iBAAYjN,EACZkN,eAAUlN,EACVmN,gBAAWnN,GAEfoN,kBAAapN,EACbqN,sBAAiBrN,EACjBsN,wBAAmBtN,EACnBuN,yBAAoBvN,EACpBwN,uBAAkBxN,EAClByN,yBAAoBzN,EACpB0N,0BAAqB1N,EACrB2N,yBAAoB3N,EACpB4N,0BAAqB5N,EACrB6N,aAAQ7N,GAGR4I,EAAW,GAEfA,EAASC,KAAO7B,SAAS8G,cAAc,OAEvClF,EAASC,KAAKuB,MAAM2D,QAAU,OAC9BnF,EAASC,KAAKzJ,UAAYqF,EAAe,IAAMA,EAAiB,IAEhEmE,EAASC,KAAKmF,UAAYxC,EAAmBA,EAG7C5C,EAASqF,OAASrF,EAASC,KAAKqF,WAGhCtF,EAAStF,MAAQsF,EAASC,KAAKpB,UAC/BmB,EAAStF,MAAM0K,UAAYxC,EAC3B5C,EAASoC,OAASpC,EAAStF,MAAM4K,WACjCtF,EAASoC,OAAOgD,UAAYxC,EAAkBA,EAAqBA,EAAmBA,EAAiBA,EAAmBA,EAAyBA,EAGnJ5C,EAASuF,MAAQ,GACjBvF,EAASuF,MAAM9P,KAAKuK,EAASoC,OAAOkD,YACpCtF,EAASuF,MAAM9P,KAAKuK,EAASoC,OAAOvD,WAGpCmB,EAASwF,SAAW,GACpBxF,EAASwF,SAASC,UAAYzF,EAASuF,MAAM,GAAGG,YAChD1F,EAASwF,SAASG,IAAM3F,EAASwF,SAASC,UAAUH,WACpDtF,EAASwF,SAASxI,SAAWgD,EAASwF,SAASG,IAAID,YACnD1F,EAASwF,SAAShJ,MAAQwD,EAASwF,SAASxI,SAAS0I,YAGrD1F,EAAS4F,OAAS5F,EAASwF,SAASC,UAAUC,YAG9C1F,EAAS3B,KAAO2B,EAAS4F,OAAOF,YAChC1F,EAAS3B,KAAK+G,UAAYxC,EAC1B5C,EAAS6F,QAAU7F,EAAS3B,KAAKiH,WAGjCtF,EAAS8F,OAAS9F,EAAS3B,KAAKqH,YAChC1F,EAAS8F,OAAOV,UAAYxC,EAAkBE,UAAYF,EAAkBC,QAG5E7C,EAAS+F,aAAe/F,EAAS8F,OAAOJ,YAGxC1F,EAASkD,QAAU,GACnBlD,EAASkD,QAAQJ,UAAY9C,EAAS8F,OAAOR,WAC7CtF,EAASkD,QAAQL,QAAU7C,EAASkD,QAAQJ,UAAU4C,YACtD1F,EAASkD,QAAQL,QAAQuC,UAAYxC,EACrC5C,EAASgG,eAAiBhG,EAASkD,QAAQL,QAAQyC,WAEnDtF,EAASkD,QAAQL,QAAQ/D,YAAYkB,EAASgG,gBAE9C,IAAI,IAAIlI,EAAE,EAAGA,EAAIgC,EAASQ,WAAW4C,QAAQ1N,OAAQsI,GAAG,EAAG,CACvD,IAAIkE,EAASlC,EAASQ,WAAW4C,QAAQpF,GAYzC,IAAI,IAAImI,KATL1D,EAASvE,QAAQgE,EAAOiE,KAAO,GAC9B1D,EAAS9M,KAAKuM,EAAOiE,KAGzBjE,EAAOvE,QAAUuC,EAASgG,eAAeE,YACzClE,EAAOvE,QAAQ2H,UAAYpD,EAAOmE,KACH,kBAArBnE,EAAOxL,WAAgD,KAArBwL,EAAOxL,WAC/CgH,EAASwE,EAAOvE,QAASuE,EAAOxL,WAErBwL,EAAOoE,MACP,cAARH,GAAuBjE,EAAOoE,MAAMxG,eAAeqG,IAClDjE,EAAOvE,QAAQ4I,aAAaJ,EAAKjE,EAAOoE,MAAMH,IAGlC,cAAjBjE,EAAOsE,MACNtG,EAASkD,QAAQJ,UAAUyD,YAAYvE,EAAOvE,SAE9CuC,EAASkD,QAAQL,QAAQ0D,YAAYvE,EAAOvE,SAkBpD,IAAI,IAAI+I,KAdR1G,EAASE,SAAWA,EAGpBuD,EAASiB,aAAe/C,EAAS3B,EAAU2G,IAC3ClD,EAASkB,iBAAmBhD,EAAS3B,EAAU4G,IAC/CnD,EAASmB,mBAAqBjD,EAAS3B,EAAU6G,IACjDpD,EAASoB,oBAAsBlD,EAAS3B,EAAU8G,IAClDrD,EAASqB,kBAAoBnD,EAAS3B,EAAU8E,IAChDrB,EAASsB,oBAAsBpD,EAAS3B,EAAU+E,IAClDtB,EAASuB,qBAAuBrD,EAAS3B,EAAUgF,IACnDvB,EAASwB,oBAAsBtD,EAAS3B,EAAU+G,IAClDtD,EAASyB,qBAAuBvD,EAAS3B,EAAUgH,IAGlCvD,EAAS/C,aACMpJ,IAAzB2L,EAAMvC,QAAQgG,GAEb1G,EAASiH,IAAIP,EAAOzD,EAAMvC,QAAQgG,IAC7BxD,EAAShJ,SAAS4F,eAAe4G,GAEtC1G,EAASiH,IAAIP,EAAOxD,EAAShJ,SAASwM,IACvB,UAAVA,GAEL1G,EAASiH,IAAIP,EAAOxD,EAAShJ,SAASyC,SAAS+J,IAK1B,oBAAnB1G,EAASkH,OACflH,EAASkH,QAIbhE,EAAShJ,SAASoD,MAAME,SAASwC,GAIrC1B,SAASC,KAAKkI,YAAYzG,EAASE,SAASC,MAYhD,SAASgH,KACLrR,EAAOsR,SAAS7E,EAASC,GAO7B,SAAS6E,KAEL,IADA,IAAIC,EAAqB,EACjBtJ,EAAE,EAAEA,EAAEP,EAAY/H,OAAOsI,GAAG,EAAE,CAClC,IAAIgC,EAAWvC,EAAYO,IACxBgC,EAASuH,WAAavH,EAASwH,iBAC9BF,GAAoB,GAGF,IAAvBA,GAA4BhJ,SAASC,KAAK7H,UAAUwH,QAAQnC,KAAuB,GAElF8B,EAAYS,SAASC,KAAMxC,IAC3BZ,IAAiB,IACZmM,EAAqB,GAAKhJ,SAASC,KAAK7H,UAAUwH,QAAQnC,IAAsB,IAErFZ,IAAiB,GACjBuC,EAASY,SAASC,KAAMxC,KAGhC,IAAII,GAAM,GAAIsL,GAAY,EAK1B,SAAStM,GAAiBuM,GACnBxE,EAAShJ,SAASiB,mBACduM,GAAOpJ,SAASI,gBAAgBiJ,aAAerJ,SAASI,gBAAgBkJ,cACvEH,GAAYjF,EACZrG,GAAMrG,EAAOuI,iBAAiBC,SAASC,MAAMpC,IAC7CuB,EAASY,SAASC,KAAMxC,GACxBuC,SAASC,KAAKmD,MAAMvF,KAAOqG,EAAU,MAC9BkF,IACPlF,EAAUiF,GACVnJ,SAASC,KAAKmD,MAAMvF,IAAMA,GAC1B0B,EAAYS,SAASC,KAAMxC,GAC3BoL,OAoHZ,SAASL,GAAa7F,EAAOjB,GAIzB,IADA,IACQhC,EADIP,EAAYS,QAAQ8B,GAChB,EAAEhC,EAAEP,EAAY/H,OAAOsI,GAAG,EACtC,GAAGP,EAAYO,GAAGuJ,UACd,OAaR,OARGjJ,SAASC,KAAKQ,YAAciB,EAASE,SAASC,OAC7C7B,SAASC,KAAKkI,YAAYzG,EAASE,SAASC,MAE5C1C,EAAYU,OAAOV,EAAYS,QAAQ8B,GAAU,GACjDvC,EAAY9H,KAAKqK,GACjB6H,GAAS7H,KAGN,EAWX,SAAS8H,GAAc9H,EAAU+H,EAAQC,EAAUC,GAC/C,OAAOF,GACP,IAAK,QACD/H,EAASkI,UAAUD,GACnB,MACJ,IAAK,SA5GT,SAA2BjI,GACpBA,EAAS1G,IAAI,UAGZuE,EAAYmC,EAASE,SAASC,KAAMpE,GAGjCiE,EAAS0D,WACRyE,GAAqBnI,GAGrBoI,GAAqBpI,GAErBqH,QAIJ3J,EAASsC,EAASE,SAASC,KAAMpE,GAG9BiE,EAAS0D,WACR2E,GAAmBrI,GAGnBoI,GAAqBpI,GAErBqH,OAmFJiB,CAAkBtI,GAClB,MACJ,IAAK,SAzET,SAAyBA,GACjBA,EAAS1G,IAAI,SAEboE,EAASsC,EAASE,SAASC,KAAMpE,GAGjC8B,EAAYmC,EAASE,SAASC,KAAMpE,GAoEpCwM,CAAgBvI,GAChB,MACJ,IAAK,aA3DT,SAA6BA,GACrBA,EAAS1G,IAAI,aAEboE,EAASsC,EAASE,SAASC,KAAMpE,GAGjC8B,EAAYmC,EAASE,SAASC,KAAMpE,GAsDpCyM,CAAoBxI,GACpB,MACJ,IAAK,UAiUT,SAAsBA,GACdA,EAAS1G,IAAI,WACbuE,EAAYmC,EAASE,SAASC,KAAMpE,IAChCiE,EAAS0D,UACT+E,GAAqBzI,KAGzBtC,EAASsC,EAASE,SAASC,KAAMpE,IAC7BiE,EAAS0D,WAAa1D,EAASuH,WAC/BmB,GAAkB1I,IAzUtB2I,CAAa3I,GACb,MACJ,IAAK,YAsWT,SAAwBA,GAChBA,EAAS1G,IAAI,aAEboE,EAASsC,EAASE,SAASC,KAAMpE,GAi7BzC,SAA4BiE,GACxBe,EAAGf,EAASE,SAAStF,MAAO,QAASoF,EAASQ,WAAWsE,mBAj7BrD8D,CAAmB5I,KAGnBnC,EAAYmC,EAASE,SAASC,KAAMpE,GAw7B5C,SAA8BiE,GAC1BsB,EAAItB,EAASE,SAAStF,MAAO,QAASoF,EAASQ,WAAWsE,mBAx7BtD+D,CAAqB7I,IA7WrB8I,CAAe9I,GACf,MACJ,IAAK,eAiVT,SAA2BA,GACnBA,EAAS1G,IAAI,eAEboE,EAASsC,EAASE,SAASC,KAAMpE,GAGjC8B,EAAYmC,EAASE,SAASC,KAAMpE,GAtVpCgN,CAAkB/I,GAClB,MACJ,IAAK,YA4OT,SAAwBA,GAChBA,EAAS1G,IAAI,YAEboE,EAASsC,EAASE,SAASC,KAAMpE,IAGjC8B,EAAYmC,EAASE,SAASC,KAAMpE,IAjPpCiN,CAAehJ,GACf,MACJ,IAAK,WAu2BT,SAAuBA,GACfA,EAAS1G,IAAI,YAEboE,EAASsC,EAASE,SAASC,KAAMpE,GAC7BiE,EAAS0D,UACTuF,GAAkBjJ,KAKtBkJ,GAAUlJ,GAEVnC,EAAYmC,EAASE,SAASC,KAAMpE,GAChCiE,EAAS0D,UACTyF,GAAoBnJ,IAp3BxBoJ,CAAcpJ,GACd,MACJ,IAAK,aAijCT,SAAyBA,GACjBA,EAAS1G,IAAI,cAEboE,EAASsC,EAASE,SAASC,KAAMpE,IAC7BiE,EAAS0D,UACT2F,GAAoBrJ,KAIxBsJ,GAAYtJ,GAEZnC,EAAYmC,EAASE,SAASC,KAAMpE,IAChCiE,EAAS0D,UACT6F,GAAsBvJ,IA7jC1BwJ,CAAgBxJ,GAChB,MACJ,IAAK,UACEiI,EACCpK,EAAYmC,EAASE,SAASC,KAAMpE,IAC/BiE,EAASE,SAASC,KAAKzJ,UAAUwH,QAAQnC,IAAqB,GACnE2B,EAASsC,EAASE,SAASC,KAAMpE,IAErC,MACJ,IAAK,WACEkM,EACCpK,EAAYmC,EAASE,SAASC,KAAMpE,IAC/BiE,EAASE,SAASC,KAAKzJ,UAAUwH,QAAQnC,IAAsB,GACpE2B,EAASsC,EAASE,SAASC,KAAMpE,IAErC,MACJ,IAAK,cArLT,SAA0BiE,EAAU3I,EAAO2Q,GAChB,kBAAbA,GACNnK,EAAYmC,EAASE,SAASC,KAAKpE,GAAkBiM,GAEzDtK,EAASsC,EAASE,SAASC,KAAMpE,GAAiB1E,GACzC2I,EAASE,SAASC,KAAKsJ,YAiL5BC,CAAiB1J,EAASiI,EAAUD,GACpC,MACJ,IAAK,iBAzKT,SAA6BhI,GACrBA,EAAS1G,IAAI,iBAEboE,EAASsC,EAASE,SAASC,KAAMpE,IAGjC8B,EAAYmC,EAASE,SAASC,KAAMpE,IAoKpC4N,CAAoB3J,GAKc,oBAA5BA,EAAS1C,MAAMsM,UACrB5J,EAAS1C,MAAMsM,SAASvH,KAAKrC,EAAU+H,EAAQC,EAAUC,GA0BjE,SAAS4B,GAAO7J,EAAU8J,EAAKC,EAAU5D,EAAK9O,GAC1C,IAcQ2S,EAdJC,EAAS,CAACC,QAAG5S,EAAW6S,MAAO,IACnC,GAAoB,qBAAV9S,GAAwC,kBAAR8O,EAEtC8D,EAAOC,GAAK,MACTJ,EAAIhK,eAAeqG,IAClB8D,EAAOG,OAAQ,EACfH,EAAO5S,MAAQyS,EAAI3D,KAEnB8D,EAAOG,OAAQ,EACfH,EAAO5S,WAAQC,QAQnB,GADA2S,EAAOC,GAAK,MACM,kBAAR/D,EAAiB,CAEvB,IAAIpE,EAAOoE,EACX,IAAK,IAAItG,KAAQkC,EACT+H,EAAIhK,eAAeD,IAChBiK,EAAIjK,KAAUkC,EAAKlC,KAClBmK,EAAMF,EAAIjK,GACViK,EAAIjK,GAAQkC,EAAKlC,GACjBkK,EAAS1H,KAAKrC,EAASH,EAAMmK,EAAKjI,EAAKlC,KAE3CoK,EAAOE,MAAMxU,KAAK,CAAE,IAAOkK,EAAM,MAASkC,EAAKlC,GAAO,OAAQ,KAE9DoK,EAAOE,MAAMxU,KAAK,CAAE,IAAOkK,EAAM,MAASkC,EAAKlC,GAAO,OAAQ,QAGnE,IAAmB,kBAARsG,EAed,MAAM,IAAIkE,MAAM,mCAbZP,EAAIhK,eAAeqG,IAChB2D,EAAI3D,KAAS9O,IACZ2S,EAAOF,EAAI3D,GACX2D,EAAI3D,GAAO9O,EACX0S,EAAS1H,KAAKrC,EAASmG,EAAK6D,EAAK3S,IAErC4S,EAAOE,MAAMxU,KAAK,CAAC,IAAOwQ,EAAK,MAAS9O,EAAQ,OAAQ,KAGxD4S,EAAOE,MAAMxU,KAAK,CAAC,IAAOwQ,EAAK,MAAS9O,EAAQ,OAAQ,IAOpE,OAAO4S,EAWX,SAASK,GAAatK,GAClB,IAAIoK,EACJG,GAAgBvK,GAAU,SAAUkC,GAChC,OAAOkI,GAA6C,IAArCpK,EAAS1G,IAAI,sBAA0D,IAAzB4I,EAAOsI,kBAInEJ,GAASpK,EAAS0D,UACnB1D,EAAStD,QAYjB,SAASsI,GAAqB/D,EAAOjB,GAEjC,OADaiB,EAAMwJ,YAAcxJ,EAAMyJ,QAEvC,KAAK1K,EAASE,SAASwF,SAASG,IACvB7F,EAAS2K,WAGVC,GAAM5K,GAFN6F,GAAI7F,GAIR,MACJ,KAAKA,EAASE,SAASwF,SAASxI,SACvB8C,EAASwH,cAGVrK,GAAQ6C,GAFR9C,GAAS8C,GAIb,MACJ,KAAKA,EAASE,SAASwF,SAAShJ,MAC5B4N,GAAatK,GAGjB,OAAO,EAUX,SAAS6F,GAAI7F,GAETA,EAASiH,IAAI,UAAU,GAU3B,SAAS2D,GAAM5K,GAEXA,EAASiH,IAAI,UAAU,GAW3B,SAAS/J,GAAS8C,GAEdmC,EAAc,aAAcnC,GAE5BtC,EAASsC,EAASE,SAASC,KAAMpE,GAC7BiE,EAAS0D,UACT2D,KAGJlF,EAAc,cAAenC,GAUjC,SAAS7C,GAAQ6C,GAEbmC,EAAc,YAAanC,GAE3BnC,EAAYmC,EAASE,SAASC,KAAMpE,GAChCiE,EAAS0D,UACT2D,KAGJlF,EAAc,aAAcnC,GA4BhC,SAAS0I,GAAkB1I,GACvB,IAAInB,EAAaD,IACjBoB,EAASE,SAAStF,MAAM8G,MAAMmJ,UAAYpM,IAAiB,KAC3DuB,EAASE,SAAStF,MAAM8G,MAAMoJ,WAAajM,EAAa,KACxDmB,EAASE,SAAStF,MAAM8G,MAAMqJ,aAAgBlM,EAAc,KAUhE,SAAS4J,GAAqBzI,GAC1B,IAAI6K,EAAYG,SAAShL,EAASE,SAAStF,MAAM8G,MAAMmJ,UAAW,IAC9DC,EAAaE,SAAShL,EAASE,SAAStF,MAAM8G,MAAMoJ,WAAY,IAKpE,GAJA9K,EAASE,SAAStF,MAAM8G,MAAMmJ,UAAY,GAC1C7K,EAASE,SAAStF,MAAM8G,MAAMoJ,WAAa,GAC3C9K,EAASE,SAAStF,MAAM8G,MAAMqJ,YAAc,GAExC/K,EAAS0D,SAAU,CACnB,IAAIvH,EAAM,EACNG,EAAO,EAEgC,KAAvC0D,EAASE,SAASoC,OAAOZ,MAAMvF,MAC/BA,EAAM6O,SAAShL,EAASE,SAASoC,OAAOZ,MAAMvF,IAAK,KAEvD6D,EAASE,SAASoC,OAAOZ,MAAMvF,IAAOA,GAAO0O,EAAYpM,KAAmB,KAEhC,KAAxCuB,EAASE,SAASoC,OAAOZ,MAAMpF,OAC/BA,EAAO0O,SAAShL,EAASE,SAASoC,OAAOZ,MAAMpF,KAAM,KAEzD0D,EAASE,SAASoC,OAAOZ,MAAMpF,KAAQA,GAAQwO,EAAalM,KAAoB,MAUxF,SAASwJ,GAAqBpI,GAErBA,EAAS1G,IAAI,UAAa0G,EAAS1G,IAAI,UAGxCmP,GAAqBzI,GAFrB0I,GAAkB1I,GAkE1B,IAAIiL,IAAc,EACdC,GAAoB,EAWxB,SAASpG,GAAkB7D,EAAOjB,GAC9B,GAAGiB,EAAMkK,UAAYD,GAAsB,MAAQA,GAAsBjK,EAAMkK,aAAeF,GAAY,CACtG,IAAIP,EAASzJ,EAAMwJ,YAAcxJ,EAAMyJ,QACE,IAArC1K,EAAS1G,IAAI,qBAAgCoR,IAAW1K,EAASE,SAAStF,OAC1E0P,GAAatK,GAGrBiL,IAAc,EAIlB,IAAIG,GAAa,EAEbC,IAAc,EASlB,SAASd,GAAgBvK,EAAUsL,GAC/B,GAAGjM,KAAKkM,MAAQH,GAAa,MAAQA,GAAa/L,KAAKkM,OACnD,IAAK,IAAIC,EAAM,EAAGA,EAAMxL,EAASQ,WAAW4C,QAAQ1N,OAAQ8V,GAAO,EAAG,CAClE,IAAItJ,EAASlC,EAASQ,WAAW4C,QAAQoI,GACzC,IAAKtJ,EAAOvE,QAAQ8N,UAAYH,EAAMpJ,GAAS,CAC3C,IAAIwJ,EAAazJ,EAAiBuJ,EAAKtJ,GACN,oBAAtBlC,EAAS+J,UAChB/J,EAAS+J,SAAS/H,MAAMhC,EAAU,CAAC0L,KAGb,IAAtBA,EAAW7O,QACXmD,EAAStD,QAEb,QAchB,SAASqI,GAAoB9D,EAAOjB,GAChC,IAAI0K,EAASzJ,EAAMwJ,YAAcxJ,EAAMyJ,OACvCH,GAAgBvK,GAAU,SAAUkC,GAEhC,OAAOA,EAAOvE,UAAY+M,IAAWW,IAAc,MAY3D,SAASM,GAAa1K,GAGlB,IAAIoK,GAAJ,CAIA,IAAIrL,EAAWvC,EAAYA,EAAY/H,OAAS,GAC5CkW,EAAU3K,EAAM2K,QACpB,OAA2C,IAAvC5L,EAASQ,WAAW4C,QAAQ1N,QAAgBkW,IAAY3R,IAAyC,IAA7B+F,EAAS1G,IAAI,aACjFgR,GAAatK,IACN,GACDyC,EAASvE,QAAQ0N,IAAY,GACnCrB,GAAgBvK,GAAU,SAAUkC,GAChC,OAAOA,EAAOiE,MAAQyF,MAEnB,QAJL,EARFP,IAAc,EAuBtB,SAASQ,GAAe5K,GACpB,IAAIjB,EAAWvC,EAAYA,EAAY/H,OAAS,GAC5CkW,EAAU3K,EAAM2K,QACpB,GAAIA,IAAY3R,GAAa2R,IAAY3R,GAErC,IADA,IAAImJ,EAAUpD,EAASQ,WAAW4C,QACzBpF,EAAI,EAAGA,EAAIoF,EAAQ1N,OAAQsI,GAAK,EACrC,GAAIM,SAASqF,gBAAkBP,EAAQpF,GAAGL,QACtC,OAAQiO,GACR,KAAK3R,EAED,YADAmJ,GAASpF,GAAKoF,EAAQ1N,QAAU,GAAGiI,QAAQwF,QAE/C,KAAKlJ,EAED,YADAmJ,GAASpF,EAAI,GAAKoF,EAAQ1N,QAAQiI,QAAQwF,cAKpD,GAAIyI,EAAU3R,EAAW,GAAK2R,EAAU3R,EAAU,GAAKwI,EAASvE,QAAQ0N,IAAY,EAMtF,OALA3K,EAAM6K,iBACN7K,EAAM8K,kBACNxB,GAAgBvK,GAAU,SAAUkC,GAChC,OAAOA,EAAOiE,MAAQyF,MAEnB,EAaf,SAAS/D,GAAS7H,EAAUgM,GAExB,GAAIA,EACAA,EAAY7I,YACT,CAEH,IAAIA,EAAQnD,EAASQ,WAAW2C,MAE5BxF,EAAUwF,EAAMxF,QAEpB,cAAewF,EAAMxF,SAErB,IAAK,SACGqC,EAASQ,WAAW4C,QAAQ1N,OAASyN,EAAMxF,UAGvCA,GAD0B,IAA1BqC,EAAS1G,IAAI,SACH0G,EAASE,SAASuF,MAAM,GAExBzF,EAASQ,WAAW4C,QAAQD,EAAMxF,SAASA,SAG7D,MAEJ,IAAK,SACDA,EAAUqC,EAASE,SAAS3B,KAAK0N,cAAc9I,EAAMxF,SACrD,MAEJ,IAAK,WACDA,EAAUwF,EAAMxF,QAAQ0E,KAAKrC,IAKO,IAApCA,EAAS1G,IAAI,qBAAoD,qBAAZqE,GAAuC,OAAZA,GAA4D,IAAvCqC,EAASQ,WAAW4C,QAAQ1N,UACjIiI,EAAUqC,EAASE,SAASuF,MAAM,IAGlC9H,GAAWA,EAAQwF,QACnBxF,EAAQwF,QAEJA,EAAME,QAAU1F,EAAQ0F,QACxB1F,EAAQ0F,WAexB,SAASsD,GAAQ1F,EAAOjB,GAGpB,IAAKA,EACD,IAAK,IAAIhC,EAAIP,EAAY/H,OAAS,EAAGsI,GAAK,EAAGA,GAAK,EAC9C,GAAIP,EAAYO,GAAGuJ,UAAW,CAC1BvH,EAAWvC,EAAYO,GACvB,MAKZ,GAAGgC,GAEKA,EAASuH,UAAW,CAEpB,IAKIyE,EALAE,EAAalM,EAASE,SAASuF,MAAM,GACrC0G,EAAYnM,EAASE,SAASuF,MAAM,GACpC2G,EAAqBnL,EAAMoL,cAC3BC,EAAStM,EAASE,SAASC,KAAKoM,SAASH,GACzC1B,EAASzJ,EAAMwJ,YAAcxJ,EAAMyJ,OAIvC,GACKA,IAAWwB,IAAeI,GAE1B5B,IAAWyB,GAAaC,IAAuBF,EAChD,OACKxB,IAAWyB,GAAazB,IAAWpM,SAASC,KACjDyN,EAAcE,EACTxB,IAAWwB,GAAcE,IAAuBD,EACrDH,EAAcQ,GAAaxM,GACtB0K,IAAWwB,GAAcI,IAC9BN,EAAcQ,GAAaxM,GAAU,IAGzC6H,GAAS7H,EAAUgM,IAI/B,SAASQ,GAAaxM,EAAUyM,GAC5B,IAAIC,EAAY,GAAGC,MAAMtK,KAAKrC,EAASE,SAASoC,OAAOsK,iBAAiB1S,EAASsB,WAC9EiR,GACCC,EAAUG,UAEd,IAAI,IAAI7O,EAAE,EAAEA,EAAE0O,EAAUhX,OAAOsI,GAAG,EAAE,CAChC,IAAIxC,EAAWkR,EAAU1O,GAEzB,GAAMxC,EAASsR,cAAgBtR,EAASiO,aAAejO,EAASuR,cAAgBvR,EAASwR,iBAAiBtX,OACtG,OAAO8F,GAInB,SAASyR,GAAWhM,GAChB,IAAIjB,EAAWvC,EAAYA,EAAY/H,OAAS,GAC5CsK,GAAYiB,EAAMiM,UAAYjM,EAAM2K,UAAY3R,GAChD+F,EAASE,SAASuF,MAAM,GAAGtC,QAWnC,SAAS4D,GAAwB9F,EAAOjB,GAEpCmN,aAAanN,EAASQ,WAAWoD,SAGjCiE,GAAS7H,GAGTqL,IAAc,EAGdlJ,EAAc,UAAWnC,GAGzBsB,EAAItB,EAASE,SAASoC,OAAQhH,EAAWiG,KAAMvB,EAASQ,WAAWyE,qBAEnEpH,EAAYmC,EAASE,SAASC,KAAMpE,GAWxC,SAASiL,GAAyB/F,EAAOjB,GAErCmN,aAAanN,EAASQ,WAAWqD,UAEjCvC,EAAItB,EAASE,SAASoC,OAAQhH,EAAWiG,KAAMvB,EAASQ,WAAW0E,sBAGnEgE,GAAUlJ,GAEVsJ,GAAYtJ,GAGRA,EAASwH,gBAAkBxH,EAAS1G,IAAI,mBACxC6D,GAAQ6C,GAI+B,oBAAhCA,EAASQ,WAAW2E,SAC3BnF,EAASQ,WAAW2E,QAAQnD,MAAMhC,GAK1C,IAAInF,GAAU,KAEVuS,GAAU,EAEVC,GAAU,EACVC,GAAQ,QACRC,GAAQ,QACRC,GAAS,KACTC,IAAa,EACbC,GAAe,KAWnB,SAASC,GAAY1M,EAAOtD,GACxB,IAAIrB,EAAQ2E,EAAMqM,IAASF,GACvBjR,EAAQ8E,EAAMsM,IAASF,GAExBI,KACCtR,GAAOmC,SAASC,KAAKI,WAGzBhB,EAAQ+D,MAAMpF,KAAOA,EAAO,KAC5BqB,EAAQ+D,MAAMvF,IAAMA,EAAM,KAW9B,SAASyR,GAAmB3M,EAAOtD,GAC/B,IAAIrB,EAAQ2E,EAAMqM,IAASF,GACvBjR,EAAQ8E,EAAMsM,IAASF,GAExBI,KACCtR,GAAOmC,SAASC,KAAKI,WAGzBhB,EAAQ+D,MAAMpF,KAAOuR,KAAKC,IAAIN,GAAOO,QAASF,KAAKG,IAAIR,GAAOS,QAAS3R,IAAS,KAE5EqB,EAAQ+D,MAAMvF,IADfsR,GACqBI,KAAKC,IAAIN,GAAOU,OAAQL,KAAKG,IAAIR,GAAOW,OAAQhS,IAAQ,KAExD0R,KAAKG,IAAIR,GAAOW,OAAQhS,GAAO,KAc3D,SAASyK,GAAU3F,EAAOjB,GACtB,GAAkB,OAAd5E,KAAuB4E,EAASwH,eAAiBxH,EAAS1G,IAAI,WAAY,CAC1E,IAAI8U,EAAU9R,EAAK,EAAGH,EAAI,EAU1B,GATmB,eAAf8E,EAAMM,MACNN,EAAM6K,iBACNsC,EAAWnN,EAAMoN,cAAc,GAC/Bf,GAAQ,UACRC,GAAQ,WACgB,IAAjBtM,EAAMiB,SACbkM,EAAWnN,GAGXmN,EAAU,CAEV,IAAIzQ,EAAUqC,EAASE,SAASoC,OAoBhC,GAnBA5E,EAASC,EAAS5B,GAEd4B,EAAQ+D,MAAMpF,OACdA,EAAO0O,SAASrN,EAAQ+D,MAAMpF,KAAM,KAGpCqB,EAAQ+D,MAAMvF,MACdA,EAAM6O,SAASrN,EAAQ+D,MAAMvF,IAAK,KAGtCiR,GAAUgB,EAASd,IAAShR,EAC5B+Q,GAAUe,EAASb,IAASpR,EAEzB6D,EAASuH,UACR8F,IAAWrN,EAASE,SAAStF,MAAM+D,UAC9BqB,EAAS2K,aACd0C,IAAW/O,SAASC,KAAKI,WAG1BqB,EAAS1G,IAAI,eAAe,CAC3B,IAAIgV,EAAU3Q,EACV4Q,GAAcjS,EACdkS,GAAarS,EAGjB,GACIoS,GAAcD,EAAQC,WACtBC,GAAaF,EAAQE,gBAChBF,EAAUA,EAAQxB,cAE3BU,GAAS,CACLO,QAAUQ,EACVN,SAAWM,EACXL,OAAU5P,SAASI,gBAAgBkJ,aAAejK,EAAQiK,aAAe4G,EACzEL,QAAWK,GAEfd,GAAeE,QAEfJ,GAAS,KACTE,GAAeC,GAUnB,OANAxL,EAAc,SAAUnC,GAExByN,IAAczN,EAASuH,WAAavH,EAAS2K,WAC7C9P,GAAUmF,EACV0N,GAAaU,EAAUzQ,GACvBD,EAASY,SAASC,KAAMxC,KACjB,IAYnB,SAAS0S,GAAKxN,GAEN,IAAImN,EADJvT,KAEmB,cAAfoG,EAAMM,MACNN,EAAM6K,iBACNsC,EAAWnN,EAAMoN,cAAc,IACP,IAAjBpN,EAAMiB,SACbkM,EAAWnN,GAEXmN,GACAV,GAAaU,EAAUvT,GAAQqF,SAASoC,SAWpD,SAASoM,KACL,GAAI7T,GAAS,CACT,IAAImF,EAAWnF,GACfA,GAAU2S,GAAS,KACnB3P,EAAYS,SAASC,KAAMxC,IAC3B8B,EAAYmC,EAASE,SAASoC,OAAQvG,GAEtCoG,EAAc,UAAWnC,IAWjC,SAASkJ,GAAUlJ,GACfnF,GAAU,KACV,IAAI8C,EAAUqC,EAASE,SAASoC,OAChC3E,EAAQ+D,MAAMpF,KAAOqB,EAAQ+D,MAAMvF,IAAM,GAgC7C,IAAIf,GAAY,KAEZuT,GAAeC,OAAOC,IAEtBC,GAAgB,EAEhBC,GAAW,EAEXC,GAAe,EA4EnB,SAASnI,GAAY5F,EAAOjB,GAEpB,IAAIoO,EADR,IAAKpO,EAASwH,gBAES,eAAfvG,EAAMM,MACNN,EAAM6K,iBACNsC,EAAWnN,EAAMoN,cAAc,IACP,IAAjBpN,EAAMiB,SACbkM,EAAWnN,GAEXmN,GAAU,CAEVjM,EAAc,WAAYnC,GAE1B5E,GAAY4E,EACZgP,GAAehP,EAASE,SAAS+F,aAAa8G,aAAe,EAC7D,IAAIpP,EAAUqC,EAASE,SAASoC,OAYhC,OAXA5E,EAASC,EAAS5B,GAClB4S,GAAe3D,SAASrN,EAAQ+D,MAAMpF,KAAM,IAC5CqB,EAAQ+D,MAAMuN,OAAStR,EAAQoP,aAAe,KAC9CpP,EAAQ+D,MAAMwN,UAAYlP,EAASE,SAAS4F,OAAOiH,aAAe/M,EAASE,SAAS8F,OAAO+G,aAAe,KAC1GpP,EAAQ+D,MAAMyN,OAASL,GAAgBnR,EAAQ8L,aAAe,KAE/B,SAA3B9L,EAAQ+D,MAAM0N,WACdzR,EAAQ+D,MAAMqN,UAAYA,GAAWpR,EAAQ8L,aAAe,MAEhE9L,EAAQ+D,MAAM0N,SAAW,OACzB1R,EAASY,SAASC,KAAMxC,KACjB,GAYnB,SAASsT,GAAOpO,GAER,IAAImN,EADJhT,KAEmB,cAAf6F,EAAMM,MACNN,EAAM6K,iBACNsC,EAAWnN,EAAMoN,cAAc,IACP,IAAjBpN,EAAMiB,SACbkM,EAAWnN,GAEXmN,GAhHZ,SAAuBnN,EAAOtD,EAAS2R,GAGnC,IASIC,EAAGC,EATHlB,EAAU3Q,EACV4Q,EAAa,EACbC,EAAY,EAChB,GACID,GAAcD,EAAQC,WACtBC,GAAaF,EAAQE,gBAChBF,EAAUA,EAAQxB,eAIN,IAAjBwC,GACAC,EAAItO,EAAMwO,MACVD,EAAIvO,EAAMyO,QAEVH,EAAItO,EAAM0O,QACVH,EAAIvO,EAAM2O,SAGd,IAAIC,EAAQzR,IAgBZ,GAfIyR,IAEAN,EAAIjR,SAASC,KAAKkL,YAAc8F,EAE3BO,MAAMnB,MACPJ,EAAajQ,SAASC,KAAKkL,YAAc8E,EAAa5Q,EAAQ8L,cAKtE9L,EAAQ+D,MAAMuN,OAAUO,EAAIhB,EAAYQ,GAAgB,KACxDrR,EAAQ+D,MAAMyN,MAASI,EAAIhB,EAAaS,GAAgB,MAInDc,MAAMnB,IAAe,CACtB,IAAIoB,EAAuD,GAAhDlC,KAAKmC,IAAIrS,EAAQ8L,YAAcqF,IACtCe,IAIAE,IAAS,GAETpS,EAAQ8L,YAAcqF,GAEtBnR,EAAQ+D,MAAMpF,KAAQqS,GAAeoB,EAAQ,KACtCpS,EAAQ8L,aAAesF,KAE9BpR,EAAQ+D,MAAMpF,KAAQqS,GAAeoB,EAAQ,OA+D7CE,CAAc7B,EAAUhT,GAAU8E,SAASoC,QAASlH,GAAU9B,IAAI,WAAa8B,GAAU9B,IAAI,YAWzG,SAAS4W,KACL,GAAI9U,GAAW,CACX,IAAI4E,EAAW5E,GACfA,GAAY,KACZyC,EAAYS,SAASC,KAAMxC,IAC3B8B,EAAYmC,EAASE,SAASoC,OAAQvG,GACtCkP,IAAc,EAEd9I,EAAc,YAAanC,IAWnC,SAASsJ,GAAYtJ,GACjB5E,GAAY,KACZ,IAAIuC,EAAUqC,EAASE,SAASoC,OACD,SAA3B3E,EAAQ+D,MAAM0N,WAEdzR,EAAQ+D,MAAM0N,SAAWzR,EAAQ+D,MAAMqN,SAAWpR,EAAQ+D,MAAMyN,MAAQxR,EAAQ+D,MAAMuN,OAAStR,EAAQ+D,MAAMwN,UAAYvR,EAAQ+D,MAAMpF,KAAO,GAE9IqS,GAAeC,OAAOC,IACtBC,GAAgBC,GAAWC,GAAe,GAsClD,SAASmB,KACL,IAAK,IAAInS,EAAI,EAAGA,EAAIP,EAAY/H,OAAQsI,GAAK,EAAG,CAC5C,IAAIgC,EAAWvC,EAAYO,GACvBgC,EAAS1G,IAAI,eACb4P,GAAUlJ,GACVsJ,GAAYtJ,KAqHxB,SAASqI,GAAmBrI,GACxBe,EAAGf,EAASE,SAASoC,OAAQ,QAAStC,EAASQ,WAAWqE,qBAAqB,GAUnF,SAASsD,GAAqBnI,GAC1BsB,EAAItB,EAASE,SAASoC,OAAQ,QAAStC,EAASQ,WAAWqE,qBAAqB,GAYpF,SAASoE,GAAkBjJ,GACvBe,EAAGf,EAASE,SAAS4F,OAAQ,YAAa9F,EAASQ,WAAWmE,kBAC9D5D,EAAGf,EAASE,SAAS4F,OAAQ,aAAc9F,EAASQ,WAAWmE,kBAAkB,GAAO,GAU5F,SAASwE,GAAoBnJ,GACzBsB,EAAItB,EAASE,SAAS4F,OAAQ,YAAa9F,EAASQ,WAAWmE,kBAC/DrD,EAAItB,EAASE,SAAS4F,OAAQ,aAAc9F,EAASQ,WAAWmE,kBAAkB,GAAO,GAY7F,SAAS0E,GAAoBrJ,GACzBe,EAAGf,EAASE,SAAS+F,aAAc,YAAajG,EAASQ,WAAWoE,oBACpE7D,EAAGf,EAASE,SAAS+F,aAAc,aAAcjG,EAASQ,WAAWoE,oBAAoB,GAAO,GAUpG,SAAS2E,GAAsBvJ,GAC3BsB,EAAItB,EAASE,SAAS+F,aAAc,YAAajG,EAASQ,WAAWoE,oBACrEtD,EAAItB,EAASE,SAAS+F,aAAc,aAAcjG,EAASQ,WAAWoE,oBAAoB,GAAO,GAyBrG,MAAO,CACHrE,OAAON,GAMPyD,OAAQ,WACJ,OAAO9M,KAAK4J,WAAWkD,QAE3B6D,QAAS,WACL,OAAO3Q,KAAKsJ,SAASC,KAAKzJ,UAAUwH,QAAQnC,GAAoB,GAEpEyL,YAAY,WACR,OAAO5Q,KAAKsJ,SAASC,KAAKzJ,UAAUwH,QAAQnC,IAAsB,GAEtE4O,SAAS,WACL,OAAO/T,KAAKsJ,SAASC,KAAKzJ,UAAUwH,QAAQnC,IAAoB,GAEpEmB,SAAS,WAIL,OAHItG,KAAK4Q,eACLtK,GAAStG,MAENA,MAEXuG,QAAQ,WAIJ,OAHGvG,KAAK4Q,eACJrK,GAAQvG,MAELA,MAEXiP,IAAI,WAIA,OAHIjP,KAAK+T,YACL9E,GAAIjP,MAEDA,MAEXgU,MAAM,WAIF,OAHGhU,KAAK+T,YACJC,GAAMhU,MAEHA,MAEXkQ,aAAa,WAET,OADAA,GAAa,EAAMlQ,MACZA,MAUXwZ,OAAO,SAASpS,EAAEvH,GACd,IAAIqZ,MAAM9R,KAAO8R,MAAMrZ,GAAG,CAEtB0L,EAAc,SAAUvL,MAExB,IAAI+G,EAAU/G,KAAKsJ,SAASoC,OACxBgM,EAAU3Q,EACV4Q,EAAa,EACbC,EAAY,EAGZ7Q,EAAQ+D,MAAMpF,OACdiS,GAAcvD,SAASrN,EAAQ+D,MAAMpF,KAAM,KAE3CqB,EAAQ+D,MAAMvF,MACdqS,GAAaxD,SAASrN,EAAQ+D,MAAMvF,IAAK,KAG7C,GACIoS,GAAcD,EAAQC,WACtBC,GAAaF,EAAQE,gBAChBF,EAAUA,EAAQxB,cAG3B,IAAIxQ,EAAQ0B,EAAIuQ,EACZpS,EAAQ1F,EAAI+X,EAGZpQ,MACA9B,IAAS,GAGbqB,EAAQ+D,MAAMpF,KAAOA,EAAO,KAC5BqB,EAAQ+D,MAAMvF,IAAMA,EAAM,KAG1BgG,EAAc,UAAWvL,MAE7B,OAAOA,MAcXyZ,SAAS,SAASlB,EAAMF,GACpB,IAAIqB,EAAIC,WAAWpB,GACfqB,EAAID,WAAWtB,GACfwB,EAAQ,kBAGZ,IAAIX,MAAMQ,KAAOR,MAAMU,KAAgC,IAA1B5Z,KAAK0C,IAAI,aAAsB,CAGxD6I,EAAc,WAAYvL,OAEtB,GAAKuY,GAAOuB,MAAMD,KAClBH,EAAIA,EAAI,IAAMhS,SAASI,gBAAgBiS,cAGvC,GAAK1B,GAAQyB,MAAMD,KACnBD,EAAIA,EAAI,IAAMlS,SAASI,gBAAgBkJ,cAG3C,IAAIjK,EAAU/G,KAAKsJ,SAASoC,OACG,SAA3B3E,EAAQ+D,MAAM0N,WACdzR,EAAQ+D,MAAMqN,UAAYA,GAAWpR,EAAQ8L,aAAe,MAEhE9L,EAAQ+D,MAAM0N,SAAW,OACzBzR,EAAQ+D,MAAMwN,UAAYtY,KAAKsJ,SAAS4F,OAAOiH,aAAenW,KAAKsJ,SAAS8F,OAAO+G,aAAe,KAClGpP,EAAQ+D,MAAMyN,MAAQmB,EAAI,KAC1B3S,EAAQ+D,MAAMuN,OAASuB,EAAI,KAG3BrO,EAAc,YAAavL,MAE/B,OAAOA,MAUXga,QAAU,SAAUzK,EAAK9O,GACrB,IAAIwZ,EAAOja,KACPqT,EAASJ,GAAOjT,KAAMA,KAAK4J,WAAWE,SAAS,SAASnK,EAAEua,EAAEC,GAAIjJ,GAAc+I,EAAKta,EAAEua,EAAEC,KAAO5K,EAAK9O,GACvG,GAAiB,QAAd4S,EAAOC,GACN,OAAGD,EAAOG,MACCH,EAAO5S,MACgB,qBAAlBT,KAAKyJ,SACVwJ,GAAOjT,KAAMA,KAAKyJ,SAAUzJ,KAAKoa,gBAAkB,aAAc7K,EAAK9O,GAAOA,WAEpF,EAEF,GAAiB,QAAd4S,EAAOC,GAAa,CACzB,GAAGD,EAAOE,MAAMzU,OAAS,EAErB,IADA,IAAIqU,EAAWnT,KAAKoa,gBAAkB,aAC9BhT,EAAE,EAAEA,EAAEiM,EAAOE,MAAMzU,OAAOsI,GAAG,EAAE,CACnC,IAAIiT,EAAOhH,EAAOE,MAAMnM,GACpBiT,EAAK7G,OAAkC,qBAAlBxT,KAAKyJ,UAC1BwJ,GAAOjT,KAAMA,KAAKyJ,SAAU0J,EAAUkH,EAAK9K,IAAK8K,EAAK5Z,OAIjE,OAAOT,OAMfqQ,IAAI,SAASd,EAAK9O,GAEd,OADAT,KAAKga,QAAQzK,EAAI9O,GACVT,MAKX0C,IAAI,SAAS6M,GACT,OAAOvP,KAAKga,QAAQzK,IAQxB+B,UAAU,SAASnC,GAQf,MAPsB,kBAAZA,GACNjH,EAAclI,KAAKsJ,SAAS4F,QAC5BlP,KAAKsJ,SAAS4F,OAAOR,UAAYS,GAC3BA,aAAmBjQ,EAAOob,aAAeta,KAAKsJ,SAAS4F,OAAON,aAAeO,IACnFjH,EAAclI,KAAKsJ,SAAS4F,QAC5BlP,KAAKsJ,SAAS4F,OAAOW,YAAYV,IAE9BnP,MAQXua,WAAW,SAASpL,GAQhB,MAPsB,kBAAZA,GACNjH,EAAclI,KAAKsJ,SAAS6F,SAC5BnP,KAAKsJ,SAAS6F,QAAQT,UAAYS,GAC5BA,aAAmBjQ,EAAOob,aAAeta,KAAKsJ,SAAS6F,QAAQP,aAAeO,IACpFjH,EAAclI,KAAKsJ,SAAS6F,SAC5BnP,KAAKsJ,SAAS6F,QAAQU,YAAYV,IAE/BnP,MAOXwa,UAAW,SAAS1a,GAChB,OAAOE,KAAKya,MAAK,EAAM3a,IAO3B2a,KAAM,SAAUzW,EAAOlE,GAKnB,GAFAuJ,GAAWrJ,MAELA,KAAK4J,WAAWkD,OA8EjB,CAEDwF,GAAUtS,MAEV0S,GAAY1S,MAEZ8G,EAAS9G,KAAKsJ,SAASoC,OAAQvG,IAC/B,IAAI8U,EAAOja,KACX0a,YAAW,WACPzT,EAAYgT,EAAK3Q,SAASoC,OAAQvG,MACpC,SAxFyB,CAsD3B,GAnDAnF,KAAK4J,WAAWkD,QAAS,EACzBjG,EAAY9H,KAAKiB,MAGdsM,EAAShJ,SAASQ,gBACjB9D,KAAK4J,WAAWmD,cAAgBrF,SAASqF,eAIzCrF,SAASC,KAAKgT,aAAa,aAC3BjT,SAASC,KAAKgI,aAAc,WAAY7D,EAAW,KAI5B,oBAAjB9L,KAAK4a,SACX5a,KAAK4a,UAhcDxR,EAmcGpJ,KAjcQ,IAAvB6G,EAAY/H,SAEZqL,EAAGjL,EAAQ,SAAUqa,IACrBpP,EAAGzC,SAASC,KAAM,QAASoN,IAC3B5K,EAAGzC,SAASC,KAAM,UAAWsN,IAC7B9K,EAAGzC,SAASC,KAAM,QAASoI,IAG3B5F,EAAGzC,SAASI,gBAAiB,YAAa+P,IAC1C1N,EAAGzC,SAASI,gBAAiB,YAAa+P,IAAM,GAAO,GACvD1N,EAAGzC,SAASI,gBAAiB,UAAWgQ,IACxC3N,EAAGzC,SAASI,gBAAiB,WAAYgQ,IAEzC3N,EAAGzC,SAASI,gBAAiB,YAAa2Q,IAC1CtO,EAAGzC,SAASI,gBAAiB,YAAa2Q,IAAQ,GAAO,GACzDtO,EAAGzC,SAASI,gBAAiB,UAAWwR,IACxCnP,EAAGzC,SAASI,gBAAiB,WAAYwR,KAI7CnP,EAAGf,EAASE,SAASwF,SAASC,UAAW,QAAS3F,EAASQ,WAAWwE,sBACtEjE,EAAGf,EAASE,SAAS8F,OAAQ,QAAShG,EAASQ,WAAWuE,qBAC1DhE,EAAGf,EAASE,SAASuF,MAAM,GAAI,UAAWzF,EAASQ,WAAWkE,cAC9D3D,EAAGf,EAASE,SAASuF,MAAM,GAAI,UAAWwH,IAC1ClM,EAAGf,EAASE,SAASuF,MAAM,GAAI,UAAWzF,EAASQ,WAAWkE,cAG9D2G,IAAc,EAEdtK,EAAGf,EAASE,SAASoC,OAAQhH,EAAWiG,KAAMvB,EAASQ,WAAWyE,qBAG7DjF,EAAS1G,IAAI,UACd+O,GAAmBrI,GAInBA,EAAS1G,IAAI,cACb+P,GAAoBrJ,GAIpBA,EAAS1G,IAAI,YACb2P,GAAkBjJ,QAwZD1I,IAAVsD,GACChE,KAAKqQ,IAAI,QAASrM,GA5vD9B2H,EAAU3D,IACV4D,EAAU/D,IAiwDF4I,KAGwB,kBAAd3Q,GAAwC,KAAdA,IAChCE,KAAK4J,WAAW9J,UAAYA,EAC5BgH,EAAS9G,KAAKsJ,SAASC,KAAMzJ,IAI5BE,KAAK0C,IAAI,kBACV1C,KAAKsG,WACAtG,KAAK4Q,eACVrK,GAAQvG,MAGZwR,GAAqBxR,MACrBA,KAAKsJ,SAASC,KAAKsR,gBAAgB,SACnC5T,EAAYjH,KAAKsJ,SAASC,KAAMpE,GAChC2B,EAAS9G,KAAKsJ,SAASC,KAAMpE,GAG7BoR,aAAcvW,KAAK4J,WAAWoD,SAC9BhN,KAAK4J,WAAWoD,QAAU0N,WAAY1a,KAAK4J,WAAWyE,oBAAqB3J,EAAWkG,UAAY,IAAO,KAEtGmB,EAAS,CAER,IAAIxC,EAAOvJ,KAAKsJ,SAASC,KACzBA,EAAKuB,MAAM2D,QAAW,OACtBiM,YAAW,WAAWnR,EAAKuB,MAAM2D,QAAW,UAAW,GAIlDzO,KAAKsJ,SAASC,KAAKsJ,YAG5B5L,EAAYjH,KAAKsJ,SAASC,KAAMpE,GAGhCoL,KAGgC,oBAAtBvQ,KAAK0G,MAAMwG,QACjBlN,KAAK0G,MAAMwG,OAAOzB,KAAKzL,MAI3BuL,EAAc,SAAUvL,MA1fpC,IAAoBoJ,EAwgBZ,OAAOpJ,MAOX8F,MAAO,WAvdX,IAAsBsD,EAwgBd,OAhDIpJ,KAAK4J,WAAWkD,SAEwB,IAArCvB,EAAc,YAAavL,QA1dpBoJ,EA4dOpJ,KA1dE,IAAvB6G,EAAY/H,SAEZ4L,EAAIxL,EAAQ,SAAUqa,IACtB7O,EAAIhD,SAASC,KAAM,QAASoN,IAC5BrK,EAAIhD,SAASC,KAAM,UAAWsN,IAC9BvK,EAAIhD,SAASC,KAAM,QAASoI,IAE5BrF,EAAIhD,SAASI,gBAAiB,YAAa+P,IAC3CnN,EAAIhD,SAASI,gBAAiB,UAAWgQ,IAEzCpN,EAAIhD,SAASI,gBAAiB,YAAa2Q,IAC3C/N,EAAIhD,SAASI,gBAAiB,UAAWwR,KAI7C5O,EAAItB,EAASE,SAASwF,SAASC,UAAW,QAAS3F,EAASQ,WAAWwE,sBACvE1D,EAAItB,EAASE,SAAS8F,OAAQ,QAAShG,EAASQ,WAAWuE,qBAC3DzD,EAAItB,EAASE,SAASuF,MAAM,GAAI,UAAWzF,EAASQ,WAAWkE,cAC/DpD,EAAItB,EAASE,SAASuF,MAAM,GAAI,UAAWwH,IAC3C3L,EAAItB,EAASE,SAASuF,MAAM,GAAI,UAAWzF,EAASQ,WAAWkE,cAG/D3D,EAAGf,EAASE,SAASoC,OAAQhH,EAAWiG,KAAMvB,EAASQ,WAAW0E,sBAG7DlF,EAAS1G,IAAI,UACd6O,GAAqBnI,GAIrBA,EAAS1G,IAAI,YACb6P,GAAoBnJ,GAIpBA,EAAS1G,IAAI,cACbiQ,GAAsBvJ,GAwbdnC,EAAYjH,KAAKsJ,SAASC,KAAMpE,GAChC2B,EAAS9G,KAAKsJ,SAASC,KAAMpE,GAG7BoR,aAAcvW,KAAK4J,WAAWqD,UAC9BjN,KAAK4J,WAAWqD,SAAWyN,WAAY1a,KAAK4J,WAAW0E,qBAAsB5J,EAAWkG,UAAY,IAAO,KAE3G9D,EAAS9G,KAAKsJ,SAASC,KAAMpE,GAEpBnF,KAAKsJ,SAAStF,MAAM6O,YAGzBvG,EAAShJ,SAASQ,eAAiB9D,KAAK4J,WAAWmD,gBACnD/M,KAAK4J,WAAWmD,cAAcR,QAC9BvM,KAAK4J,WAAWmD,cAAgB,MAIK,qBAA9B/M,KAAK4J,WAAW9J,WAA2D,KAA9BE,KAAK4J,WAAW9J,WACpEmH,EAAYjH,KAAKsJ,SAASC,KAAMvJ,KAAK4J,WAAW9J,WAInB,oBAAvBE,KAAK0G,MAAM0G,SACjBpN,KAAK0G,MAAM0G,QAAQ3B,KAAKzL,MAI5BuL,EAAc,UAAWvL,MAGzB6G,EAAYU,OAAOV,EAAYS,QAAQtH,MAAM,GAC7CA,KAAK4J,WAAWkD,QAAS,EAEzB2D,MAKJ5J,EAAY/H,QAAuB,MAAbgN,GACtBpE,SAASC,KAAKkT,gBAAgB,YAE3B7a,MAOX8a,YAAY,WAER,OADAxO,EAASyO,SAAS/a,MACXA,MAOXuO,QAAQ,WAaJ,OAZGvO,KAAK4J,aACA5J,KAAK4J,WAAWkD,QAEhB9M,KAAK4J,WAAW2E,QAAU,WACtBpF,EAASnJ,KAAMqJ,KAGnBrJ,KAAK8F,SACC9F,KAAK4J,WAAW2E,SACtBpF,EAASnJ,KAAMqJ,KAGhBrJ,OA/rEL,GAmsEV+E,EAAY,WACZ,IACIgC,EACAiU,EAAgB,GAChB7V,EAAU7B,EAASyB,SAASI,QAC5B8V,EAAY9V,EAAQC,KAKxB,SAASiE,EAAWD,GAEXA,EAASQ,aACVR,EAASQ,WAAa,CAClB3E,SAAUqH,EAAShJ,SAASyB,SAASE,SACrCD,MAAOsH,EAAShJ,SAASyB,SAASC,OAGtC+B,EAAUW,SAAS8G,cAAc,QACb,kBAAmBlL,EAASyB,SAAWzB,EAASyB,SAASJ,cAAgBrB,EAASqB,iBAElGsW,EAAY9V,EAAQC,KAAO,sBAE/B8V,EAAe9R,IAIfrC,EAAQyC,aAAe9B,SAASC,MAChCD,SAASC,KAAKkI,YAAY9I,GAIlC,SAASoU,EAAa/R,GAClBA,EAASQ,WAAWwR,QAAS,EAC7BJ,EAAcjc,KAAKqK,GAUvB,SAAS8R,EAAe9R,GAEpB,OADArC,EAAQjH,UAAYmb,EACZ7R,EAASQ,WAAW3E,UAC5B,IAAK,YACD6B,EAASC,EAAS5B,EAAQI,IAAM,IAAMJ,EAAQK,OAC9C,MACJ,IAAK,WACDsB,EAASC,EAAS5B,EAAQI,IAAM,IAAMJ,EAAQO,MAC9C,MACJ,IAAK,aACDoB,EAASC,EAAS5B,EAAQI,IAAM,IAAMJ,EAAQQ,QAC9C,MACJ,IAAK,cACDmB,EAASC,EAAS5B,EAAQM,OAAS,IAAMN,EAAQO,MACjD,MACJ,IAAK,gBACDoB,EAASC,EAAS5B,EAAQM,OAAS,IAAMN,EAAQQ,QACjD,MAEJ,QACA,IAAK,eACDmB,EAASC,EAAS5B,EAAQM,OAAS,IAAMN,EAAQK,QAczD,SAAS6V,EAAOC,EAAKnI,GAEjB,SAASoI,EAAclR,EAAOjB,GACtBA,EAASQ,WAAW1E,aAA2D,SAA5CmF,EAAMyJ,OAAO0H,aAAa,eAC7DpS,EAASqS,SAAQ,GAIzB,SAASC,EAAerR,EAAOjB,GAE3BsB,EAAItB,EAASrC,QAASrC,EAAWiG,KAAM+Q,GAEvC3U,EAAQqB,YAAYgB,EAASrC,SAkBjC,SAAS4U,EAAYvS,GACjBmN,aAAanN,EAASQ,WAAWgS,OACjCrF,aAAanN,EAASQ,WAAWiS,mBAErC,OAnBA,SAAoBzS,GAahB,OAZKA,EAASQ,aACVR,EAASQ,WAAa,CAClBwR,QAAQ,EACRpW,WAAQtE,EACRkb,WAAOlb,EACPob,kBAAcpb,EACdqb,0BAAsBrb,EACtBmb,uBAAmBnb,GAEvB0I,EAASQ,WAAWkS,aAAe/Q,EAAS3B,EAAUmS,GACtDnS,EAASQ,WAAWmS,qBAAuBhR,EAAS3B,EAAUsS,IAE3DtS,EAMJC,CAAW,CAEdtC,QAASuU,EAOTvc,KAAM,SAAUid,EAAUC,GACtB,IAAKjc,KAAK4J,WAAWwR,OAAQ,CAKzB,IAAIjM,EAAS+M,EACb,OAJAf,EAAanb,MACb2b,EAAY3b,MAGJkL,UAAUpM,QAClB,KAAK,EACDod,EAAOlc,KAAK4J,WAAW5E,MACvB,MACJ,KAAK,EACyB,kBAAdgX,EACRE,EAAOF,GAEP7M,EAAU6M,EACVE,EAAOlc,KAAK4J,WAAW5E,OAE3B,MACJ,KAAK,EACDmK,EAAU6M,EACVE,EAAOD,EAkBX,OAfAjc,KAAK4J,WAAW1E,YAAcoH,EAAShJ,SAASyB,SAASG,YAElC,qBAAZiK,GACPnP,KAAKua,WAAWpL,GAGhBpK,EAAS6E,WAAW3E,SAASqC,QAAQ,OAAS,EAC9CP,EAAQ8I,YAAY7P,KAAK+G,SAEzBA,EAAQoV,aAAanc,KAAK+G,QAASA,EAAQ6H,YAEtC5O,KAAK+G,QAAQ8L,YACtB/L,EAAS9G,KAAK+G,QAAS5B,EAAQS,SAE/BuE,EAAGnK,KAAK+G,QAAS,QAAS/G,KAAK4J,WAAWkS,cACnC9b,KAAKgF,MAAMkX,GAEtB,OAAOlc,MAOXoc,UAAW,aAKXjJ,SAAUA,EAMVsI,QAAS,SAAUY,GAjJ3B,IAAqBjT,EAqKT,OAnBIpJ,KAAK4J,WAAWwR,SAChBO,EAAY3b,MACoB,oBAAnBA,KAAKoc,YAA0D,IAA9Bpc,KAAKoc,UAAU3Q,KAAKzL,QAE9D0K,EAAI1K,KAAK+G,QAAS,QAAS/G,KAAK4J,WAAWkS,cAEf,qBAAjB9b,KAAK+G,SAA2B/G,KAAK+G,QAAQyC,aAAezC,IAEnE/G,KAAK4J,WAAWiS,kBAAoBnB,WAAW1a,KAAK4J,WAAWmS,qBAAsBrX,EAAWkG,UAAY,IAAO,KACnH3D,EAAYjH,KAAK+G,QAAS5B,EAAQS,SAGL,oBAAlB5F,KAAKmT,UACZnT,KAAKmT,SAAS1H,KAAKzL,KAAMqc,IA/JhCjT,EAkKWpJ,KAjK5Bgb,EAAczT,OAAOyT,EAAc1T,QAAQ8B,GAAW,GACtDA,EAASQ,WAAWwR,QAAS,IAmKdpb,MAOXgF,MAAO,SAAUkX,GAGb,GAFAP,EAAY3b,MACZA,KAAK4J,WAAW5E,MAAwB,qBAATkX,GAAyBhD,OAAOgD,GAAgBnX,EAAS6E,WAAW5E,OAA3BkX,EACpElc,KAAK4J,WAAW5E,MAAQ,EAAG,CAC3B,IAAKiV,EAAOja,KACZA,KAAK4J,WAAWgS,MAAQlB,YAAW,WAAcT,EAAKwB,YAAsC,IAAxBzb,KAAK4J,WAAW5E,OAExF,OAAOhF,MAOXua,WAAY,SAAUpL,GAQlB,GAPuB,kBAAZA,GACPjH,EAAclI,KAAK+G,SACnB/G,KAAK+G,QAAQ2H,UAAYS,GAClBA,aAAmBjQ,EAAOob,aAAeta,KAAK+G,QAAQ6H,aAAeO,IAC5EjH,EAAclI,KAAK+G,SACnB/G,KAAK+G,QAAQ8I,YAAYV,IAE1BnP,KAAK4J,WAAW1E,YAAY,CAC3B,IAAIY,EAAQ4B,SAAS8G,cAAc,QACnC1H,EAAShB,EAAOX,EAAQW,OACxBA,EAAM6J,aAAa,cAAc,GACjC3P,KAAK+G,QAAQ8I,YAAY/J,GAE7B,OAAO9F,MAMXsc,cAAe,WAEX,OADAvX,EAASwX,WAAWvc,MACbA,QAMnB,MAAO,CASHga,QAAS,SAAUzK,EAAK9O,GAIpB,GAFA4I,EAAWrJ,MAEU,qBAAVS,EAEP,OAAOT,KAAK4J,WAAW2F,GAGvB,OAAQA,GACR,IAAK,WACDvP,KAAK4J,WAAW3E,SAAWxE,EAC3Bya,EAAelb,MACf,MACJ,IAAK,QACDA,KAAK4J,WAAW5E,MAAQvE,EAIhC,OAAOT,MAKXqQ,IAAI,SAASd,EAAI9O,GAEb,OADAT,KAAKga,QAAQzK,EAAI9O,GACVT,MAKX0C,IAAI,SAAS6M,GACT,OAAOvP,KAAKga,QAAQzK,IAUxB8L,OAAQ,SAAU1Q,EAAMwI,GAEpB9J,EAAWrJ,MAEX,IAAIsb,EAAM5T,SAAS8G,cAAc,OAEjC,OADA8M,EAAIxb,UAAYqF,EAAQG,SAA4B,kBAATqF,GAA8B,KAATA,EAAe,IAAMxF,EAAQE,OAASsF,EAAO,IACtG0Q,EAAOC,EAAKnI,IAQvBoJ,WAAY,SAAUC,GAElB,IADA,IAAIC,EAAQzB,EAAcjF,MAAM,GACvB3O,EAAI,EAAGA,EAAIqV,EAAM3d,OAAQsI,GAAK,EAAG,CACtC,IAAKgC,EAAWqT,EAAMrV,QACP1G,IAAX8b,GAAwBA,IAAWpT,GACnCA,EAASqS,aAhUb,GA8kBhB,IAAInP,EAAW,IAjQf,WAGI,IAAIoQ,EAAU,GAUd,SAASC,EAAOjd,EAAK0F,GAEjB,IAAK,IAAI6D,KAAQ7D,EACTA,EAAK8D,eAAeD,KACpBvJ,EAAIuJ,GAAQ7D,EAAK6D,IAGzB,OAAOvJ,EAYX,SAASkd,EAAWpd,GAChB,IAAIkM,EAASgR,EAAQld,GAAMkM,OAK3B,OAHIA,GAAmC,oBAAlBA,EAAO/B,QACxB+B,EAAO/B,OAAO+B,GAEXA,EAkCX,MAAO,CAMHpI,SAAUA,EASVoI,OAAQ,SAAUlM,EAAMqd,EAASC,EAAW1X,GAGxC,GAAuB,oBAAZyX,EACP,OAAOD,EAAWpd,GAGtB,GAAIQ,KAAKkJ,eAAe1J,GACpB,MAAM,IAAIiU,MAAM,wCAIpB,IAAIsJ,EAhDZ,SAAkBvd,EAAMqd,EAASC,EAAW1X,GACxC,IAAI2X,EAAa,CACbrR,OAAQ,KACRsR,QAASH,GAeb,YAVanc,IAAT0E,IACA2X,EAAWC,QAAU,WACjB,OAAOL,EAAO,IAAID,EAAQtX,GAAM4X,QAAW,IAAIH,KAIlDC,IAEDC,EAAWrR,OAASiR,EAAO,IAAII,EAAWC,QAAWtR,IAElDgR,EAAQld,GAAQud,EA8BFE,CAASzd,EAAMqd,EAASC,EAAW1X,GAKhDpF,KAAKR,GAHLsd,EAGa,WAET,GAAyB,IAArB5R,UAAUpM,OACV,OAAOie,EAAWrR,OAElB,IAAItC,EAAWuT,EAAO,IAAII,EAAWC,QAAWtR,GAMhD,OAJItC,GAAuC,oBAApBA,EAASO,QAC5BP,EAASO,OAAOP,GAEpBA,EAAQ,KAASgC,MAAMhC,EAAU8B,WAC1B9B,EAAQ,KAASgC,MAAMhC,IAKzB,WAMT,GAJI2T,EAAWrR,QAA8C,oBAA7BqR,EAAWrR,OAAO/B,QAC9CoT,EAAWrR,OAAO/B,OAAOoT,EAAWrR,QAGf,IAArBR,UAAUpM,OACV,OAAOie,EAAWrR,OAElB,IAAIA,EAASqR,EAAWrR,OAExB,OADAA,EAAM,KAASN,MAAM2R,EAAWrR,OAAQR,WACjCQ,EAAM,KAASN,MAAM2R,EAAWrR,UAYvDqP,SAAU,SAAUyB,GAEhB,IADA,IAAIC,EAAQ5V,EAAYkP,MAAM,GACrB3O,EAAI,EAAGA,EAAIqV,EAAM3d,OAAQsI,GAAK,EAAG,CACtC,IAAIgC,EAAWqT,EAAMrV,QACN1G,IAAX8b,GAAwBA,IAAWpT,GACnCA,EAAStD,UAarBkU,QAAS,SAAUxa,EAAM+P,EAAK9O,GAE1B,GAAa,aAATjB,EACA,OAAOuF,EAASiV,QAAQzK,EAAK9O,GAGjC,IAAIiL,EAASkR,EAAWpd,GACxB,OAAIkM,EACOA,EAAOsO,QAAQzK,EAAK9O,QAD/B,GAOJ4P,IAAK,SAAS7Q,EAAK+P,EAAI9O,GACnB,OAAOT,KAAKga,QAAQxa,EAAM+P,EAAI9O,IAKlCiC,IAAK,SAASlD,EAAM+P,GAChB,OAAOvP,KAAKga,QAAQxa,EAAM+P,IAc9B2N,OAAQ,SAAU5X,EAASqF,EAAMuR,EAAM/I,GACnC,OAAOpO,EAASsW,OAAO1Q,EAAMwI,GAAUpU,KAAKuG,EAAS4W,IAWzD5W,QAAS,SAAUA,EAAS4W,EAAM/I,GAC9B,OAAOpO,EAASsW,OAAO,KAAMlI,GAAUpU,KAAKuG,EAAS4W,IAWzDiB,QAAS,SAAU7X,EAAS4W,EAAM/I,GAC9B,OAAOpO,EAASsW,OAAO,UAAWlI,GAAUpU,KAAKuG,EAAS4W,IAW9DhZ,MAAO,SAAUoC,EAAS4W,EAAM/I,GAC5B,OAAOpO,EAASsW,OAAO,QAASlI,GAAUpU,KAAKuG,EAAS4W,IAW5DkB,QAAS,SAAU9X,EAAS4W,EAAM/I,GAC9B,OAAOpO,EAASsW,OAAO,UAAWlI,GAAUpU,KAAKuG,EAAS4W,IAO9DK,WAAY,WACRxX,EAASwX,gBAerBjQ,EAASZ,OAAO,SAAS,WACrB,MAAO,CACH2R,KAAM,SAAUC,EAAQC,EAAUC,GAC9B,IAAI7b,EAAO2D,EAASmY,EACpB,OAAQvS,UAAUpM,QAClB,KAAK,EACDwG,EAAUgY,EACV,MACJ,KAAK,EACuB,oBAAbC,GACPjY,EAAUgY,EACVG,EAAOF,IAEP5b,EAAQ2b,EACRhY,EAAUiY,GAEd,MACJ,KAAK,EACD5b,EAAQ2b,EACRhY,EAAUiY,EACVE,EAAOD,EAMX,OAHAxd,KAAKqQ,IAAI,QAAS1O,GAClB3B,KAAKqQ,IAAI,UAAW/K,GACpBtF,KAAKqQ,IAAI,OAAQoN,GACVzd,MAEXqM,MAAO,WACH,MAAO,CACHG,QAAS,CACL,CACIiD,KAAMnD,EAAShJ,SAASyC,SAASC,GACjCuJ,IAAKlM,EACLuQ,eAAe,EACf9T,UAAWwM,EAAShJ,SAASkD,MAAMR,KAG3CuG,MAAO,CACHxF,QAAS,EACT0F,QAAQ,GAEZ3C,QAAS,CACL/F,aAAa,EACbS,WAAW,KAIvB8L,MAAO,aAGPsK,QAAS,aAGT8C,WAAY,SAAUpY,GAClBtF,KAAKua,WAAWjV,IAEpBmE,SAAU,CACNnE,aAAS5E,EACT+c,UAAM/c,EACNid,WAAOjd,GAEX0Z,eAAgB,SAAU7K,EAAK6B,EAAUC,GACrC,OAAQ9B,GACR,IAAK,UACDvP,KAAK0d,WAAWrM,GAChB,MACJ,IAAK,QACGrR,KAAK4J,WAAW4C,QAAQ,GAAGzF,UAC3B/G,KAAK4J,WAAW4C,QAAQ,GAAGzF,QAAQ2H,UAAY2C,KAK3D8B,SAAU,SAAU2B,GAChB,GAAgC,oBAArB9U,KAAK0C,IAAI,QAAwB,CACxC,IAAIkb,EAAc5d,KAAK0C,IAAI,QAAQ+I,KAAKzL,KAAM8U,GACnB,qBAAhB8I,IACP9I,EAAW7O,QAAU2X,SAczCtR,EAASZ,OAAO,WAAW,WAEvB,IAAImS,EAAc,CACdjC,MAAO,KACPvU,MAAO,KACPoI,KAAM,KACNqO,SAAU,KACVC,KAAM,SAAU1T,EAAO4P,GACnB,GAAIA,EAAKnN,UAGL,GAFAmN,EAAKrQ,WAAW4C,QAAQqR,EAAYxW,OAAON,QAAQ2H,UAAYmP,EAAYpO,KAAO,YAAcoO,EAAYC,SAAW,YACvHD,EAAYC,UAAY,GACM,IAA1BD,EAAYC,SAAiB,CAC7BE,EAAiB/D,GACjB,IAAI3O,EAAS2O,EAAKrQ,WAAW4C,QAAQqR,EAAYxW,OAC7CyN,EAAazJ,EAAiBwS,EAAYxW,MAAOiE,GAExB,oBAAlB2O,EAAK9G,UACZ8G,EAAK9G,SAAS/H,MAAM6O,EAAM,CAACnF,KAGN,IAArBA,EAAWhP,OACXmU,EAAKnU,cAIbkY,EAAiB/D,KAK7B,SAAS+D,EAAiB/D,GACI,OAAtB4D,EAAYjC,QACZqC,cAAcJ,EAAYjC,OAC1BiC,EAAYjC,MAAQ,KACpB3B,EAAKrQ,WAAW4C,QAAQqR,EAAYxW,OAAON,QAAQ2H,UAAYmP,EAAYpO,MAInF,SAASyO,EAAiBjE,EAAM5S,EAAOyW,GACnCE,EAAiB/D,GACjB4D,EAAYC,SAAWA,EACvBD,EAAYxW,MAAQA,EACpBwW,EAAYpO,KAAOwK,EAAKrQ,WAAW4C,QAAQnF,GAAON,QAAQ2H,UAC1DmP,EAAYjC,MAAQuC,YAAYpT,EAASkP,EAAM4D,EAAYE,MAAO,KAClEF,EAAYE,KAAK,KAAM9D,GAI3B,MAAO,CACHoD,KAAM,SAAUC,EAAQC,EAAUC,EAAOY,GACrC,IAAIzc,EAAO2D,EAASmY,EAAMY,EAC1B,OAAQnT,UAAUpM,QAClB,KAAK,EACDwG,EAAUgY,EACV,MACJ,KAAK,EACDhY,EAAUgY,EACVG,EAAOF,EACP,MACJ,KAAK,EACDjY,EAAUgY,EACVG,EAAOF,EACPc,EAAWb,EACX,MACJ,KAAK,EACD7b,EAAQ2b,EACRhY,EAAUiY,EACVE,EAAOD,EACPa,EAAWD,EAOf,OAJApe,KAAKqQ,IAAI,QAAS1O,GAClB3B,KAAKqQ,IAAI,UAAW/K,GACpBtF,KAAKqQ,IAAI,OAAQoN,GACjBzd,KAAKqQ,IAAI,WAAYgO,GACdre,MAEXqM,MAAO,WACH,MAAO,CACHG,QAAS,CACL,CACIiD,KAAMnD,EAAShJ,SAASyC,SAASC,GACjCuJ,IAAKlM,EACLvD,UAAWwM,EAAShJ,SAASkD,MAAMR,IAEvC,CACIyJ,KAAMnD,EAAShJ,SAASyC,SAASE,OACjCsJ,IAAKlM,EACLuQ,eAAe,EACf9T,UAAWwM,EAAShJ,SAASkD,MAAMP,SAG3CsG,MAAO,CACHxF,QAAS,EACT0F,QAAQ,GAEZ3C,QAAS,CACL/F,aAAa,EACbS,WAAW,KAIvB8L,MAAO,aAGPsK,QAAS,aAGT8C,WAAY,SAAUpY,GAClBtF,KAAKua,WAAWjV,IAEpBmE,SAAU,CACNnE,QAAS,KACTgZ,OAAQ,KACRb,KAAM,KACNY,SAAU,KACVE,aAAc,KACdC,eAAgB,MAEpBpE,eAAgB,SAAU7K,EAAK6B,EAAUC,GACrC,OAAQ9B,GACR,IAAK,UACDvP,KAAK0d,WAAWrM,GAChB,MACJ,IAAK,SACG,OAAQA,GAAYrR,KAAK4J,WAAW4C,QAAQ,GAAGzF,UAC/C/G,KAAK4J,WAAW4C,QAAQ,GAAGiD,KAAO4B,EAASrL,GAC3ChG,KAAK4J,WAAW4C,QAAQ,GAAGzF,QAAQ2H,UAAY2C,EAASrL,IAExD,WAAYqL,GAAYrR,KAAK4J,WAAW4C,QAAQ,GAAGzF,UACnD/G,KAAK4J,WAAW4C,QAAQ,GAAGiD,KAAO4B,EAASpL,OAC3CjG,KAAK4J,WAAW4C,QAAQ,GAAGzF,QAAQ2H,UAAY2C,EAASpL,QAE5D,MACJ,IAAK,kBACgB,IAAboL,EACArR,KAAKsJ,SAASkD,QAAQL,QAAQ0D,YAAY7P,KAAK4J,WAAW4C,QAAQ,GAAGzF,SAErE/G,KAAKsJ,SAASkD,QAAQL,QAAQ0D,YAAY7P,KAAK4J,WAAW4C,QAAQ,GAAGzF,SAEzE,MACJ,IAAK,eACD/G,KAAK4J,WAAW2C,MAAMxF,QAAuB,OAAbsK,EAAoB,EAAI,IAIhE8B,SAAU,SAAU2B,GAEhB,IAAI8I,EACJ,OAFAI,EAAiBhe,MAET8U,EAAWzN,OACnB,KAAK,EAC+B,oBAArBrH,KAAK0C,IAAI,SAEW,qBAD3Bkb,EAAc5d,KAAK0C,IAAI,QAAQ+I,KAAKzL,KAAM8U,MAEtCA,EAAW7O,QAAU2X,GAG7B,MACJ,KAAK,EACmC,oBAAzB5d,KAAK0C,IAAI,aAEW,qBAD3Bkb,EAAc5d,KAAK0C,IAAI,YAAY+I,KAAKzL,KAAM8U,MAE1CA,EAAW7O,QAAU2X,KAMrCa,OAAQ,SAAUX,GAEd,OADAI,EAAiBle,KAAM,EAAG8d,GACnB9d,MAEX0e,WAAY,SAAUZ,GAElB,OADAI,EAAiBle,KAAM,EAAG8d,GACnB9d,UAcnBsM,EAASZ,OAAO,UAAU,WACtB,IAAIjF,EAAQiB,SAAS8G,cAAc,SAC/BxN,EAAI0G,SAAS8G,cAAc,KAC/B,MAAO,CACH6O,KAAM,SAAUC,EAAQC,EAAUoB,EAAQnB,EAAOY,GAC7C,IAAIzc,EAAO2D,EAAS7E,EAAOgd,EAAMY,EACjC,OAAQnT,UAAUpM,QAClB,KAAK,EACDwG,EAAUgY,EACV,MACJ,KAAK,EACDhY,EAAUgY,EACV7c,EAAQ8c,EACR,MACJ,KAAK,EACDjY,EAAUgY,EACV7c,EAAQ8c,EACRE,EAAOkB,EACP,MACJ,KAAK,EACDrZ,EAAUgY,EACV7c,EAAQ8c,EACRE,EAAOkB,EACPN,EAAWb,EACX,MACJ,KAAK,EACD7b,EAAQ2b,EACRhY,EAAUiY,EACV9c,EAAQke,EACRlB,EAAOD,EACPa,EAAWD,EAQf,OALApe,KAAKqQ,IAAI,QAAS1O,GAClB3B,KAAKqQ,IAAI,UAAW/K,GACpBtF,KAAKqQ,IAAI,QAAS5P,GAClBT,KAAKqQ,IAAI,OAAQoN,GACjBzd,KAAKqQ,IAAI,WAAYgO,GACdre,MAEXqM,MAAO,WACH,MAAO,CACHG,QAAS,CACL,CACIiD,KAAMnD,EAAShJ,SAASyC,SAASC,GACjCuJ,IAAKlM,EACLvD,UAAWwM,EAAShJ,SAASkD,MAAMR,IAEvC,CACIyJ,KAAMnD,EAAShJ,SAASyC,SAASE,OACjCsJ,IAAKlM,EACLuQ,eAAe,EACf9T,UAAWwM,EAAShJ,SAASkD,MAAMP,SAG3CsG,MAAO,CACHxF,QAASN,EACTgG,QAAQ,GAEZ3C,QAAS,CACL/F,aAAa,EACbS,WAAW,KAIvB8L,MAAO,WACH7J,EAAM3G,UAAYwM,EAAShJ,SAASkD,MAAMC,MAC1CA,EAAMkJ,aAAa,OAAQ,QAC3BlJ,EAAMhG,MAAQT,KAAK0C,IAAI,SACvB1C,KAAKsJ,SAAS6F,QAAQU,YAAY7O,GAClChB,KAAKsJ,SAAS6F,QAAQU,YAAYpJ,IAEtCmU,QAAS,aAGT8C,WAAY,SAAUpY,GACK,kBAAZA,GACP4C,EAAclH,GACdA,EAAE0N,UAAYpJ,GACPA,aAAmBpG,EAAOob,aAAetZ,EAAE4N,aAAetJ,IACjE4C,EAAclH,GACdA,EAAE6O,YAAYvK,KAGtBmE,SAAU,CACNnE,aAAS5E,EACT4d,YAAQ5d,EACR+c,UAAM/c,EACN2d,cAAU3d,EACVD,MAAO,GACPkK,KAAK,OACL6T,oBAAgB9d,GAEpB0Z,eAAgB,SAAU7K,EAAK6B,EAAUC,GACrC,OAAQ9B,GACR,IAAK,UACDvP,KAAK0d,WAAWrM,GAChB,MACJ,IAAK,QACD5K,EAAMhG,MAAQ4Q,EACd,MACJ,IAAK,OACD,OAAQA,GACR,IAAK,OACL,IAAK,QACL,IAAK,OACL,IAAK,iBACL,IAAK,QACL,IAAK,QACL,IAAK,SACL,IAAK,WACL,IAAK,SACL,IAAK,MACL,IAAK,OACL,IAAK,OACD5K,EAAMkE,KAAO0G,EACb,MACJ,QACI5K,EAAMkE,KAAO,OAGjB,MACJ,IAAK,SACG0G,EAASrL,IAAMhG,KAAK4J,WAAW4C,QAAQ,GAAGzF,UAC1C/G,KAAK4J,WAAW4C,QAAQ,GAAGzF,QAAQ2H,UAAY2C,EAASrL,IAExDqL,EAASpL,QAAUjG,KAAK4J,WAAW4C,QAAQ,GAAGzF,UAC9C/G,KAAK4J,WAAW4C,QAAQ,GAAGzF,QAAQ2H,UAAY2C,EAASpL,QAE5D,MACJ,IAAK,kBACgB,IAAboL,EACArR,KAAKsJ,SAASkD,QAAQL,QAAQ0D,YAAY7P,KAAK4J,WAAW4C,QAAQ,GAAGzF,SAErE/G,KAAKsJ,SAASkD,QAAQL,QAAQ0D,YAAY7P,KAAK4J,WAAW4C,QAAQ,GAAGzF,WAKjFoM,SAAU,SAAU2B,GAChB,IAAI8I,EACJ,OAAQ9I,EAAWzN,OACnB,KAAK,EACDrH,KAAKyJ,SAAShJ,MAAQgG,EAAMhG,MACI,oBAArBT,KAAK0C,IAAI,SAEW,qBAD3Bkb,EAAc5d,KAAK0C,IAAI,QAAQ+I,KAAKzL,KAAM8U,EAAY9U,KAAKyJ,SAAShJ,UAEhEqU,EAAW7O,QAAU2X,GAG7B,MACJ,KAAK,EACmC,oBAAzB5d,KAAK0C,IAAI,aAEW,qBAD3Bkb,EAAc5d,KAAK0C,IAAI,YAAY+I,KAAKzL,KAAM8U,MAE1CA,EAAW7O,QAAU2X,GAGzB9I,EAAW7O,SACXQ,EAAMhG,MAAQT,KAAKyJ,SAAShJ,aASa,kBAAnBN,EAAOC,QAC7CD,EAAOC,QAAUkM,OAGX,kBACF,OAAOA,GADL,QAAE,OAAF,aA9jHZ,CAskHoB,qBAAXpN,OAAyBA,OAASc,O,wWCvkHtC,SAAe4e,EAAtB,kC,4CAAO,WAA2BC,GAA3B,IAAAhgB,EAAA,SAAAA,EAAA,sEACS4D,IAAMC,IAAN,UAAaC,KAAb,OAAmBmc,KACjC,CACEjc,QAAU,CACR,eAAiB,kCACjB,4BAA6B,mCAC7B,iBAAkB,QAEpBC,OAAQ,CACN,cAAiB+b,KAGnB9b,MAAK,SAACC,GACN,OAAOA,EAAS1D,QAEjB2D,OAAM,SAAUC,GACf,OAAO,QAhBJ,cACDrE,EADC,yBAmBEA,GAnBF,4C,sBCgCP,IAAMkgB,EAAM5d,EAAaC,aAAaF,MAGjB8d,GAFR3d,EAASD,aAAaF,M,kDAGnC,WAAYxC,GAAQ,IAAD,8BACf,cAAMA,IA4CRugB,kBA7CiB,sBA6CG,sBAAApgB,EAAA,0FA7CH,EAqDjBqgB,mBArDiB,sBAqDI,sBAAArgB,EAAA,0FAlDnB,EAAKF,MAAQ,CACXwgB,YAAa,GACbhQ,QAAS,KACTiQ,QAAQ,EACRjC,SAAS,EACTkC,WAAY,GACZC,eAAgB,MAGlB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBAZL,E,4DAmBf,IAAMje,EAAa,GAEnB,GAA4C,IAAxCvB,KAAKrB,MAAMwQ,QAAQsQ,UAAU3gB,OAC/B,IAAK,IAAIE,EAAI,EAAGA,EAAIgB,KAAKrB,MAAMwQ,QAAQsQ,UAAU3gB,OAAQE,IACvDuC,EAAWxC,KACT,yBAAKe,UAAU,SACb,6BACE,yBAAK+B,IAAK7B,KAAKrB,MAAMwQ,QAAQsQ,UAAUzgB,GAAG0gB,SAAU3d,IAAI,aAMhER,EAAWxC,KACT,yBAAKe,UAAU,SACb,6BACE,yBAAK+B,IAAK7B,KAAKrB,MAAMwQ,QAAQuQ,SAAU3d,IAAI,QAOnD,OAAOR,I,wEAKOjC,G,uFACuBsf,EAAWtf,G,OAA1CqgB,E,OACN3f,KAAK4f,SAAS,CAACN,eAAgBK,I,wIAQ/B,IAAME,EAAQnY,SAASoY,uBAAuB,0BAA0B,GAExEC,IAAYF,GACX9c,MAAK,SAACid,GACL,IAAMC,EAAUD,EAAOE,UAAU,aAC3BC,EAAM,IAAIC,IAChBD,EAAIE,SAASJ,EAAS,MAAO,EAAG,GAChCE,EAAIG,KAAK,qB,wEAGGhhB,G,uFACuBsf,EAAWtf,G,OACX,KAD/BqgB,E,QACoB7gB,OACxBkB,KAAK4f,SAAS,CAACN,eAAgB,UAE/Btf,KAAK4f,SAAS,CAACN,eAAgBK,I,0IAItBtV,GACXrK,KAAK4f,SAAS,CACZP,WAAYhV,EAAMyJ,OAAOrT,U,6BAGtBqZ,GAAO,IAAD,OAWY9Z,KAAKtB,MAAMob,MAAMtZ,IAAII,MAAM,KAClD,OACE,yBAAKd,UAAU,WACb,yBAAK+B,IAAI,qDAAqDE,IAAI,KAClE,yBAAKjC,UAAU,kBACb,uBAAGA,UAAU,cACVif,EAAIwB,QAAQ5e,MAAM,KAErB,2BAAO6e,QAAQ,IAAIzB,EAAIwB,QAAQ5e,MAAM,KACrC,2BAAOgJ,KAAK,OAAOlK,MAAOT,KAAKrB,MAAM0gB,WAAYoB,SAAUzgB,KAAKuf,eAEhE,4BAAQmB,QAAS,kBAAI,EAAKC,SAAS,EAAKhiB,MAAM0gB,cAAcN,EAAIwB,QAAQ5e,MAAM,KAE9C,OAA9B3B,KAAKrB,MAAM2gB,eAEX,yBAAKxf,UAAU,mBACmB,UAA9BE,KAAKrB,MAAM2gB,eACX,oCACE,4BAAKP,EAAIwB,QAAQ5e,MAAM,KACvB,2BACCod,EAAIwB,QAAQ5e,MAAM,KAGnB,2BAAO7B,UAAU,SACf,4BACE,4BAAKif,EAAIwB,QAAQ5e,MAAM,KACvB,4BAAK3B,KAAKrB,MAAM2gB,eAAe,GAAGsB,eAEpC,4BACE,4BAAK7B,EAAIwB,QAAQ5e,MAAM,KACvB,4BAAK3B,KAAKrB,MAAM2gB,eAAe,GAAGuB,aAEpC,4BACE,4BAAK9B,EAAIwB,QAAQ5e,MAAM,KACvB,4BAAK3B,KAAKrB,MAAM2gB,eAAe,GAAGwB,UAItC,uBAAGC,KAAM,IAAIhC,EAAIrd,QAAQC,MAAM,GAAK7B,UAAU,cAAcif,EAAIwB,QAAQ5e,MAAM,MAGhFod,EAAIwB,QAAQ5e,MAAM,KAItB,S,GA1IyBzB","file":"static/js/11.bddd2696.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './BreadCrumbNav.scss';\r\nimport $ from 'jquery'\r\nimport data from '../../newLanguage.json';\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\n\r\nexport default class BreadCrumbNav extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  renderLoop (e) {\r\n    const a = []\r\n    \r\n    if(e.length-1 === 0){\r\n      a.push(\r\n        ' / ' + e[0] + ' / '\r\n      )\r\n    } else {\r\n      for (let i = 0; i < e.length-1; i++) {\r\n        a.push(\r\n          e[i]+' / '\r\n        )\r\n      }\r\n    }\r\n\r\n    return a\r\n  }\r\n  loop () {\r\n        var language = \"tr\";\r\n        var query = window.location.pathname;\r\n        var breadCrumb = '';\r\n\r\n        if (language == \"tr\") {\r\n            breadCrumb += data.tr[0].name;\r\n\r\n            for (var i = 0; i < data.tr.length; i++) {\r\n                if (data.tr[i].link == query) {\r\n                    breadCrumb += \" / <a href='\"+ data.tr[i].link +\"'>\"  + data.tr[i].name + \"</a>\";\r\n                }\r\n                else {\r\n                    if (data.tr[i].sub != null) {\r\n                        for (var k = 0; k < data.tr[i].sub.length; k++) {\r\n                            if (data.tr[i].sub[k].link == query) {\r\n                                breadCrumb += \" / <a href=\"+ data.tr[i].link +\">\"  + data.tr[i].name + \"</a>\"\r\n                                breadCrumb += \" / <a href=\"+ data.tr[i].sub[k].link +\">\"  + data.tr[i].sub[k].name + \"</a>\"\r\n                            }\r\n                            else {\r\n                                if (data.tr[i].sub[k].sub != null) {\r\n                                    for (var s = 0; s < data.tr[i].sub[k].sub.length; s++) {\r\n                                        if (data.tr[i].sub[k].sub[s].link == query) {\r\n                                            breadCrumb += \" / <a href=\"+ data.tr[i].link +\">\"  + data.tr[i].name + \"</a>\"\r\n                                            breadCrumb += \" / <a href=\"+ data.tr[i].sub[k].link +\">\"  + data.tr[i].sub[k].name + \"</a>\"\r\n                                            breadCrumb += \" / <a href=\"+ data.tr[i].sub[k].sub[s].link +\">\"  + data.tr[i].sub[k].sub[s].name + \"</a>\"\r\n                                        }\r\n                                        else {\r\n                                            if (data.tr[i].sub[k].sub[s].sub != null) {\r\n                                                for (var y = 0; y < data.tr[i].sub[k].sub[s].sub.length; y++) {\r\n                                                    if (data.tr[i].sub[k].sub[s].sub[y].link == query) {\r\n                                                        breadCrumb += \" / <a href=\"+ data.tr[i].link +\">\"  + data.tr[i].name + \"</a>\"\r\n                                                        breadCrumb += \" / <a href=\"+ data.tr[i].sub[k].link +\">\"  + data.tr[i].sub[k].name + \"</a>\"\r\n                                                        breadCrumb += \" / <a href=\"+ data.tr[i].sub[k].sub[s].link +\">\"  + data.tr[i].sub[k].sub[s].name + \"</a>\"\r\n                                                        breadCrumb += \" / <a href=\"+ data.tr[i].sub[k].sub[s].sub[y].link +\">\"  + data.tr[i].sub[k].sub[s].sub[y].name + \"</a>\"\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            breadCrumb += data.en[0].name;\r\n\r\n            for (var i = 0; i < data.en.length; i++) {\r\n                if (data.en[i].link == query) {\r\n                    breadCrumb += \" / <a href=\"+ data.en[i].link +\">\"  + data.en[i].name + \"</a>\"\r\n                }\r\n                else {\r\n                    if (data.en[i].sub != null) {\r\n                        for (var k = 0; k < data.en[i].sub.length; k++) {\r\n                            if (data.en[i].sub[k].link == query) {\r\n                                breadCrumb += \" / <a href=\"+ data.en[i].link +\">\"  + data.en[i].name + \"</a>\"\r\n                                breadCrumb += \" / <a href=\"+ data.en[i].sub[k].link +\">\"  + data.en[i].sub[k].name + \"</a>\"\r\n                            }\r\n                            else {\r\n                                if (data.en[i].sub[k].sub != null) {\r\n                                    for (var s = 0; s < data.en[i].sub[k].sub.length; s++) {\r\n                                        if (data.en[i].sub[k].sub[s].link == query) {\r\n                                            breadCrumb += \" / <a href=\"+ data.en[i].link +\">\"  + data.en[i].name + \"</a>\"\r\n                                            breadCrumb += \" / <a href=\"+ data.en[i].sub[k].link +\">\"  + data.en[i].sub[k].name + \"</a>\"\r\n                                            breadCrumb += \" / <a href=\"+ data.en[i].sub[k].sub[s].link +\">\"  + data.en[i].sub[k].sub[s].name + \"</a>\"\r\n                                        }\r\n                                        else {\r\n                                            if (data.en[i].sub[k].sub[s].sub != null) {\r\n                                                for (var y = 0; y < data.en[i].sub[k].sub[s].sub.length; y++) {\r\n                                                    if (data.en[i].sub[k].sub[s].sub[y].link == query) {\r\n                                                        breadCrumb += \" / <a href=\"+ data.en[i].link +\">\" + data.en[i].name + \"</a>\"\r\n                                                        breadCrumb += \" / <a href=\"+ data.en[i].sub[k].sub[s].link +\">\" + data.en[i].sub[k].name + \"</a>\"\r\n                                                        breadCrumb += \" / <a href=\"+ data.en[i].sub[k].sub[s].link +\">\" + data.en[i].sub[k].sub[s].name + \"</a>\"\r\n                                                        breadCrumb += \" / <a href=\"+ data.en[i].sub[k].sub[s].sub[y].link +\">\" + data.en[i].sub[k].sub[s].sub[y].name + \"</a>\"\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return breadCrumb\r\n  }\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"BreadCrumbNav\">\r\n        {ReactHtmlParser(this.loop())}\r\n      </div>\r\n    )\r\n  }\r\n}","module.exports = __webpack_public_path__ + \"static/media/image_4.2d032258.png\";","export default function findValue(param, pageName, pathname, url) {\r\n    const name = pageName;\r\n    if(url === \"/Urunlerimiz/Otobus/Satis\" || url === \"/Our-Products/Bus/Sales\"){\r\n      return \"bus_sales\";\r\n    } else if (url === \"/Urunlerimiz/Otobus/Satis/Danismanlik-ve-Iletisim\" || url === \"/Our-Products/Bus/Consulting-and-Communication\"){\r\n      return \"bus_consultingandcommunication\";\r\n      \r\n    } else if (url === \"/Urunlerimiz/Otobus/Satis/Bus-Store\" || url === \"/Our-Products/Bus/Sales/Bus-Store\"){\r\n      return \"bus_busstore\";\r\n      \r\n    } else if (url === \"/Urunlerimiz/Otobus/Satis/Brosurler-ve-Indirilebilir-Ogeler\" || url === \"/Our-Products/Bus/Sales/Brochures-and-Downloads\"){\r\n      return \"bus_brochuresanddownloads\";\r\n      \r\n    } else if (url === \"/FiyatListesi/Otobus/Satis/Fiyat-Listesi\" || url === \"/Price-List/Bus/Sales/Price-List\"){\r\n      return \"bus_pricelist\";\r\n      \r\n    } else if (url === \"/Urunlerimiz/Otobus/Bayiler-ve-Yetkili-Servisler\" || url === \"/Our-Products/Bus/Dealers-and-Authorized-Services\"){\r\n      return \"bus_dealersandauthorizedservices\";\r\n      \r\n    } else if (url === \"/Urunlerimiz/Otobus/Satis-Sonrasi-Hizmetler\" || url === \"/Our-Products/Bus/After-Sales-Services\"){\r\n      return \"bus_aftersalesservices\";\r\n      \r\n    } else if (url === \"/Urunlerimiz/Otobus/Satis-Sonrasi-Hizmetler/Hizmetler\" || url === \"/Our-Products/Bus/After-Sales-Services/Services\"){\r\n      return \"bus_services\";\r\n      \r\n    } else if (url === \"/Urunlerimiz/Otobus/Satis-Sonrasi-Hizmetler/Garanti\" || url === \"/Our-Products/Bus/After-Sales-Services/Warranty\"){\r\n      return \"bus_warranty\";\r\n      \r\n    } else if (url === \"/Urunlerimiz/Otobus/Satis-Sonrasi-Hizmetler/Sigorta\" || url === \"/Our-Products/Bus/After-Sales-Services/Insurance\"){\r\n      return \"bus_insurance\";\r\n      \r\n    } else if (url === \"/Urunlerimiz/Otobus/Satis-Sonrasi-Hizmetler/MB-Kasko\" || url === \"/Our-Products/Bus/After-Sales-Services/MB-Insurance\"){\r\n      return \"bus_mb_insurance\";\r\n      \r\n    } else if (url === \"/Urunlerimiz/Otobus/Satis-Sonrasi-Hizmetler/Yedek-Parca-ve-Aksesuar\" || url === \"/Our-Products/Bus/After-Sales-Services/Spare-Parts-and-Accessories\"){\r\n      return \"bus_sparepartsandaccessories\";\r\n      \r\n    } else if (url === \"/Urunlerimiz/Otobus/Satis-Sonrasi-Hizmetler/Gonullu-Geri-Cagirma-Aksiyonlari\" || url === \"/Our-Products/Bus/After-Sales-Services/Voluntary-Recall-Actions\"){\r\n      return \"bus_voluntaryrecallactions\";\r\n      \r\n    } else if (url === \"/Urunlerimiz/Otobus/Satis-Sonrasi-Hizmetler/Servisler-icin-Bilgiler\" || url === \"/Our-Products/Bus/After-Sales-Services/Information-for-Services\"){\r\n      return \"bus_informationforservices\";\r\n    }\r\n\r\n    if(pageName === 'Kampanya' || pageName === 'Campaign'){\r\n      \r\n      if(pathname === 'Kamyon' || pathname === 'Truck'){\r\n        return param[2].sub[0].sub[1].value\r\n      } else {\r\n        return param[2].sub[1].sub[1].value\r\n      }\r\n    }\r\n    if(pageName === 'Kampanya' || pageName === 'Campaign'){\r\n      \r\n      if(pathname === 'Otobüs' || pathname === 'Bus'){\r\n        return param[2].sub[0].sub[1].value\r\n      } else {\r\n        return param[2].sub[1].sub[1].value\r\n      }\r\n    }\r\n    if(pathname !== undefined) {\r\n\r\n        if(param[2].sub[0].name === pageName){\r\n            for (let q = 0; q < param[2].sub[0].sub[1].sub.length; q++) {\r\n                const link = param[2].sub[0].sub[1].sub[q].link.split('/');\r\n                const linkLength = link.length-1;\r\n                const otherLink = pathname.split('/');\r\n                const otherLinkLength = otherLink.length-1;\r\n        \r\n                if(link[linkLength] === otherLink[otherLinkLength]){\r\n                    return param[2].sub[0].sub[1].sub[q].value\r\n\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            for (let q = 0; q < param[2].sub[1].sub[1].sub.length; q++) {\r\n                const link = param[2].sub[1].sub[1].sub[q].link.split('/');\r\n                const linkLength = link.length-1;\r\n                const otherLink = pathname.split('/');\r\n                const otherLinkLength = otherLink.length-1;\r\n        \r\n                if(link[linkLength] === otherLink[otherLinkLength]){\r\n                    return param[2].sub[1].sub[1].sub[q].value\r\n\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    for (let i = 0; i < param.length-1; i++) {\r\n      \r\n      if(param[i].sub !== null) {\r\n        const link = param[i].link.split('/');\r\n        const linkLength = link.length-1;\r\n\r\n        if(link[linkLength] === name){\r\n          return param[i].value\r\n\r\n          break;\r\n        }\r\n\r\n        for (let k = 0; k < param[i].sub.length; k++) {\r\n      \r\n          if(param[i].sub[k].sub !== null) {\r\n            const link = param[i].sub[k].link.split('/');\r\n            const linkLength = link.length-1;\r\n    \r\n            if(link[linkLength] === name){\r\n              return param[i].sub[k].value\r\n    \r\n              break;\r\n            }\r\n\r\n            for (let p = 0; p < param[i].sub[k].sub.length; p++) {\r\n      \r\n              if(param[i].sub[k].sub[p].sub !== null) {\r\n                const link = param[i].sub[k].sub[p].link.split('/');\r\n                const linkLength = link.length-1;\r\n\r\n                if(link[linkLength] === name){\r\n                  return param[i].sub[k].sub[p].value\r\n\r\n                  break;\r\n                }\r\n\r\n                for (let t = 0; t < param[i].sub[k].sub[p].sub.length; t++) {\r\n      \r\n                  const link = param[i].sub[k].sub[p].sub[t].link.split('/');\r\n                  const linkLength = link.length-1;\r\n          \r\n                  if(link[linkLength] === name){\r\n                    return param[i].sub[k].sub[p].sub[t].value\r\n          \r\n                    break;\r\n                  }\r\n                }\r\n                \r\n              } else {\r\n                const link = param[i].sub[k].sub[p].link.split('/');\r\n                const linkLength = link.length-1;\r\n        \r\n                if(link[linkLength] === name){\r\n                  return param[i].sub[k].sub[p].value\r\n        \r\n                  break;\r\n                }\r\n              }\r\n            }\r\n            \r\n            \r\n          } else {\r\n            const link = param[i].sub[k].link.split('/');\r\n            const linkLength = link.length-1;\r\n    \r\n            if(link[linkLength] === name){\r\n              return param[i].sub[k].value\r\n    \r\n              break;\r\n            }\r\n          }\r\n        }\r\n        \r\n      } else {\r\n        const link = param[i].link.split('/');\r\n        const linkLength = link.length-1;\r\n\r\n        if(link[linkLength] === name){\r\n          return param[i].value\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n  }","import React, {Component} from 'react';\r\nimport './SubCategories.scss';\r\n\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport BreadCrumbNav from '../../Components/BreadCrumbNav/BreadCrumbNav'\r\n\r\nimport languageJson from '../../language.json';\r\nimport language from '../../newLanguage.json';\r\n\r\nconst lng = languageJson[localStorage.lang];\r\nconst lang = language[localStorage.lang];\r\nexport default class SubCategories extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n  imageRepeater () {\r\n    const NewsSlider = [];\r\n\r\n    for (let i = 0; i < this.props.data.length; i++) {\r\n      NewsSlider.push(\r\n        <div className=\"subcategory animate__animated animate__fadeInRight animate__fast\">\r\n          <NavLink activeClassName=\"active\" to={'/'+lang[6].mainurl.title[0]+'/'+lang[6].mainurl.title[1]+\"/\"+this.props.data[i].routeValue}>\r\n            <span className=\"subcategory-image col-lg-6 float-left pr-0\">\r\n              <img src={this.props.data[i].listImageUrl} alt=\"\"/>\r\n            </span>\r\n            <span className=\"text col-lg-6 float-left\">\r\n              <h5>{this.props.data[i].title}</h5>\r\n              {this.props.data[i].listDescription}\r\n            </span>\r\n          </NavLink>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return NewsSlider;\r\n  }\r\n  render() {\r\n\r\n    const BC = ['Haberler']\r\n\r\n    return (\r\n      <div className=\"SubCategories\">\r\n        {/*<BreadCrumbNav mainpage={BC}/>*/}\r\n\r\n        {this.props.data !== null\r\n          ?  \r\n            this.imageRepeater() \r\n          : \r\n            ''\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport BreadCrumbNav from '../../Components/BreadCrumbNav/BreadCrumbNav'\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport languageJson from '../../language.json';\r\nimport language from '../../newLanguage.json';\r\n\r\nimport './SubPosts.scss';\r\n\r\nconst lang = language[localStorage.lang];\r\n\r\nexport default class SubPosts extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n  imageRepeater () {\r\n    const NewsSlider = [];\r\n\r\n    for (let i = 0; i < this.props.data.length; i++) {\r\n      NewsSlider.push(\r\n        <div class=\"subposts\">\r\n          <NavLink activeClassName=\"active\" to={\"/\"+lang[6].mainurl.title[3]+this.props.uppername+\"/\"+this.props.data[i].routeValue}>\r\n            <span class=\"subcategory-image col-lg-6 float-left pr-0\">\r\n              <img src={this.props.data[i].listImageUrl} alt=\"\" />\r\n            </span>\r\n            <span class=\"text col-lg-6 float-left\">\r\n              <h5>{this.props.data[i].title}</h5>\r\n              <p>\r\n                {this.props.data[i].listDescription}\r\n              </p>\r\n            </span>\r\n          </NavLink>\r\n      </div>\r\n\r\n      )\r\n    }\r\n\r\n    return NewsSlider;\r\n  }\r\n  render() {\r\n    const BC = ['Kampanyalar']\r\n\r\n    return (\r\n      <div className=\"SubPosts animate__animated animate__fadeIn animate__fast\">\r\n        {/*<BreadCrumbNav mainpage={BC}/>*/}\r\n        \r\n        {this.props.data !== null\r\n          ?  \r\n            this.imageRepeater() \r\n          : \r\n            ''\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}","import { getDefaultNormalizer } from '@testing-library/react';\nimport axios from 'axios';\nimport {API, GetGeneralContentPreview, Headers} from '../Services/config';\n\nexport async function GetGeneralContentsPreviews (langid, routevalue, previewID) {\n  let a = await axios.get(`${API}${GetGeneralContentPreview}`,\n  {\n    headers : {\n      'Content-Type' : 'application/json; charset=utf-8',\n      'Ocp-Apim-Subscription-Key': 'e7dff51e117448e1a56e301912d70d83',\n      'Ocp-Apim-Trace': 'true',\n    },\n    params: {\n      'languageId': langid,\n      'pageRouteValue': routevalue,\n      'previewId' : previewID\n    }\n  }\n  ).then((response) => {\n    return response.data;\n  })\n  .catch(function (error) {\n    return null;\n  })\n\n  return a;\n}","module.exports = __webpack_public_path__ + \"static/media/nopath.a3cfcb38.png\";","import { getDefaultNormalizer } from '@testing-library/react';\nimport axios from 'axios';\nimport {API, GetGeneralContent, Headers} from '../Services/config';\n\nexport async function GetGeneralContents (langid, routevalue) {\n  let a = await axios.get(`${API}${GetGeneralContent}`,\n  {\n    headers : {\n      'Content-Type' : 'application/json; charset=utf-8',\n      'Ocp-Apim-Subscription-Key': 'e7dff51e117448e1a56e301912d70d83',\n      'Ocp-Apim-Trace': 'true',\n    },\n    params: {\n      'languageId': langid,\n      'pageRouteValue': routevalue\n    }\n  }\n  ).then((response) => {\n    return response.data;\n  })\n  .catch(function (error) {\n    return null;\n  })\n\n  return a;\n}","/**\r\n * alertifyjs 1.13.1 http://alertifyjs.com\r\n * AlertifyJS is a javascript framework for developing pretty browser dialogs and notifications.\r\n * Copyright 2019 Mohammad Younes <Mohammad@alertifyjs.com> (http://alertifyjs.com) \r\n * Licensed under GPL 3 <https://opensource.org/licenses/gpl-3.0>*/\r\n( function ( window ) {\r\n    'use strict';\r\n    var NOT_DISABLED_NOT_RESET = ':not(:disabled):not(.ajs-reset)';\r\n    /**\r\n     * Keys enum\r\n     * @type {Object}\r\n     */\r\n    var keys = {\r\n        ENTER: 13,\r\n        ESC: 27,\r\n        F1: 112,\r\n        F12: 123,\r\n        LEFT: 37,\r\n        RIGHT: 39,\r\n        TAB: 9\r\n    };\r\n    /**\r\n     * Default options \r\n     * @type {Object}\r\n     */\r\n    var defaults = {\r\n        autoReset:true,\r\n        basic:false,\r\n        closable:true,\r\n        closableByDimmer:true,\r\n        invokeOnCloseOff:false,\r\n        frameless:false,\r\n        defaultFocusOff:false,\r\n        maintainFocus:true, //global default not per instance, applies to all dialogs\r\n        maximizable:true,\r\n        modal:true,\r\n        movable:true,\r\n        moveBounded:false,\r\n        overflow:true,\r\n        padding: true,\r\n        pinnable:true,\r\n        pinned:true,\r\n        preventBodyShift:false, //global default not per instance, applies to all dialogs\r\n        resizable:true,\r\n        startMaximized:false,\r\n        transition:'pulse',\r\n        transitionOff:false,\r\n        tabbable:['button', '[href]', 'input', 'select', 'textarea', '[tabindex]:not([tabindex^=\"-\"])'+NOT_DISABLED_NOT_RESET].join(NOT_DISABLED_NOT_RESET+','),//global\r\n        notifier:{\r\n            delay:5,\r\n            position:'bottom-right',\r\n            closeButton:false,\r\n            classes: {\r\n                base: 'alertify-notifier',\r\n                prefix:'ajs-',\r\n                message: 'ajs-message',\r\n                top: 'ajs-top',\r\n                right: 'ajs-right',\r\n                bottom: 'ajs-bottom',\r\n                left: 'ajs-left',\r\n                center: 'ajs-center',\r\n                visible: 'ajs-visible',\r\n                hidden: 'ajs-hidden',\r\n                close: 'ajs-close'\r\n            }\r\n        },\r\n        glossary:{\r\n            title:'AlertifyJS',\r\n            ok: 'OK',\r\n            cancel: 'Cancel',\r\n            acccpt: 'Accept',\r\n            deny: 'Deny',\r\n            confirm: 'Confirm',\r\n            decline: 'Decline',\r\n            close: 'Close',\r\n            maximize: 'Maximize',\r\n            restore: 'Restore',\r\n        },\r\n        theme:{\r\n            input:'ajs-input',\r\n            ok:'ajs-ok',\r\n            cancel:'ajs-cancel',\r\n        },\r\n        hooks:{\r\n            preinit:function(){},\r\n            postinit:function(){}\r\n        }\r\n    };\r\n    \r\n    //holds open dialogs instances\r\n    var openDialogs = [];\r\n\r\n    /**\r\n     * [Helper]  Adds the specified class(es) to the element.\r\n     *\r\n     * @element {node}      The element\r\n     * @className {string}  One or more space-separated classes to be added to the class attribute of the element.\r\n     * \r\n     * @return {undefined}\r\n     */\r\n    function addClass(element,classNames){\r\n        element.className += ' ' + classNames;\r\n    }\r\n    \r\n    /**\r\n     * [Helper]  Removes the specified class(es) from the element.\r\n     *\r\n     * @element {node}      The element\r\n     * @className {string}  One or more space-separated classes to be removed from the class attribute of the element.\r\n     * \r\n     * @return {undefined}\r\n     */\r\n    function removeClass(element, classNames) {\r\n        var original = element.className.split(' ');\r\n        var toBeRemoved = classNames.split(' ');\r\n        for (var x = 0; x < toBeRemoved.length; x += 1) {\r\n            var index = original.indexOf(toBeRemoved[x]);\r\n            if (index > -1){\r\n                original.splice(index,1);\r\n            }\r\n        }\r\n        element.className = original.join(' ');\r\n    }\r\n\r\n    /**\r\n     * [Helper]  Checks if the document is RTL\r\n     *\r\n     * @return {Boolean} True if the document is RTL, false otherwise.\r\n     */\r\n    function isRightToLeft(){\r\n        return window.getComputedStyle(document.body).direction === 'rtl';\r\n    }\r\n    /**\r\n     * [Helper]  Get the document current scrollTop\r\n     *\r\n     * @return {Number} current document scrollTop value\r\n     */\r\n    function getScrollTop(){\r\n        return ((document.documentElement && document.documentElement.scrollTop) || document.body.scrollTop);\r\n    }\r\n\r\n    /**\r\n     * [Helper]  Get the document current scrollLeft\r\n     *\r\n     * @return {Number} current document scrollLeft value\r\n     */\r\n    function getScrollLeft(){\r\n        return ((document.documentElement && document.documentElement.scrollLeft) || document.body.scrollLeft);\r\n    }\r\n\r\n    /**\r\n    * Helper: clear contents\r\n    *\r\n    */\r\n    function clearContents(element){\r\n        while (element.lastChild) {\r\n            element.removeChild(element.lastChild);\r\n        }\r\n    }\r\n    /**\r\n     * Extends a given prototype by merging properties from base into sub.\r\n     *\r\n     * @sub {Object} sub The prototype being overwritten.\r\n     * @base {Object} base The prototype being written.\r\n     *\r\n     * @return {Object} The extended prototype.\r\n     */\r\n    function copy(src) {\r\n        if(null === src){\r\n            return src;\r\n        }\r\n        var cpy;\r\n        if(Array.isArray(src)){\r\n            cpy = [];\r\n            for(var x=0;x<src.length;x+=1){\r\n                cpy.push(copy(src[x]));\r\n            }\r\n            return cpy;\r\n        }\r\n      \r\n        if(src instanceof Date){\r\n            return new Date(src.getTime());\r\n        }\r\n      \r\n        if(src instanceof RegExp){\r\n            cpy = new RegExp(src.source);\r\n            cpy.global = src.global;\r\n            cpy.ignoreCase = src.ignoreCase;\r\n            cpy.multiline = src.multiline;\r\n            cpy.lastIndex = src.lastIndex;\r\n            return cpy;\r\n        }\r\n        \r\n        if(typeof src === 'object'){\r\n            cpy = {};\r\n            // copy dialog pototype over definition.\r\n            for (var prop in src) {\r\n                if (src.hasOwnProperty(prop)) {\r\n                    cpy[prop] = copy(src[prop]);\r\n                }\r\n            }\r\n            return cpy;\r\n        }\r\n        return src;\r\n    }\r\n    /**\r\n      * Helper: destruct the dialog\r\n      *\r\n      */\r\n    function destruct(instance, initialize){\r\n        if(instance.elements){\r\n            //delete the dom and it's references.\r\n            var root = instance.elements.root;\r\n            root.parentNode.removeChild(root);\r\n            delete instance.elements;\r\n            //copy back initial settings.\r\n            instance.settings = copy(instance.__settings);\r\n            //re-reference init function.\r\n            instance.__init = initialize;\r\n            //delete __internal variable to allow re-initialization.\r\n            delete instance.__internal;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Test to check if passive event listeners are supported.\r\n     */\r\n    var IsPassiveSupported = false;\r\n    try {\r\n        var options = Object.defineProperty({}, 'passive', {\r\n            get: function () {\r\n                IsPassiveSupported = true;\r\n            }\r\n        });\r\n        window.addEventListener('test', options, options);\r\n        window.removeEventListener('test', options, options);\r\n    } catch (e) {}\r\n\r\n     /**\r\n     * Removes an event listener\r\n     *\r\n     * @param {HTMLElement} el The EventTarget to register the listenr on.\r\n     * @param {string} event The event type to listen for.\r\n     * @param {Function} handler The function to handle the event.\r\n     * @param {boolean} useCapture Specifices if the event to be dispatched to the registered listener before being dispatched to any EventTarget beneath it in the DOM tree.\r\n     * @param {boolean} passive A Boolean which, if true, indicates that the function specified by listener will never call preventDefault().\r\n     */\r\n    var on = function (el, event, fn, useCapture, passive) {\r\n        el.addEventListener(event, fn, IsPassiveSupported ? { capture: useCapture, passive: passive } : useCapture === true);\r\n    };\r\n\r\n    /**\r\n     * Removes an event listener\r\n     *\r\n     * @param {HTMLElement} el The EventTarget to unregister the listenr from.\r\n     * @param {string} event The event type to remove.\r\n     * @param {Function} fn The event handler to remove.\r\n     * @param {boolean} useCapture Specifices if the event to be dispatched to the registered listener before being dispatched to any EventTarget beneath it in the DOM tree.\r\n     * @param {boolean} passive A Boolean which, if true, indicates that the function specified by listener will never call preventDefault().\r\n     */\r\n    var off = function (el, event, fn, useCapture, passive) {\r\n        el.removeEventListener(event, fn, IsPassiveSupported ? { capture: useCapture, passive: passive } : useCapture === true);\r\n    };\r\n\r\n    /**\r\n     * Prevent default event from firing\r\n     *\r\n     * @param  {Event} event Event object\r\n     * @return {undefined}\r\n\r\n    function prevent ( event ) {\r\n        if ( event ) {\r\n            if ( event.preventDefault ) {\r\n                event.preventDefault();\r\n            } else {\r\n                event.returnValue = false;\r\n            }\r\n        }\r\n    }\r\n    */\r\n    var transition = (function () {\r\n        var t, type;\r\n        var supported = false;\r\n        var transitions = {\r\n            'animation'        : 'animationend',\r\n            'OAnimation'       : 'oAnimationEnd oanimationend',\r\n            'msAnimation'      : 'MSAnimationEnd',\r\n            'MozAnimation'     : 'animationend',\r\n            'WebkitAnimation'  : 'webkitAnimationEnd'\r\n        };\r\n\r\n        for (t in transitions) {\r\n            if (document.documentElement.style[t] !== undefined) {\r\n                type = transitions[t];\r\n                supported = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return {\r\n            type: type,\r\n            supported: supported\r\n        };\r\n    }());\r\n\r\n    /**\r\n    * Creates event handler delegate that sends the instance as last argument.\r\n    * \r\n    * @return {Function}    a function wrapper which sends the instance as last argument.\r\n    */\r\n    function delegate(context, method) {\r\n        return function () {\r\n            if (arguments.length > 0) {\r\n                var args = [];\r\n                for (var x = 0; x < arguments.length; x += 1) {\r\n                    args.push(arguments[x]);\r\n                }\r\n                args.push(context);\r\n                return method.apply(context, args);\r\n            }\r\n            return method.apply(context, [null, context]);\r\n        };\r\n    }\r\n    /**\r\n    * Helper for creating a dialog close event.\r\n    * \r\n    * @return {object}\r\n    */\r\n    function createCloseEvent(index, button) {\r\n        return {\r\n            index: index,\r\n            button: button,\r\n            cancel: false\r\n        };\r\n    }\r\n    /**\r\n    * Helper for dispatching events.\r\n    *\r\n    * @param  {string} evenType The type of the event to disptach.\r\n    * @param  {object} instance The dialog instance disptaching the event.\r\n    *\r\n    * @return   {any}   The result of the invoked function.\r\n    */\r\n    function dispatchEvent(eventType, instance) {\r\n        if ( typeof instance.get(eventType) === 'function' ) {\r\n            return instance.get(eventType).call(instance);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Super class for all dialogs\r\n     *\r\n     * @return {Object}\t\tbase dialog prototype\r\n     */\r\n    var dialog = (function () {\r\n        var //holds the list of used keys.\r\n            usedKeys = [],\r\n            //dummy variable, used to trigger dom reflow.\r\n            reflow = null,\r\n            //holds body tab index in case it has any.\r\n            tabindex = false,\r\n            //condition for detecting safari\r\n            isSafari = window.navigator.userAgent.indexOf('Safari') > -1 && window.navigator.userAgent.indexOf('Chrome') < 0,\r\n            //dialog building blocks\r\n            templates = {\r\n                dimmer:'<div class=\"ajs-dimmer\"></div>',\r\n                /*tab index required to fire click event before body focus*/\r\n                modal: '<div class=\"ajs-modal\" tabindex=\"0\"></div>',\r\n                dialog: '<div class=\"ajs-dialog\" tabindex=\"0\"></div>',\r\n                reset: '<button class=\"ajs-reset\"></button>',\r\n                commands: '<div class=\"ajs-commands\"><button class=\"ajs-pin\"></button><button class=\"ajs-maximize\"></button><button class=\"ajs-close\"></button></div>',\r\n                header: '<div class=\"ajs-header\"></div>',\r\n                body: '<div class=\"ajs-body\"></div>',\r\n                content: '<div class=\"ajs-content\"></div>',\r\n                footer: '<div class=\"ajs-footer\"></div>',\r\n                buttons: { primary: '<div class=\"ajs-primary ajs-buttons\"></div>', auxiliary: '<div class=\"ajs-auxiliary ajs-buttons\"></div>' },\r\n                button: '<button class=\"ajs-button\"></button>',\r\n                resizeHandle: '<div class=\"ajs-handle\"></div>',\r\n            },\r\n            //common class names\r\n            classes = {\r\n                animationIn: 'ajs-in',\r\n                animationOut: 'ajs-out',\r\n                base: 'alertify',\r\n                basic:'ajs-basic',\r\n                capture: 'ajs-capture',\r\n                closable:'ajs-closable',\r\n                fixed: 'ajs-fixed',\r\n                frameless:'ajs-frameless',\r\n                hidden: 'ajs-hidden',\r\n                maximize: 'ajs-maximize',\r\n                maximized: 'ajs-maximized',\r\n                maximizable:'ajs-maximizable',\r\n                modeless: 'ajs-modeless',\r\n                movable: 'ajs-movable',\r\n                noSelection: 'ajs-no-selection',\r\n                noOverflow: 'ajs-no-overflow',\r\n                noPadding:'ajs-no-padding',\r\n                pin:'ajs-pin',\r\n                pinnable:'ajs-pinnable',\r\n                prefix: 'ajs-',\r\n                resizable: 'ajs-resizable',\r\n                restore: 'ajs-restore',\r\n                shake:'ajs-shake',\r\n                unpinned:'ajs-unpinned',\r\n                noTransition:'ajs-no-transition'\r\n            };\r\n\r\n        /**\r\n         * Helper: initializes the dialog instance\r\n         * \r\n         * @return\t{Number}\tThe total count of currently open modals.\r\n         */\r\n        function initialize(instance){\r\n            \r\n            if(!instance.__internal){\r\n                //invoke preinit global hook\r\n                alertify.defaults.hooks.preinit(instance);\r\n                //no need to expose init after this.\r\n                delete instance.__init;\r\n              \r\n                //keep a copy of initial dialog settings\r\n                if(!instance.__settings){\r\n                    instance.__settings = copy(instance.settings);\r\n                }\r\n                \r\n                //get dialog buttons/focus setup\r\n                var setup;\r\n                if(typeof instance.setup === 'function'){\r\n                    setup = instance.setup();\r\n                    setup.options = setup.options  || {};\r\n                    setup.focus = setup.focus  || {};\r\n                }else{\r\n                    setup = {\r\n                        buttons:[],\r\n                        focus:{\r\n                            element:null,\r\n                            select:false\r\n                        },\r\n                        options:{\r\n                        }\r\n                    };\r\n                }\r\n                \r\n                //initialize hooks object.\r\n                if(typeof instance.hooks !== 'object'){\r\n                    instance.hooks = {};\r\n                }\r\n\r\n                //copy buttons defintion\r\n                var buttonsDefinition = [];\r\n                if(Array.isArray(setup.buttons)){\r\n                    for(var b=0;b<setup.buttons.length;b+=1){\r\n                        var ref  = setup.buttons[b],\r\n                            cpy = {};\r\n                        for (var i in ref) {\r\n                            if (ref.hasOwnProperty(i)) {\r\n                                cpy[i] = ref[i];\r\n                            }\r\n                        }\r\n                        buttonsDefinition.push(cpy);\r\n                    }\r\n                }\r\n\r\n                var internal = instance.__internal = {\r\n                    /**\r\n                     * Flag holding the open state of the dialog\r\n                     * \r\n                     * @type {Boolean}\r\n                     */\r\n                    isOpen:false,\r\n                    /**\r\n                     * Active element is the element that will receive focus after\r\n                     * closing the dialog. It defaults as the body tag, but gets updated\r\n                     * to the last focused element before the dialog was opened.\r\n                     *\r\n                     * @type {Node}\r\n                     */\r\n                    activeElement:document.body,\r\n                    timerIn:undefined,\r\n                    timerOut:undefined,\r\n                    buttons: buttonsDefinition,\r\n                    focus: setup.focus,\r\n                    options: {\r\n                        title: undefined,\r\n                        modal: undefined,\r\n                        basic:undefined,\r\n                        frameless:undefined,\r\n                        defaultFocusOff:undefined,\r\n                        pinned: undefined,\r\n                        movable: undefined,\r\n                        moveBounded:undefined,\r\n                        resizable: undefined,\r\n                        autoReset: undefined,\r\n                        closable: undefined,\r\n                        closableByDimmer: undefined,\r\n                        invokeOnCloseOff:undefined,\r\n                        maximizable: undefined,\r\n                        startMaximized: undefined,\r\n                        pinnable: undefined,\r\n                        transition: undefined,\r\n                        transitionOff: undefined,\r\n                        padding:undefined,\r\n                        overflow:undefined,\r\n                        onshow:undefined,\r\n                        onclosing:undefined,\r\n                        onclose:undefined,\r\n                        onfocus:undefined,\r\n                        onmove:undefined,\r\n                        onmoved:undefined,\r\n                        onresize:undefined,\r\n                        onresized:undefined,\r\n                        onmaximize:undefined,\r\n                        onmaximized:undefined,\r\n                        onrestore:undefined,\r\n                        onrestored:undefined\r\n                    },\r\n                    resetHandler:undefined,\r\n                    beginMoveHandler:undefined,\r\n                    beginResizeHandler:undefined,\r\n                    bringToFrontHandler:undefined,\r\n                    modalClickHandler:undefined,\r\n                    buttonsClickHandler:undefined,\r\n                    commandsClickHandler:undefined,\r\n                    transitionInHandler:undefined,\r\n                    transitionOutHandler:undefined,\r\n                    destroy:undefined\r\n                };\r\n\r\n                var elements = {};\r\n                //root node\r\n                elements.root = document.createElement('div');\r\n                //prevent FOUC in case of async styles loading.\r\n                elements.root.style.display = 'none';\r\n                elements.root.className = classes.base + ' ' + classes.hidden + ' ';\r\n\r\n                elements.root.innerHTML = templates.dimmer + templates.modal;\r\n                \r\n                //dimmer\r\n                elements.dimmer = elements.root.firstChild;\r\n\r\n                //dialog\r\n                elements.modal = elements.root.lastChild;\r\n                elements.modal.innerHTML = templates.dialog;\r\n                elements.dialog = elements.modal.firstChild;\r\n                elements.dialog.innerHTML = templates.reset + templates.commands + templates.header + templates.body + templates.footer + templates.resizeHandle + templates.reset;\r\n\r\n                //reset links\r\n                elements.reset = [];\r\n                elements.reset.push(elements.dialog.firstChild);\r\n                elements.reset.push(elements.dialog.lastChild);\r\n                \r\n                //commands\r\n                elements.commands = {};\r\n                elements.commands.container = elements.reset[0].nextSibling;\r\n                elements.commands.pin = elements.commands.container.firstChild;\r\n                elements.commands.maximize = elements.commands.pin.nextSibling;\r\n                elements.commands.close = elements.commands.maximize.nextSibling;\r\n                \r\n                //header\r\n                elements.header = elements.commands.container.nextSibling;\r\n\r\n                //body\r\n                elements.body = elements.header.nextSibling;\r\n                elements.body.innerHTML = templates.content;\r\n                elements.content = elements.body.firstChild;\r\n\r\n                //footer\r\n                elements.footer = elements.body.nextSibling;\r\n                elements.footer.innerHTML = templates.buttons.auxiliary + templates.buttons.primary;\r\n                \r\n                //resize handle\r\n                elements.resizeHandle = elements.footer.nextSibling;\r\n\r\n                //buttons\r\n                elements.buttons = {};\r\n                elements.buttons.auxiliary = elements.footer.firstChild;\r\n                elements.buttons.primary = elements.buttons.auxiliary.nextSibling;\r\n                elements.buttons.primary.innerHTML = templates.button;\r\n                elements.buttonTemplate = elements.buttons.primary.firstChild;\r\n                //remove button template\r\n                elements.buttons.primary.removeChild(elements.buttonTemplate);\r\n                               \r\n                for(var x=0; x < instance.__internal.buttons.length; x+=1) {\r\n                    var button = instance.__internal.buttons[x];\r\n                    \r\n                    // add to the list of used keys.\r\n                    if(usedKeys.indexOf(button.key) < 0){\r\n                        usedKeys.push(button.key);\r\n                    }\r\n\r\n                    button.element = elements.buttonTemplate.cloneNode();\r\n                    button.element.innerHTML = button.text;\r\n                    if(typeof button.className === 'string' &&  button.className !== ''){\r\n                        addClass(button.element, button.className);\r\n                    }\r\n                    for(var key in button.attrs){\r\n                        if(key !== 'className' && button.attrs.hasOwnProperty(key)){\r\n                            button.element.setAttribute(key, button.attrs[key]);\r\n                        }\r\n                    }\r\n                    if(button.scope === 'auxiliary'){\r\n                        elements.buttons.auxiliary.appendChild(button.element);\r\n                    }else{\r\n                        elements.buttons.primary.appendChild(button.element);\r\n                    }\r\n                }\r\n                //make elements pubic\r\n                instance.elements = elements;\r\n                \r\n                //save event handlers delegates\r\n                internal.resetHandler = delegate(instance, onReset);\r\n                internal.beginMoveHandler = delegate(instance, beginMove);\r\n                internal.beginResizeHandler = delegate(instance, beginResize);\r\n                internal.bringToFrontHandler = delegate(instance, bringToFront);\r\n                internal.modalClickHandler = delegate(instance, modalClickHandler);\r\n                internal.buttonsClickHandler = delegate(instance, buttonsClickHandler);\r\n                internal.commandsClickHandler = delegate(instance, commandsClickHandler);\r\n                internal.transitionInHandler = delegate(instance, handleTransitionInEvent);\r\n                internal.transitionOutHandler = delegate(instance, handleTransitionOutEvent);\r\n\r\n                //settings\r\n                for(var opKey in internal.options){\r\n                    if(setup.options[opKey] !== undefined){\r\n                        // if found in user options\r\n                        instance.set(opKey, setup.options[opKey]);\r\n                    }else if(alertify.defaults.hasOwnProperty(opKey)) {\r\n                        // else if found in defaults options\r\n                        instance.set(opKey, alertify.defaults[opKey]);\r\n                    }else if(opKey === 'title' ) {\r\n                        // else if title key, use alertify.defaults.glossary\r\n                        instance.set(opKey, alertify.defaults.glossary[opKey]);\r\n                    }\r\n                }\r\n\r\n                // allow dom customization\r\n                if(typeof instance.build === 'function'){\r\n                    instance.build();\r\n                }\r\n\r\n                //invoke postinit global hook\r\n                alertify.defaults.hooks.postinit(instance);\r\n            }\r\n\r\n            //add to the end of the DOM tree.\r\n            document.body.appendChild(instance.elements.root);\r\n        }\r\n\r\n        /**\r\n         * Helper: maintains scroll position\r\n         *\r\n         */\r\n        var scrollX, scrollY;\r\n        function saveScrollPosition(){\r\n            scrollX = getScrollLeft();\r\n            scrollY = getScrollTop();\r\n        }\r\n        function restoreScrollPosition(){\r\n            window.scrollTo(scrollX, scrollY);\r\n        }\r\n\r\n        /**\r\n         * Helper: adds/removes no-overflow class from body\r\n         *\r\n         */\r\n        function ensureNoOverflow(){\r\n            var requiresNoOverflow = 0;\r\n            for(var x=0;x<openDialogs.length;x+=1){\r\n                var instance = openDialogs[x];\r\n                if(instance.isModal() || instance.isMaximized()){\r\n                    requiresNoOverflow+=1;\r\n                }\r\n            }\r\n            if(requiresNoOverflow === 0 && document.body.className.indexOf(classes.noOverflow) >= 0){\r\n                //last open modal or last maximized one\r\n                removeClass(document.body, classes.noOverflow);\r\n                preventBodyShift(false);\r\n            }else if(requiresNoOverflow > 0 && document.body.className.indexOf(classes.noOverflow) < 0){\r\n                //first open modal or first maximized one\r\n                preventBodyShift(true);\r\n                addClass(document.body, classes.noOverflow);\r\n            }\r\n        }\r\n        var top = '', topScroll = 0;\r\n        /**\r\n         * Helper: prevents body shift.\r\n         *\r\n         */\r\n        function preventBodyShift(add){\r\n            if(alertify.defaults.preventBodyShift){\r\n                if(add && document.documentElement.scrollHeight > document.documentElement.clientHeight ){//&& openDialogs[openDialogs.length-1].elements.dialog.clientHeight <= document.documentElement.clientHeight){\r\n                    topScroll = scrollY;\r\n                    top = window.getComputedStyle(document.body).top;\r\n                    addClass(document.body, classes.fixed);\r\n                    document.body.style.top = -scrollY + 'px';\r\n                } else if(!add) {\r\n                    scrollY = topScroll;\r\n                    document.body.style.top = top;\r\n                    removeClass(document.body, classes.fixed);\r\n                    restoreScrollPosition();\r\n                }\r\n            }\r\n        }\r\n\t\t\r\n        /**\r\n         * Sets the name of the transition used to show/hide the dialog\r\n         * \r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         */\r\n        function updateTransition(instance, value, oldValue){\r\n            if(typeof oldValue === 'string'){\r\n                removeClass(instance.elements.root,classes.prefix +  oldValue);\r\n            }\r\n            addClass(instance.elements.root, classes.prefix + value);\r\n            reflow = instance.elements.root.offsetWidth;\r\n        }\r\n\r\n        /**\r\n         * Toggles the dialog no transition \r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateTransitionOff(instance){\r\n            if (instance.get('transitionOff')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.noTransition);\r\n            } else {\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.noTransition);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Toggles the dialog display mode\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateDisplayMode(instance){\r\n            if(instance.get('modal')){\r\n\r\n                //make modal\r\n                removeClass(instance.elements.root, classes.modeless);\r\n\r\n                //only if open\r\n                if(instance.isOpen()){\r\n                    unbindModelessEvents(instance);\r\n\r\n                    //in case a pinned modless dialog was made modal while open.\r\n                    updateAbsPositionFix(instance);\r\n\r\n                    ensureNoOverflow();\r\n                }\r\n            }else{\r\n                //make modelss\r\n                addClass(instance.elements.root, classes.modeless);\r\n\r\n                //only if open\r\n                if(instance.isOpen()){\r\n                    bindModelessEvents(instance);\r\n\r\n                    //in case pin/unpin was called while a modal is open\r\n                    updateAbsPositionFix(instance);\r\n\r\n                    ensureNoOverflow();\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Toggles the dialog basic view mode \r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateBasicMode(instance){\r\n            if (instance.get('basic')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.basic);\r\n            } else {\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.basic);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Toggles the dialog frameless view mode \r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateFramelessMode(instance){\r\n            if (instance.get('frameless')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.frameless);\r\n            } else {\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.frameless);\r\n            }\r\n        }\r\n\t\t\r\n        /**\r\n         * Helper: Brings the modeless dialog to front, attached to modeless dialogs.\r\n         *\r\n         * @param {Event} event Focus event\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function bringToFront(event, instance){\r\n            \r\n            // Do not bring to front if preceeded by an open modal\r\n            var index = openDialogs.indexOf(instance);\r\n            for(var x=index+1;x<openDialogs.length;x+=1){\r\n                if(openDialogs[x].isModal()){\r\n                    return;\r\n                }\r\n            }\r\n\t\t\t\r\n            // Bring to front by making it the last child.\r\n            if(document.body.lastChild !== instance.elements.root){\r\n                document.body.appendChild(instance.elements.root);\r\n                //also make sure its at the end of the list\r\n                openDialogs.splice(openDialogs.indexOf(instance),1);\r\n                openDialogs.push(instance);\r\n                setFocus(instance);\r\n            }\r\n\t\t\t\r\n            return false;\r\n        }\r\n\t\t\r\n        /**\r\n         * Helper: reflects dialogs options updates\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {String} option The updated option name.\r\n         *\r\n         * @return\t{undefined}\t\r\n         */\r\n        function optionUpdated(instance, option, oldValue, newValue){\r\n            switch(option){\r\n            case 'title':\r\n                instance.setHeader(newValue);\r\n                break;\r\n            case 'modal':\r\n                updateDisplayMode(instance);\r\n                break;\r\n            case 'basic':\r\n                updateBasicMode(instance);\r\n                break;\r\n            case 'frameless':\r\n                updateFramelessMode(instance);\r\n                break;\r\n            case 'pinned':\r\n                updatePinned(instance);\r\n                break;\r\n            case 'closable':\r\n                updateClosable(instance);\r\n                break;\r\n            case 'maximizable':\r\n                updateMaximizable(instance);\r\n                break;\r\n            case 'pinnable':\r\n                updatePinnable(instance);\r\n                break;\r\n            case 'movable':\r\n                updateMovable(instance);\r\n                break;\r\n            case 'resizable':\r\n                updateResizable(instance);\r\n                break;\r\n            case 'padding':\r\n                if(newValue){\r\n                    removeClass(instance.elements.root, classes.noPadding);\r\n                }else if(instance.elements.root.className.indexOf(classes.noPadding) < 0){\r\n                    addClass(instance.elements.root, classes.noPadding);\r\n                }\r\n                break;\r\n            case 'overflow':\r\n                if(newValue){\r\n                    removeClass(instance.elements.root, classes.noOverflow);\r\n                }else if(instance.elements.root.className.indexOf(classes.noOverflow) < 0){\r\n                    addClass(instance.elements.root, classes.noOverflow);\r\n                }\r\n                break;\r\n            case 'transition':\r\n                updateTransition(instance,newValue, oldValue);\r\n                break;\r\n            case 'transitionOff':\r\n                updateTransitionOff(instance);\r\n                break;\r\n            }\r\n\r\n            // internal on option updated event\r\n            if(typeof instance.hooks.onupdate === 'function'){\r\n                instance.hooks.onupdate.call(instance, option, oldValue, newValue);\r\n            }\r\n        }\r\n\t\t\r\n        /**\r\n         * Helper: reflects dialogs options updates\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Object} obj The object to set/get a value on/from.\r\n         * @param {Function} callback The callback function to call if the key was found.\r\n         * @param {String|Object} key A string specifying a propery name or a collection of key value pairs.\r\n         * @param {Object} value Optional, the value associated with the key (in case it was a string).\r\n         * @param {String} option The updated option name.\r\n         *\r\n         * @return\t{Object} result object \r\n         *\tThe result objects has an 'op' property, indicating of this is a SET or GET operation.\r\n         *\t\tGET: \r\n         *\t\t- found: a flag indicating if the key was found or not.\r\n         *\t\t- value: the property value.\r\n         *\t\tSET:\r\n         *\t\t- items: a list of key value pairs of the properties being set.\r\n         *\t\t\t\teach contains:\r\n         *\t\t\t\t\t- found: a flag indicating if the key was found or not.\r\n         *\t\t\t\t\t- key: the property key.\r\n         *\t\t\t\t\t- value: the property value.\r\n         */\r\n        function update(instance, obj, callback, key, value){\r\n            var result = {op:undefined, items: [] };\r\n            if(typeof value === 'undefined' && typeof key === 'string') {\r\n                //get\r\n                result.op = 'get';\r\n                if(obj.hasOwnProperty(key)){\r\n                    result.found = true;\r\n                    result.value = obj[key];\r\n                }else{\r\n                    result.found = false;\r\n                    result.value = undefined;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                var old;\r\n                //set\r\n                result.op = 'set';\r\n                if(typeof key === 'object'){\r\n                    //set multiple\r\n                    var args = key;\r\n                    for (var prop in args) {\r\n                        if (obj.hasOwnProperty(prop)) {\r\n                            if(obj[prop] !== args[prop]){\r\n                                old = obj[prop];\r\n                                obj[prop] = args[prop];\r\n                                callback.call(instance,prop, old, args[prop]);\r\n                            }\r\n                            result.items.push({ 'key': prop, 'value': args[prop], 'found':true});\r\n                        }else{\r\n                            result.items.push({ 'key': prop, 'value': args[prop], 'found':false});\r\n                        }\r\n                    }\r\n                } else if (typeof key === 'string'){\r\n                    //set single\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        if(obj[key] !== value){\r\n                            old  = obj[key];\r\n                            obj[key] = value;\r\n                            callback.call(instance,key, old, value);\r\n                        }\r\n                        result.items.push({'key': key, 'value': value , 'found':true});\r\n\r\n                    }else{\r\n                        result.items.push({'key': key, 'value': value , 'found':false});\r\n                    }\r\n                } else {\r\n                    //invalid params\r\n                    throw new Error('args must be a string or object');\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n\r\n\r\n        /**\r\n         * Triggers a close event.\r\n         *\r\n         * @param {Object} instance\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function triggerClose(instance) {\r\n            var found;\r\n            triggerCallback(instance, function (button) {\r\n                return found = instance.get('invokeOnCloseOff') !== true && (button.invokeOnClose === true);\r\n            });\r\n            //none of the buttons registered as onclose callback\r\n            //close the dialog\r\n            if (!found && instance.isOpen()) {\r\n                instance.close();\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Dialogs commands event handler, attached to the dialog commands element.\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * @param {Object} instance\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function commandsClickHandler(event, instance) {\r\n            var target = event.srcElement || event.target;\r\n            switch (target) {\r\n            case instance.elements.commands.pin:\r\n                if (!instance.isPinned()) {\r\n                    pin(instance);\r\n                } else {\r\n                    unpin(instance);\r\n                }\r\n                break;\r\n            case instance.elements.commands.maximize:\r\n                if (!instance.isMaximized()) {\r\n                    maximize(instance);\r\n                } else {\r\n                    restore(instance);\r\n                }\r\n                break;\r\n            case instance.elements.commands.close:\r\n                triggerClose(instance);\r\n                break;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        /**\r\n         * Helper: pins the modeless dialog.\r\n         *\r\n         * @param {Object} instance\tThe dialog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function pin(instance) {\r\n            //pin the dialog\r\n            instance.set('pinned', true);\r\n        }\r\n\r\n        /**\r\n         * Helper: unpins the modeless dialog.\r\n         *\r\n         * @param {Object} instance\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function unpin(instance) {\r\n            //unpin the dialog \r\n            instance.set('pinned', false);\r\n        }\r\n\r\n\r\n        /**\r\n         * Helper: enlarges the dialog to fill the entire screen.\r\n         *\r\n         * @param {Object} instance\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function maximize(instance) {\r\n            // allow custom `onmaximize` method\r\n            dispatchEvent('onmaximize', instance);\r\n            //maximize the dialog \r\n            addClass(instance.elements.root, classes.maximized);\r\n            if (instance.isOpen()) {\r\n                ensureNoOverflow();\r\n            }\r\n            // allow custom `onmaximized` method\r\n            dispatchEvent('onmaximized', instance);\r\n        }\r\n\r\n        /**\r\n         * Helper: returns the dialog to its former size.\r\n         *\r\n         * @param {Object} instance\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function restore(instance) {\r\n            // allow custom `onrestore` method\r\n            dispatchEvent('onrestore', instance);\r\n            //maximize the dialog \r\n            removeClass(instance.elements.root, classes.maximized);\r\n            if (instance.isOpen()) {\r\n                ensureNoOverflow();\r\n            }\r\n            // allow custom `onrestored` method\r\n            dispatchEvent('onrestored', instance);\r\n        }\r\n\r\n        /**\r\n         * Show or hide the maximize box.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updatePinnable(instance) {\r\n            if (instance.get('pinnable')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.pinnable);\r\n            } else {\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.pinnable);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Helper: Fixes the absolutly positioned modal div position.\r\n         *\r\n         * @param {Object} instance The dialog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function addAbsPositionFix(instance) {\r\n            var scrollLeft = getScrollLeft();\r\n            instance.elements.modal.style.marginTop = getScrollTop() + 'px';\r\n            instance.elements.modal.style.marginLeft = scrollLeft + 'px';\r\n            instance.elements.modal.style.marginRight = (-scrollLeft) + 'px';\r\n        }\r\n\r\n        /**\r\n         * Helper: Removes the absolutly positioned modal div position fix.\r\n         *\r\n         * @param {Object} instance The dialog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function removeAbsPositionFix(instance) {\r\n            var marginTop = parseInt(instance.elements.modal.style.marginTop, 10);\r\n            var marginLeft = parseInt(instance.elements.modal.style.marginLeft, 10);\r\n            instance.elements.modal.style.marginTop = '';\r\n            instance.elements.modal.style.marginLeft = '';\r\n            instance.elements.modal.style.marginRight = '';\r\n\r\n            if (instance.isOpen()) {\r\n                var top = 0,\r\n                    left = 0\r\n                ;\r\n                if (instance.elements.dialog.style.top !== '') {\r\n                    top = parseInt(instance.elements.dialog.style.top, 10);\r\n                }\r\n                instance.elements.dialog.style.top = (top + (marginTop - getScrollTop())) + 'px';\r\n\r\n                if (instance.elements.dialog.style.left !== '') {\r\n                    left = parseInt(instance.elements.dialog.style.left, 10);\r\n                }\r\n                instance.elements.dialog.style.left = (left + (marginLeft - getScrollLeft())) + 'px';\r\n            }\r\n        }\r\n        /**\r\n         * Helper: Adds/Removes the absolutly positioned modal div position fix based on its pinned setting.\r\n         *\r\n         * @param {Object} instance The dialog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateAbsPositionFix(instance) {\r\n            // if modeless and unpinned add fix\r\n            if (!instance.get('modal') && !instance.get('pinned')) {\r\n                addAbsPositionFix(instance);\r\n            } else {\r\n                removeAbsPositionFix(instance);\r\n            }\r\n        }\r\n        /**\r\n         * Toggles the dialog position lock | modeless only.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Boolean} on True to make it modal, false otherwise.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updatePinned(instance) {\r\n            if (instance.get('pinned')) {\r\n                removeClass(instance.elements.root, classes.unpinned);\r\n                if (instance.isOpen()) {\r\n                    removeAbsPositionFix(instance);\r\n                }\r\n            } else {\r\n                addClass(instance.elements.root, classes.unpinned);\r\n                if (instance.isOpen() && !instance.isModal()) {\r\n                    addAbsPositionFix(instance);\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Show or hide the maximize box.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateMaximizable(instance) {\r\n            if (instance.get('maximizable')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.maximizable);\r\n            } else {\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.maximizable);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Show or hide the close box.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateClosable(instance) {\r\n            if (instance.get('closable')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.closable);\r\n                bindClosableEvents(instance);\r\n            } else {\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.closable);\r\n                unbindClosableEvents(instance);\r\n            }\r\n        }\r\n\r\n        \r\n        var cancelClick = false,// flag to cancel click event if already handled by end resize event (the mousedown, mousemove, mouseup sequence fires a click event.).\r\n            modalClickHandlerTS=0 // stores last click timestamp to prevent executing the handler twice on double click.\r\n            ;\r\n\r\n        /**\r\n         * Helper: closes the modal dialog when clicking the modal\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function modalClickHandler(event, instance) {\r\n            if(event.timeStamp - modalClickHandlerTS > 200 && (modalClickHandlerTS = event.timeStamp) && !cancelClick){\r\n                var target = event.srcElement || event.target;\r\n                if (instance.get('closableByDimmer') === true && target === instance.elements.modal) {\r\n                    triggerClose(instance);\r\n                }\r\n            }\r\n            cancelClick = false;\r\n        }\r\n\r\n        // stores last call timestamp to prevent triggering the callback twice.\r\n        var callbackTS = 0;\r\n        // flag to cancel keyup event if already handled by click event (pressing Enter on a focusted button).\r\n        var cancelKeyup = false;\r\n        /** \r\n         * Helper: triggers a button callback\r\n         *\r\n         * @param {Object}\t\tThe dilog instance.\r\n         * @param {Function}\tCallback to check which button triggered the event.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function triggerCallback(instance, check) {\r\n            if(Date.now() - callbackTS > 200 && (callbackTS = Date.now())){\r\n                for (var idx = 0; idx < instance.__internal.buttons.length; idx += 1) {\r\n                    var button = instance.__internal.buttons[idx];\r\n                    if (!button.element.disabled && check(button)) {\r\n                        var closeEvent = createCloseEvent(idx, button);\r\n                        if (typeof instance.callback === 'function') {\r\n                            instance.callback.apply(instance, [closeEvent]);\r\n                        }\r\n                        //close the dialog only if not canceled.\r\n                        if (closeEvent.cancel === false) {\r\n                            instance.close();\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Clicks event handler, attached to the dialog footer.\r\n         *\r\n         * @param {Event}\t\tDOM event object.\r\n         * @param {Object}\t\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function buttonsClickHandler(event, instance) {\r\n            var target = event.srcElement || event.target;\r\n            triggerCallback(instance, function (button) {\r\n                // if this button caused the click, cancel keyup event\r\n                return button.element === target && (cancelKeyup = true);\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Keyup event handler, attached to the document.body\r\n         *\r\n         * @param {Event}\t\tDOM event object.\r\n         * @param {Object}\t\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function keyupHandler(event) {\r\n            //hitting enter while button has focus will trigger keyup too.\r\n            //ignore if handled by clickHandler\r\n            if (cancelKeyup) {\r\n                cancelKeyup = false;\r\n                return;\r\n            }\r\n            var instance = openDialogs[openDialogs.length - 1];\r\n            var keyCode = event.keyCode;\r\n            if (instance.__internal.buttons.length === 0 && keyCode === keys.ESC && instance.get('closable') === true) {\r\n                triggerClose(instance);\r\n                return false;\r\n            }else if (usedKeys.indexOf(keyCode) > -1) {\r\n                triggerCallback(instance, function (button) {\r\n                    return button.key === keyCode;\r\n                });\r\n                return false;\r\n            }\r\n        }\r\n        /**\r\n        * Keydown event handler, attached to the document.body\r\n        *\r\n        * @param {Event}\t\tDOM event object.\r\n        * @param {Object}\t\tThe dilog instance.\r\n        * \r\n        * @return {undefined}\r\n        */\r\n        function keydownHandler(event) {\r\n            var instance = openDialogs[openDialogs.length - 1];\r\n            var keyCode = event.keyCode;\r\n            if (keyCode === keys.LEFT || keyCode === keys.RIGHT) {\r\n                var buttons = instance.__internal.buttons;\r\n                for (var x = 0; x < buttons.length; x += 1) {\r\n                    if (document.activeElement === buttons[x].element) {\r\n                        switch (keyCode) {\r\n                        case keys.LEFT:\r\n                            buttons[(x || buttons.length) - 1].element.focus();\r\n                            return;\r\n                        case keys.RIGHT:\r\n                            buttons[(x + 1) % buttons.length].element.focus();\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n            }else if (keyCode < keys.F12 + 1 && keyCode > keys.F1 - 1 && usedKeys.indexOf(keyCode) > -1) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                triggerCallback(instance, function (button) {\r\n                    return button.key === keyCode;\r\n                });\r\n                return false;\r\n            }\r\n        }\r\n\r\n\r\n        /**\r\n         * Sets focus to proper dialog element\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Node} [resetTarget=undefined] DOM element to reset focus to.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function setFocus(instance, resetTarget) {\r\n            // reset target has already been determined.\r\n            if (resetTarget) {\r\n                resetTarget.focus();\r\n            } else {\r\n                // current instance focus settings\r\n                var focus = instance.__internal.focus;\r\n                // the focus element.\r\n                var element = focus.element;\r\n\r\n                switch (typeof focus.element) {\r\n                // a number means a button index\r\n                case 'number':\r\n                    if (instance.__internal.buttons.length > focus.element) {\r\n                        //in basic view, skip focusing the buttons.\r\n                        if (instance.get('basic') === true) {\r\n                            element = instance.elements.reset[0];\r\n                        } else {\r\n                            element = instance.__internal.buttons[focus.element].element;\r\n                        }\r\n                    }\r\n                    break;\r\n                // a string means querySelector to select from dialog body contents.\r\n                case 'string':\r\n                    element = instance.elements.body.querySelector(focus.element);\r\n                    break;\r\n                // a function should return the focus element.\r\n                case 'function':\r\n                    element = focus.element.call(instance);\r\n                    break;\r\n                }\r\n\r\n                // if no focus element, default to first reset element.\r\n                if (instance.get('defaultFocusOff') === true || ((typeof element === 'undefined' || element === null) && instance.__internal.buttons.length === 0)) {\r\n                    element = instance.elements.reset[0];\r\n                }\r\n                // focus\r\n                if (element && element.focus) {\r\n                    element.focus();\r\n                    // if selectable\r\n                    if (focus.select && element.select) {\r\n                        element.select();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Focus event handler, attached to document.body and dialogs own reset links.\r\n         * handles the focus for modal dialogs only.\r\n         *\r\n         * @param {Event} event DOM focus event object.\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function onReset(event, instance) {\r\n\r\n            // should work on last modal if triggered from document.body \r\n            if (!instance) {\r\n                for (var x = openDialogs.length - 1; x > -1; x -= 1) {\r\n                    if (openDialogs[x].isModal()) {\r\n                        instance = openDialogs[x];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if(instance) {\r\n                // if modal\r\n                if (instance.isModal()) {\r\n                    // determine reset target to enable forward/backward tab cycle.\r\n                    var firstReset = instance.elements.reset[0],\r\n                        lastReset = instance.elements.reset[1],\r\n                        lastFocusedElement = event.relatedTarget,\r\n                        within = instance.elements.root.contains(lastFocusedElement),\r\n                        target = event.srcElement || event.target,\r\n                        resetTarget;\r\n\r\n                    //if the previous focused element element was outside the modal do nthing\r\n                    if(  /*first show */\r\n                        (target === firstReset && !within) ||\r\n                         /*focus cycle */\r\n                        (target === lastReset && lastFocusedElement === firstReset)){\r\n                        return;\r\n                    }else if(target === lastReset || target === document.body){\r\n                        resetTarget = firstReset;\r\n                    }else if(target === firstReset && lastFocusedElement === lastReset){\r\n                        resetTarget = findTabbable(instance);\r\n                    }else if(target === firstReset && within){\r\n                        resetTarget = findTabbable(instance, true);\r\n                    }\r\n                    // focus\r\n                    setFocus(instance, resetTarget);\r\n                }\r\n            }\r\n        }\r\n        function findTabbable(instance, last){\r\n            var tabbables = [].slice.call(instance.elements.dialog.querySelectorAll(defaults.tabbable));\r\n            if(last){\r\n                tabbables.reverse();\r\n            }\r\n            for(var x=0;x<tabbables.length;x+=1){\r\n                var tabbable = tabbables[x];\r\n                //check if visible\r\n                if(!!(tabbable.offsetParent || tabbable.offsetWidth || tabbable.offsetHeight || tabbable.getClientRects().length)){\r\n                    return tabbable;\r\n                }\r\n            }\r\n        }\r\n        function recycleTab(event) {\r\n            var instance = openDialogs[openDialogs.length - 1];\r\n            if (instance && event.shiftKey && event.keyCode === keys.TAB) {\r\n                instance.elements.reset[1].focus();\r\n            }\r\n        }\r\n        /**\r\n         * Transition in transitionend event handler. \r\n         *\r\n         * @param {Event}\t\tTransitionEnd event object.\r\n         * @param {Object}\t\tThe dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function handleTransitionInEvent(event, instance) {\r\n            // clear the timer\r\n            clearTimeout(instance.__internal.timerIn);\r\n\r\n            // once transition is complete, set focus\r\n            setFocus(instance);\r\n\r\n            // allow handling key up after transition ended.\r\n            cancelKeyup = false;\r\n\r\n            // allow custom `onfocus` method\r\n            dispatchEvent('onfocus', instance);\r\n\r\n            // unbind the event\r\n            off(instance.elements.dialog, transition.type, instance.__internal.transitionInHandler);\r\n\r\n            removeClass(instance.elements.root, classes.animationIn);\r\n        }\r\n\r\n        /**\r\n         * Transition out transitionend event handler. \r\n         *\r\n         * @param {Event}\t\tTransitionEnd event object.\r\n         * @param {Object}\t\tThe dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function handleTransitionOutEvent(event, instance) {\r\n            // clear the timer\r\n            clearTimeout(instance.__internal.timerOut);\r\n            // unbind the event\r\n            off(instance.elements.dialog, transition.type, instance.__internal.transitionOutHandler);\r\n\r\n            // reset move updates\r\n            resetMove(instance);\r\n            // reset resize updates\r\n            resetResize(instance);\r\n\r\n            // restore if maximized\r\n            if (instance.isMaximized() && !instance.get('startMaximized')) {\r\n                restore(instance);\r\n            }\r\n\r\n            //destory the instance\r\n            if (typeof instance.__internal.destroy === 'function') {\r\n                instance.__internal.destroy.apply(instance);\r\n            }\r\n        }\r\n        /* Controls moving a dialog around */\r\n        //holde the current moving instance\r\n        var movable = null,\r\n            //holds the current X offset when move starts\r\n            offsetX = 0,\r\n            //holds the current Y offset when move starts\r\n            offsetY = 0,\r\n            xProp = 'pageX',\r\n            yProp = 'pageY',\r\n            bounds = null,\r\n            refreshTop = false,\r\n            moveDelegate = null\r\n        ;\r\n\r\n        /**\r\n         * Helper: sets the element top/left coordinates\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * @param {Node} element The element being moved.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function moveElement(event, element) {\r\n            var left = (event[xProp] - offsetX),\r\n                top  = (event[yProp] - offsetY);\r\n\r\n            if(refreshTop){\r\n                top -= document.body.scrollTop;\r\n            }\r\n           \r\n            element.style.left = left + 'px';\r\n            element.style.top = top + 'px';\r\n           \r\n        }\r\n        /**\r\n         * Helper: sets the element top/left coordinates within screen bounds\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * @param {Node} element The element being moved.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function moveElementBounded(event, element) {\r\n            var left = (event[xProp] - offsetX),\r\n                top  = (event[yProp] - offsetY);\r\n\r\n            if(refreshTop){\r\n                top -= document.body.scrollTop;\r\n            }\r\n            \r\n            element.style.left = Math.min(bounds.maxLeft, Math.max(bounds.minLeft, left)) + 'px';\r\n            if(refreshTop){\r\n                element.style.top = Math.min(bounds.maxTop, Math.max(bounds.minTop, top)) + 'px';\r\n            }else{\r\n                element.style.top = Math.max(bounds.minTop, top) + 'px';\r\n            }\r\n        }\r\n            \r\n\r\n        /**\r\n         * Triggers the start of a move event, attached to the header element mouse down event.\r\n         * Adds no-selection class to the body, disabling selection while moving.\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * @param {Object} instance The dilog instance.\r\n         * \r\n         * @return {Boolean} false\r\n         */\r\n        function beginMove(event, instance) {\r\n            if (resizable === null && !instance.isMaximized() && instance.get('movable')) {\r\n                var eventSrc, left=0, top=0;\r\n                if (event.type === 'touchstart') {\r\n                    event.preventDefault();\r\n                    eventSrc = event.targetTouches[0];\r\n                    xProp = 'clientX';\r\n                    yProp = 'clientY';\r\n                } else if (event.button === 0) {\r\n                    eventSrc = event;\r\n                }\r\n\r\n                if (eventSrc) {\r\n\r\n                    var element = instance.elements.dialog;\r\n                    addClass(element, classes.capture);\r\n\r\n                    if (element.style.left) {\r\n                        left = parseInt(element.style.left, 10);\r\n                    }\r\n\r\n                    if (element.style.top) {\r\n                        top = parseInt(element.style.top, 10);\r\n                    }\r\n                    \r\n                    offsetX = eventSrc[xProp] - left;\r\n                    offsetY = eventSrc[yProp] - top;\r\n\r\n                    if(instance.isModal()){\r\n                        offsetY += instance.elements.modal.scrollTop;\r\n                    }else if(instance.isPinned()){\r\n                        offsetY -= document.body.scrollTop;\r\n                    }\r\n                    \r\n                    if(instance.get('moveBounded')){\r\n                        var current = element,\r\n                            offsetLeft = -left,\r\n                            offsetTop = -top;\r\n                        \r\n                        //calc offset\r\n                        do {\r\n                            offsetLeft += current.offsetLeft;\r\n                            offsetTop += current.offsetTop;\r\n                        } while (current = current.offsetParent);\r\n                        \r\n                        bounds = {\r\n                            maxLeft : offsetLeft,\r\n                            minLeft : -offsetLeft,\r\n                            maxTop  : document.documentElement.clientHeight - element.clientHeight - offsetTop,\r\n                            minTop  : -offsetTop\r\n                        };\r\n                        moveDelegate = moveElementBounded;\r\n                    }else{\r\n                        bounds = null;\r\n                        moveDelegate = moveElement;\r\n                    }\r\n                    \r\n                    // allow custom `onmove` method\r\n                    dispatchEvent('onmove', instance);\r\n\r\n                    refreshTop = !instance.isModal() && instance.isPinned();\r\n                    movable = instance;\r\n                    moveDelegate(eventSrc, element);\r\n                    addClass(document.body, classes.noSelection);\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * The actual move handler,  attached to document.body mousemove event.\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function move(event) {\r\n            if (movable) {\r\n                var eventSrc;\r\n                if (event.type === 'touchmove') {\r\n                    event.preventDefault();\r\n                    eventSrc = event.targetTouches[0];\r\n                } else if (event.button === 0) {\r\n                    eventSrc = event;\r\n                }\r\n                if (eventSrc) {\r\n                    moveDelegate(eventSrc, movable.elements.dialog);\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Triggers the end of a move event,  attached to document.body mouseup event.\r\n         * Removes no-selection class from document.body, allowing selection.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function endMove() {\r\n            if (movable) {\r\n                var instance = movable;\r\n                movable = bounds = null;\r\n                removeClass(document.body, classes.noSelection);\r\n                removeClass(instance.elements.dialog, classes.capture);\r\n                // allow custom `onmoved` method\r\n                dispatchEvent('onmoved', instance);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Resets any changes made by moving the element to its original state,\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function resetMove(instance) {\r\n            movable = null;\r\n            var element = instance.elements.dialog;\r\n            element.style.left = element.style.top = '';\r\n        }\r\n\r\n        /**\r\n         * Updates the dialog move behavior.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateMovable(instance) {\r\n            if (instance.get('movable')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.movable);\r\n                if (instance.isOpen()) {\r\n                    bindMovableEvents(instance);\r\n                }\r\n            } else {\r\n\r\n                //reset\r\n                resetMove(instance);\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.movable);\r\n                if (instance.isOpen()) {\r\n                    unbindMovableEvents(instance);\r\n                }\r\n            }\r\n        }\r\n\r\n        /* Controls moving a dialog around */\r\n        //holde the current instance being resized\t\t\r\n        var resizable = null,\r\n            //holds the staring left offset when resize starts.\r\n            startingLeft = Number.Nan,\r\n            //holds the staring width when resize starts.\r\n            startingWidth = 0,\r\n            //holds the initial width when resized for the first time.\r\n            minWidth = 0,\r\n            //holds the offset of the resize handle.\r\n            handleOffset = 0\r\n        ;\r\n\r\n        /**\r\n         * Helper: sets the element width/height and updates left coordinate if neccessary.\r\n         *\r\n         * @param {Event} event\tDOM mousemove event object.\r\n         * @param {Node} element The element being moved.\r\n         * @param {Boolean} pinned A flag indicating if the element being resized is pinned to the screen.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function resizeElement(event, element, pageRelative) {\r\n\r\n            //calculate offsets from 0,0\r\n            var current = element;\r\n            var offsetLeft = 0;\r\n            var offsetTop = 0;\r\n            do {\r\n                offsetLeft += current.offsetLeft;\r\n                offsetTop += current.offsetTop;\r\n            } while (current = current.offsetParent);\r\n\r\n            // determine X,Y coordinates.\r\n            var X, Y;\r\n            if (pageRelative === true) {\r\n                X = event.pageX;\r\n                Y = event.pageY;\r\n            } else {\r\n                X = event.clientX;\r\n                Y = event.clientY;\r\n            }\r\n            // rtl handling\r\n            var isRTL = isRightToLeft();\r\n            if (isRTL) {\r\n                // reverse X \r\n                X = document.body.offsetWidth - X;\r\n                // if has a starting left, calculate offsetRight\r\n                if (!isNaN(startingLeft)) {\r\n                    offsetLeft = document.body.offsetWidth - offsetLeft - element.offsetWidth;\r\n                }\r\n            }\r\n\r\n            // set width/height\r\n            element.style.height = (Y - offsetTop + handleOffset) + 'px';\r\n            element.style.width = (X - offsetLeft + handleOffset) + 'px';\r\n\r\n            // if the element being resized has a starting left, maintain it.\r\n            // the dialog is centered, divide by half the offset to maintain the margins.\r\n            if (!isNaN(startingLeft)) {\r\n                var diff = Math.abs(element.offsetWidth - startingWidth) * 0.5;\r\n                if (isRTL) {\r\n                    //negate the diff, why?\r\n                    //when growing it should decrease left\r\n                    //when shrinking it should increase left\r\n                    diff *= -1;\r\n                }\r\n                if (element.offsetWidth > startingWidth) {\r\n                    //growing\r\n                    element.style.left = (startingLeft + diff) + 'px';\r\n                } else if (element.offsetWidth >= minWidth) {\r\n                    //shrinking\r\n                    element.style.left = (startingLeft - diff) + 'px';\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Triggers the start of a resize event, attached to the resize handle element mouse down event.\r\n         * Adds no-selection class to the body, disabling selection while moving.\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * @param {Object} instance The dilog instance.\r\n         * \r\n         * @return {Boolean} false\r\n         */\r\n        function beginResize(event, instance) {\r\n            if (!instance.isMaximized()) {\r\n                var eventSrc;\r\n                if (event.type === 'touchstart') {\r\n                    event.preventDefault();\r\n                    eventSrc = event.targetTouches[0];\r\n                } else if (event.button === 0) {\r\n                    eventSrc = event;\r\n                }\r\n                if (eventSrc) {\r\n                    // allow custom `onresize` method\r\n                    dispatchEvent('onresize', instance);\r\n                    \r\n                    resizable = instance;\r\n                    handleOffset = instance.elements.resizeHandle.offsetHeight / 2;\r\n                    var element = instance.elements.dialog;\r\n                    addClass(element, classes.capture);\r\n                    startingLeft = parseInt(element.style.left, 10);\r\n                    element.style.height = element.offsetHeight + 'px';\r\n                    element.style.minHeight = instance.elements.header.offsetHeight + instance.elements.footer.offsetHeight + 'px';\r\n                    element.style.width = (startingWidth = element.offsetWidth) + 'px';\r\n\r\n                    if (element.style.maxWidth !== 'none') {\r\n                        element.style.minWidth = (minWidth = element.offsetWidth) + 'px';\r\n                    }\r\n                    element.style.maxWidth = 'none';\r\n                    addClass(document.body, classes.noSelection);\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * The actual resize handler,  attached to document.body mousemove event.\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function resize(event) {\r\n            if (resizable) {\r\n                var eventSrc;\r\n                if (event.type === 'touchmove') {\r\n                    event.preventDefault();\r\n                    eventSrc = event.targetTouches[0];\r\n                } else if (event.button === 0) {\r\n                    eventSrc = event;\r\n                }\r\n                if (eventSrc) {\r\n                    resizeElement(eventSrc, resizable.elements.dialog, !resizable.get('modal') && !resizable.get('pinned'));\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Triggers the end of a resize event,  attached to document.body mouseup event.\r\n         * Removes no-selection class from document.body, allowing selection.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function endResize() {\r\n            if (resizable) {\r\n                var instance = resizable;\r\n                resizable = null;\r\n                removeClass(document.body, classes.noSelection);\r\n                removeClass(instance.elements.dialog, classes.capture);\r\n                cancelClick = true;\r\n                // allow custom `onresized` method\r\n                dispatchEvent('onresized', instance);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Resets any changes made by resizing the element to its original state.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function resetResize(instance) {\r\n            resizable = null;\r\n            var element = instance.elements.dialog;\r\n            if (element.style.maxWidth === 'none') {\r\n                //clear inline styles.\r\n                element.style.maxWidth = element.style.minWidth = element.style.width = element.style.height = element.style.minHeight = element.style.left = '';\r\n                //reset variables.\r\n                startingLeft = Number.Nan;\r\n                startingWidth = minWidth = handleOffset = 0;\r\n            }\r\n        }\r\n\r\n\r\n        /**\r\n         * Updates the dialog move behavior.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateResizable(instance) {\r\n            if (instance.get('resizable')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.resizable);\r\n                if (instance.isOpen()) {\r\n                    bindResizableEvents(instance);\r\n                }\r\n            } else {\r\n                //reset\r\n                resetResize(instance);\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.resizable);\r\n                if (instance.isOpen()) {\r\n                    unbindResizableEvents(instance);\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Reset move/resize on window resize.\r\n         *\r\n         * @param {Event} event\twindow resize event object.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function windowResize(/*event*/) {\r\n            for (var x = 0; x < openDialogs.length; x += 1) {\r\n                var instance = openDialogs[x];\r\n                if (instance.get('autoReset')) {\r\n                    resetMove(instance);\r\n                    resetResize(instance);\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * Bind dialogs events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function bindEvents(instance) {\r\n            // if first dialog, hook global handlers\r\n            if (openDialogs.length === 1) {\r\n                //global\r\n                on(window, 'resize', windowResize);\r\n                on(document.body, 'keyup', keyupHandler);\r\n                on(document.body, 'keydown', keydownHandler);\r\n                on(document.body, 'focus', onReset);\r\n\r\n                //move\r\n                on(document.documentElement, 'mousemove', move);\r\n                on(document.documentElement, 'touchmove', move, false, false);\r\n                on(document.documentElement, 'mouseup', endMove);\r\n                on(document.documentElement, 'touchend', endMove);\r\n                //resize\r\n                on(document.documentElement, 'mousemove', resize);\r\n                on(document.documentElement, 'touchmove', resize, false, false);\r\n                on(document.documentElement, 'mouseup', endResize);\r\n                on(document.documentElement, 'touchend', endResize);\r\n            }\r\n\r\n            // common events\r\n            on(instance.elements.commands.container, 'click', instance.__internal.commandsClickHandler);\r\n            on(instance.elements.footer, 'click', instance.__internal.buttonsClickHandler);\r\n            on(instance.elements.reset[0], 'focusin', instance.__internal.resetHandler);\r\n            on(instance.elements.reset[0], 'keydown', recycleTab);\r\n            on(instance.elements.reset[1], 'focusin', instance.__internal.resetHandler);\r\n\r\n            //prevent handling key up when dialog is being opened by a key stroke.\r\n            cancelKeyup = true;\r\n            // hook in transition handler\r\n            on(instance.elements.dialog, transition.type, instance.__internal.transitionInHandler);\r\n\r\n            // modelss only events\r\n            if (!instance.get('modal')) {\r\n                bindModelessEvents(instance);\r\n            }\r\n\r\n            // resizable\r\n            if (instance.get('resizable')) {\r\n                bindResizableEvents(instance);\r\n            }\r\n\r\n            // movable\r\n            if (instance.get('movable')) {\r\n                bindMovableEvents(instance);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Unbind dialogs events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function unbindEvents(instance) {\r\n            // if last dialog, remove global handlers\r\n            if (openDialogs.length === 1) {\r\n                //global\r\n                off(window, 'resize', windowResize);\r\n                off(document.body, 'keyup', keyupHandler);\r\n                off(document.body, 'keydown', keydownHandler);\r\n                off(document.body, 'focus', onReset);\r\n                //move\r\n                off(document.documentElement, 'mousemove', move);\r\n                off(document.documentElement, 'mouseup', endMove);\r\n                //resize\r\n                off(document.documentElement, 'mousemove', resize);\r\n                off(document.documentElement, 'mouseup', endResize);\r\n            }\r\n\r\n            // common events\r\n            off(instance.elements.commands.container, 'click', instance.__internal.commandsClickHandler);\r\n            off(instance.elements.footer, 'click', instance.__internal.buttonsClickHandler);\r\n            off(instance.elements.reset[0], 'focusin', instance.__internal.resetHandler);\r\n            off(instance.elements.reset[0], 'keydown', recycleTab);\r\n            off(instance.elements.reset[1], 'focusin', instance.__internal.resetHandler);\r\n\r\n            // hook out transition handler\r\n            on(instance.elements.dialog, transition.type, instance.__internal.transitionOutHandler);\r\n\r\n            // modelss only events\r\n            if (!instance.get('modal')) {\r\n                unbindModelessEvents(instance);\r\n            }\r\n\r\n            // movable\r\n            if (instance.get('movable')) {\r\n                unbindMovableEvents(instance);\r\n            }\r\n\r\n            // resizable\r\n            if (instance.get('resizable')) {\r\n                unbindResizableEvents(instance);\r\n            }\r\n\r\n        }\r\n\r\n        /**\r\n         * Bind modeless specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function bindModelessEvents(instance) {\r\n            on(instance.elements.dialog, 'focus', instance.__internal.bringToFrontHandler, true);\r\n        }\r\n\r\n        /**\r\n         * Unbind modeless specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function unbindModelessEvents(instance) {\r\n            off(instance.elements.dialog, 'focus', instance.__internal.bringToFrontHandler, true);\r\n        }\r\n\r\n\r\n\r\n        /**\r\n         * Bind movable specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function bindMovableEvents(instance) {\r\n            on(instance.elements.header, 'mousedown', instance.__internal.beginMoveHandler);\r\n            on(instance.elements.header, 'touchstart', instance.__internal.beginMoveHandler, false, false);\r\n        }\r\n\r\n        /**\r\n         * Unbind movable specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function unbindMovableEvents(instance) {\r\n            off(instance.elements.header, 'mousedown', instance.__internal.beginMoveHandler);\r\n            off(instance.elements.header, 'touchstart', instance.__internal.beginMoveHandler, false, false);\r\n        }\r\n\r\n\r\n\r\n        /**\r\n         * Bind resizable specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function bindResizableEvents(instance) {\r\n            on(instance.elements.resizeHandle, 'mousedown', instance.__internal.beginResizeHandler);\r\n            on(instance.elements.resizeHandle, 'touchstart', instance.__internal.beginResizeHandler, false, false);\r\n        }\r\n\r\n        /**\r\n         * Unbind resizable specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function unbindResizableEvents(instance) {\r\n            off(instance.elements.resizeHandle, 'mousedown', instance.__internal.beginResizeHandler);\r\n            off(instance.elements.resizeHandle, 'touchstart', instance.__internal.beginResizeHandler, false, false);\r\n        }\r\n\r\n        /**\r\n         * Bind closable events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function bindClosableEvents(instance) {\r\n            on(instance.elements.modal, 'click', instance.__internal.modalClickHandler);\r\n        }\r\n\r\n        /**\r\n         * Unbind closable specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function unbindClosableEvents(instance) {\r\n            off(instance.elements.modal, 'click', instance.__internal.modalClickHandler);\r\n        }\r\n        // dialog API\r\n        return {\r\n            __init:initialize,\r\n            /**\r\n             * Check if dialog is currently open\r\n             *\r\n             * @return {Boolean}\r\n             */\r\n            isOpen: function () {\r\n                return this.__internal.isOpen;\r\n            },\r\n            isModal: function (){\r\n                return this.elements.root.className.indexOf(classes.modeless) < 0;\r\n            },\r\n            isMaximized:function(){\r\n                return this.elements.root.className.indexOf(classes.maximized) > -1;\r\n            },\r\n            isPinned:function(){\r\n                return this.elements.root.className.indexOf(classes.unpinned) < 0;\r\n            },\r\n            maximize:function(){\r\n                if(!this.isMaximized()){\r\n                    maximize(this);\r\n                }\r\n                return this;\r\n            },\r\n            restore:function(){\r\n                if(this.isMaximized()){\r\n                    restore(this);\r\n                }\r\n                return this;\r\n            },\r\n            pin:function(){\r\n                if(!this.isPinned()){\r\n                    pin(this);\r\n                }\r\n                return this;\r\n            },\r\n            unpin:function(){\r\n                if(this.isPinned()){\r\n                    unpin(this);\r\n                }\r\n                return this;\r\n            },\r\n            bringToFront:function(){\r\n                bringToFront(null, this);\r\n                return this;\r\n            },\r\n            /**\r\n             * Move the dialog to a specific x/y coordinates\r\n             *\r\n             * @param {Number} x    The new dialog x coordinate in pixels.\r\n             * @param {Number} y    The new dialog y coordinate in pixels.\r\n             *\r\n             * @return {Object} The dialog instance.\r\n             */\r\n            moveTo:function(x,y){\r\n                if(!isNaN(x) && !isNaN(y)){\r\n                    // allow custom `onmove` method\r\n                    dispatchEvent('onmove', this);\r\n                    \r\n                    var element = this.elements.dialog,\r\n                        current = element,\r\n                        offsetLeft = 0,\r\n                        offsetTop = 0;\r\n                    \r\n                    //subtract existing left,top\r\n                    if (element.style.left) {\r\n                        offsetLeft -= parseInt(element.style.left, 10);\r\n                    }\r\n                    if (element.style.top) {\r\n                        offsetTop -= parseInt(element.style.top, 10);\r\n                    }\r\n                    //calc offset\r\n                    do {\r\n                        offsetLeft += current.offsetLeft;\r\n                        offsetTop += current.offsetTop;\r\n                    } while (current = current.offsetParent);\r\n\r\n                    //calc left, top\r\n                    var left = (x - offsetLeft);\r\n                    var top  = (y - offsetTop);\r\n\r\n                    //// rtl handling\r\n                    if (isRightToLeft()) {\r\n                        left *= -1;\r\n                    }\r\n\r\n                    element.style.left = left + 'px';\r\n                    element.style.top = top + 'px';\r\n                    \r\n                    // allow custom `onmoved` method\r\n                    dispatchEvent('onmoved', this);\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n             * Resize the dialog to a specific width/height (the dialog must be 'resizable').\r\n             * The dialog can be resized to:\r\n             *  A minimum width equal to the initial display width\r\n             *  A minimum height equal to the sum of header/footer heights.\r\n             *\r\n             *\r\n             * @param {Number or String} width    The new dialog width in pixels or in percent.\r\n             * @param {Number or String} height   The new dialog height in pixels or in percent.\r\n             *\r\n             * @return {Object} The dialog instance.\r\n             */\r\n            resizeTo:function(width,height){\r\n                var w = parseFloat(width),\r\n                    h = parseFloat(height),\r\n                    regex = /(\\d*\\.\\d+|\\d+)%/\r\n                ;\r\n\r\n                if(!isNaN(w) && !isNaN(h) && this.get('resizable') === true){\r\n                    \r\n                    // allow custom `onresize` method\r\n                    dispatchEvent('onresize', this);\r\n                    \r\n                    if(('' + width).match(regex)){\r\n                        w = w / 100 * document.documentElement.clientWidth ;\r\n                    }\r\n\r\n                    if(('' + height).match(regex)){\r\n                        h = h / 100 * document.documentElement.clientHeight;\r\n                    }\r\n\r\n                    var element = this.elements.dialog;\r\n                    if (element.style.maxWidth !== 'none') {\r\n                        element.style.minWidth = (minWidth = element.offsetWidth) + 'px';\r\n                    }\r\n                    element.style.maxWidth = 'none';\r\n                    element.style.minHeight = this.elements.header.offsetHeight + this.elements.footer.offsetHeight + 'px';\r\n                    element.style.width = w + 'px';\r\n                    element.style.height = h + 'px';\r\n                    \r\n                    // allow custom `onresized` method\r\n                    dispatchEvent('onresized', this);\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n             * Gets or Sets dialog settings/options \r\n             *\r\n             * @param {String|Object} key A string specifying a propery name or a collection of key/value pairs.\r\n             * @param {Object} value Optional, the value associated with the key (in case it was a string).\r\n             *\r\n             * @return {undefined}\r\n             */\r\n            setting : function (key, value) {\r\n                var self = this;\r\n                var result = update(this, this.__internal.options, function(k,o,n){ optionUpdated(self,k,o,n); }, key, value);\r\n                if(result.op === 'get'){\r\n                    if(result.found){\r\n                        return result.value;\r\n                    }else if(typeof this.settings !== 'undefined'){\r\n                        return update(this, this.settings, this.settingUpdated || function(){}, key, value).value;\r\n                    }else{\r\n                        return undefined;\r\n                    }\r\n                }else if(result.op === 'set'){\r\n                    if(result.items.length > 0){\r\n                        var callback = this.settingUpdated || function(){};\r\n                        for(var x=0;x<result.items.length;x+=1){\r\n                            var item = result.items[x];\r\n                            if(!item.found && typeof this.settings !== 'undefined'){\r\n                                update(this, this.settings, callback, item.key, item.value);\r\n                            }\r\n                        }\r\n                    }\r\n                    return this;\r\n                }\r\n            },\r\n            /**\r\n             * [Alias] Sets dialog settings/options \r\n             */\r\n            set:function(key, value){\r\n                this.setting(key,value);\r\n                return this;\r\n            },\r\n            /**\r\n             * [Alias] Gets dialog settings/options \r\n             */\r\n            get:function(key){\r\n                return this.setting(key);\r\n            },\r\n            /**\r\n            * Sets dialog header\r\n            * @content {string or element}\r\n            *\r\n            * @return {undefined}\r\n            */\r\n            setHeader:function(content){\r\n                if(typeof content === 'string'){\r\n                    clearContents(this.elements.header);\r\n                    this.elements.header.innerHTML = content;\r\n                }else if (content instanceof window.HTMLElement && this.elements.header.firstChild !== content){\r\n                    clearContents(this.elements.header);\r\n                    this.elements.header.appendChild(content);\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n            * Sets dialog contents\r\n            * @content {string or element}\r\n            *\r\n            * @return {undefined}\r\n            */\r\n            setContent:function(content){\r\n                if(typeof content === 'string'){\r\n                    clearContents(this.elements.content);\r\n                    this.elements.content.innerHTML = content;\r\n                }else if (content instanceof window.HTMLElement && this.elements.content.firstChild !== content){\r\n                    clearContents(this.elements.content);\r\n                    this.elements.content.appendChild(content);\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n             * Show the dialog as modal\r\n             *\r\n             * @return {Object} the dialog instance.\r\n             */\r\n            showModal: function(className){\r\n                return this.show(true, className);\r\n            },\r\n            /**\r\n             * Show the dialog\r\n             *\r\n             * @return {Object} the dialog instance.\r\n             */\r\n            show: function (modal, className) {\r\n                \r\n                // ensure initialization\r\n                initialize(this);\r\n\r\n                if ( !this.__internal.isOpen ) {\r\n\r\n                    // add to open dialogs\r\n                    this.__internal.isOpen = true;\r\n                    openDialogs.push(this);\r\n\r\n                    // save last focused element\r\n                    if(alertify.defaults.maintainFocus){\r\n                        this.__internal.activeElement = document.activeElement;\r\n                    }\r\n\r\n                    // set tabindex attribute on body element this allows script to give it focusable\r\n                    if(!document.body.hasAttribute('tabindex')) {\r\n                        document.body.setAttribute( 'tabindex', tabindex = '0');\r\n                    }\r\n\r\n                    //allow custom dom manipulation updates before showing the dialog.\r\n                    if(typeof this.prepare === 'function'){\r\n                        this.prepare();\r\n                    }\r\n\r\n                    bindEvents(this);\r\n\r\n                    if(modal !== undefined){\r\n                        this.set('modal', modal);\r\n                    }\r\n\r\n                    //save scroll to prevent document jump\r\n                    saveScrollPosition();\r\n\r\n                    ensureNoOverflow();\r\n\r\n                    // allow custom dialog class on show\r\n                    if(typeof className === 'string' && className !== ''){\r\n                        this.__internal.className = className;\r\n                        addClass(this.elements.root, className);\r\n                    }\r\n\r\n                    // maximize if start maximized\r\n                    if ( this.get('startMaximized')) {\r\n                        this.maximize();\r\n                    }else if(this.isMaximized()){\r\n                        restore(this);\r\n                    }\r\n\r\n                    updateAbsPositionFix(this);\r\n                    this.elements.root.removeAttribute('style');\r\n                    removeClass(this.elements.root, classes.animationOut);\r\n                    addClass(this.elements.root, classes.animationIn);\r\n\r\n                    // set 1s fallback in case transition event doesn't fire\r\n                    clearTimeout( this.__internal.timerIn);\r\n                    this.__internal.timerIn = setTimeout( this.__internal.transitionInHandler, transition.supported ? 1000 : 100 );\r\n\r\n                    if(isSafari){\r\n                        // force desktop safari reflow\r\n                        var root = this.elements.root;\r\n                        root.style.display  = 'none';\r\n                        setTimeout(function(){root.style.display  = 'block';}, 0);\r\n                    }\r\n\r\n                    //reflow\r\n                    reflow = this.elements.root.offsetWidth;\r\n                  \r\n                    // show dialog\r\n                    removeClass(this.elements.root, classes.hidden);\r\n\r\n                    //restore scroll to prevent document jump\r\n                    restoreScrollPosition();\r\n\r\n                    // internal on show event\r\n                    if(typeof this.hooks.onshow === 'function'){\r\n                        this.hooks.onshow.call(this);\r\n                    }\r\n\r\n                    // allow custom `onshow` method\r\n                    dispatchEvent('onshow', this);\r\n\r\n                }else{\r\n                    // reset move updates\r\n                    resetMove(this);\r\n                    // reset resize updates\r\n                    resetResize(this);\r\n                    // shake the dialog to indicate its already open\r\n                    addClass(this.elements.dialog, classes.shake);\r\n                    var self = this;\r\n                    setTimeout(function(){\r\n                        removeClass(self.elements.dialog, classes.shake);\r\n                    },200);\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n             * Close the dialog\r\n             *\r\n             * @return {Object} The dialog instance\r\n             */\r\n            close: function () {\r\n                if (this.__internal.isOpen ) {\r\n                    // custom `onclosing` event\r\n                    if(dispatchEvent('onclosing', this) !== false){\r\n\r\n                        unbindEvents(this);\r\n\r\n                        removeClass(this.elements.root, classes.animationIn);\r\n                        addClass(this.elements.root, classes.animationOut);\r\n\r\n                        // set 1s fallback in case transition event doesn't fire\r\n                        clearTimeout( this.__internal.timerOut );\r\n                        this.__internal.timerOut = setTimeout( this.__internal.transitionOutHandler, transition.supported ? 1000 : 100 );\r\n                        // hide dialog\r\n                        addClass(this.elements.root, classes.hidden);\r\n                        //reflow\r\n                        reflow = this.elements.modal.offsetWidth;\r\n\r\n                        // return focus to the last active element\r\n                        if (alertify.defaults.maintainFocus && this.__internal.activeElement) {\r\n                            this.__internal.activeElement.focus();\r\n                            this.__internal.activeElement = null;\r\n                        }\r\n\r\n                        // remove custom dialog class on hide\r\n                        if (typeof this.__internal.className !== 'undefined' && this.__internal.className !== '') {\r\n                            removeClass(this.elements.root, this.__internal.className);\r\n                        }\r\n\r\n                        // internal on close event\r\n                        if(typeof this.hooks.onclose === 'function'){\r\n                            this.hooks.onclose.call(this);\r\n                        }\r\n\r\n                        // allow custom `onclose` method\r\n                        dispatchEvent('onclose', this);\r\n\r\n                        //remove from open dialogs\r\n                        openDialogs.splice(openDialogs.indexOf(this),1);\r\n                        this.__internal.isOpen = false;\r\n\r\n                        ensureNoOverflow();\r\n                    }\r\n\r\n                }\r\n                // last dialog and tab index was set by us, remove it.\r\n                if(!openDialogs.length && tabindex === '0'){\r\n                    document.body.removeAttribute('tabindex');\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n             * Close all open dialogs except this.\r\n             *\r\n             * @return {undefined}\r\n             */\r\n            closeOthers:function(){\r\n                alertify.closeAll(this);\r\n                return this;\r\n            },\r\n            /**\r\n             * Destroys this dialog instance\r\n             *\r\n             * @return {undefined}\r\n             */\r\n            destroy:function(){\r\n                if(this.__internal) {\r\n                    if (this.__internal.isOpen ) {\r\n                        //mark dialog for destruction, this will be called on tranistionOut event.\r\n                        this.__internal.destroy = function(){\r\n                            destruct(this, initialize);\r\n                        };\r\n                        //close the dialog to unbind all events.\r\n                        this.close();\r\n                    }else if(!this.__internal.destroy){\r\n                        destruct(this, initialize);\r\n                    }\r\n                }\r\n                return this;\r\n            },\r\n        };\r\n\t} () );\r\n    var notifier = (function () {\r\n        var reflow,\r\n            element,\r\n            openInstances = [],\r\n            classes = defaults.notifier.classes,\r\n            baseClass = classes.base;\r\n        /**\r\n         * Helper: initializes the notifier instance\r\n         *\r\n         */\r\n        function initialize(instance) {\r\n\r\n            if (!instance.__internal) {\r\n                instance.__internal = {\r\n                    position: alertify.defaults.notifier.position,\r\n                    delay: alertify.defaults.notifier.delay,\r\n                };\r\n\r\n                element = document.createElement('DIV');\r\n                var transitionOff = 'transitionOff' in defaults.notifier ? defaults.notifier.transitionOff : defaults.transitionOff;\r\n                if(transitionOff){\r\n                    baseClass = classes.base + ' ajs-no-transition';\r\n                }\r\n                updatePosition(instance);\r\n            }\r\n\r\n            //add to DOM tree.\r\n            if (element.parentNode !== document.body) {\r\n                document.body.appendChild(element);\r\n            }\r\n        }\r\n\r\n        function pushInstance(instance) {\r\n            instance.__internal.pushed = true;\r\n            openInstances.push(instance);\r\n        }\r\n        function popInstance(instance) {\r\n            openInstances.splice(openInstances.indexOf(instance), 1);\r\n            instance.__internal.pushed = false;\r\n        }\r\n        /**\r\n         * Helper: update the notifier instance position\r\n         *\r\n         */\r\n        function updatePosition(instance) {\r\n            element.className = baseClass;\r\n            switch (instance.__internal.position) {\r\n            case 'top-right':\r\n                addClass(element, classes.top + ' ' + classes.right);\r\n                break;\r\n            case 'top-left':\r\n                addClass(element, classes.top + ' ' + classes.left);\r\n                break;\r\n            case 'top-center':\r\n                addClass(element, classes.top + ' ' + classes.center);\r\n                break;\r\n            case 'bottom-left':\r\n                addClass(element, classes.bottom + ' ' + classes.left);\r\n                break;\r\n            case 'bottom-center':\r\n                addClass(element, classes.bottom + ' ' + classes.center);\r\n                break;\r\n\r\n            default:\r\n            case 'bottom-right':\r\n                addClass(element, classes.bottom + ' ' + classes.right);\r\n                break;\r\n            }\r\n        }\r\n\r\n        /**\r\n        * creates a new notification message\r\n        *\r\n        * @param  {DOMElement} message\tThe notifier message element\r\n        * @param  {Number} wait   Time (in ms) to wait before the message is dismissed, a value of 0 means keep open till clicked.\r\n        * @param  {Function} callback A callback function to be invoked when the message is dismissed.\r\n        *\r\n        * @return {undefined}\r\n        */\r\n        function create(div, callback) {\r\n\r\n            function clickDelegate(event, instance) {\r\n                if(!instance.__internal.closeButton || event.target.getAttribute('data-close') === 'true'){\r\n                    instance.dismiss(true);\r\n                }\r\n            }\r\n\r\n            function transitionDone(event, instance) {\r\n                // unbind event\r\n                off(instance.element, transition.type, transitionDone);\r\n                // remove the message\r\n                element.removeChild(instance.element);\r\n            }\r\n\r\n            function initialize(instance) {\r\n                if (!instance.__internal) {\r\n                    instance.__internal = {\r\n                        pushed: false,\r\n                        delay : undefined,\r\n                        timer: undefined,\r\n                        clickHandler: undefined,\r\n                        transitionEndHandler: undefined,\r\n                        transitionTimeout: undefined\r\n                    };\r\n                    instance.__internal.clickHandler = delegate(instance, clickDelegate);\r\n                    instance.__internal.transitionEndHandler = delegate(instance, transitionDone);\r\n                }\r\n                return instance;\r\n            }\r\n            function clearTimers(instance) {\r\n                clearTimeout(instance.__internal.timer);\r\n                clearTimeout(instance.__internal.transitionTimeout);\r\n            }\r\n            return initialize({\r\n                /* notification DOM element*/\r\n                element: div,\r\n                /*\r\n                 * Pushes a notification message\r\n                 * @param {string or DOMElement} content The notification message content\r\n                 * @param {Number} wait The time (in seconds) to wait before the message is dismissed, a value of 0 means keep open till clicked.\r\n                 *\r\n                 */\r\n                push: function (_content, _wait) {\r\n                    if (!this.__internal.pushed) {\r\n\r\n                        pushInstance(this);\r\n                        clearTimers(this);\r\n\r\n                        var content, wait;\r\n                        switch (arguments.length) {\r\n                        case 0:\r\n                            wait = this.__internal.delay;\r\n                            break;\r\n                        case 1:\r\n                            if (typeof (_content) === 'number') {\r\n                                wait = _content;\r\n                            } else {\r\n                                content = _content;\r\n                                wait = this.__internal.delay;\r\n                            }\r\n                            break;\r\n                        case 2:\r\n                            content = _content;\r\n                            wait = _wait;\r\n                            break;\r\n                        }\r\n                        this.__internal.closeButton = alertify.defaults.notifier.closeButton;\r\n                        // set contents\r\n                        if (typeof content !== 'undefined') {\r\n                            this.setContent(content);\r\n                        }\r\n                        // append or insert\r\n                        if (notifier.__internal.position.indexOf('top') < 0) {\r\n                            element.appendChild(this.element);\r\n                        } else {\r\n                            element.insertBefore(this.element, element.firstChild);\r\n                        }\r\n                        reflow = this.element.offsetWidth;\r\n                        addClass(this.element, classes.visible);\r\n                        // attach click event\r\n                        on(this.element, 'click', this.__internal.clickHandler);\r\n                        return this.delay(wait);\r\n                    }\r\n                    return this;\r\n                },\r\n                /*\r\n                 * {Function} callback function to be invoked before dismissing the notification message.\r\n                 * Remarks: A return value === 'false' will cancel the dismissal\r\n                 *\r\n                 */\r\n                ondismiss: function () { },\r\n                /*\r\n                 * {Function} callback function to be invoked when the message is dismissed.\r\n                 *\r\n                 */\r\n                callback: callback,\r\n                /*\r\n                 * Dismisses the notification message\r\n                 * @param {Boolean} clicked A flag indicating if the dismissal was caused by a click.\r\n                 *\r\n                 */\r\n                dismiss: function (clicked) {\r\n                    if (this.__internal.pushed) {\r\n                        clearTimers(this);\r\n                        if (!(typeof this.ondismiss === 'function' && this.ondismiss.call(this) === false)) {\r\n                            //detach click event\r\n                            off(this.element, 'click', this.__internal.clickHandler);\r\n                            // ensure element exists\r\n                            if (typeof this.element !== 'undefined' && this.element.parentNode === element) {\r\n                                //transition end or fallback\r\n                                this.__internal.transitionTimeout = setTimeout(this.__internal.transitionEndHandler, transition.supported ? 1000 : 100);\r\n                                removeClass(this.element, classes.visible);\r\n\r\n                                // custom callback on dismiss\r\n                                if (typeof this.callback === 'function') {\r\n                                    this.callback.call(this, clicked);\r\n                                }\r\n                            }\r\n                            popInstance(this);\r\n                        }\r\n                    }\r\n                    return this;\r\n                },\r\n                /*\r\n                 * Delays the notification message dismissal\r\n                 * @param {Number} wait The time (in seconds) to wait before the message is dismissed, a value of 0 means keep open till clicked.\r\n                 *\r\n                 */\r\n                delay: function (wait) {\r\n                    clearTimers(this);\r\n                    this.__internal.delay = typeof wait !== 'undefined' && !isNaN(+wait) ? +wait : notifier.__internal.delay;\r\n                    if (this.__internal.delay > 0) {\r\n                        var  self = this;\r\n                        this.__internal.timer = setTimeout(function () { self.dismiss(); }, this.__internal.delay * 1000);\r\n                    }\r\n                    return this;\r\n                },\r\n                /*\r\n                 * Sets the notification message contents\r\n                 * @param {string or DOMElement} content The notification message content\r\n                 *\r\n                 */\r\n                setContent: function (content) {\r\n                    if (typeof content === 'string') {\r\n                        clearContents(this.element);\r\n                        this.element.innerHTML = content;\r\n                    } else if (content instanceof window.HTMLElement && this.element.firstChild !== content) {\r\n                        clearContents(this.element);\r\n                        this.element.appendChild(content);\r\n                    }\r\n                    if(this.__internal.closeButton){\r\n                        var close = document.createElement('span');\r\n                        addClass(close, classes.close);\r\n                        close.setAttribute('data-close', true);\r\n                        this.element.appendChild(close);\r\n                    }\r\n                    return this;\r\n                },\r\n                /*\r\n                 * Dismisses all open notifications except this.\r\n                 *\r\n                 */\r\n                dismissOthers: function () {\r\n                    notifier.dismissAll(this);\r\n                    return this;\r\n                }\r\n            });\r\n        }\r\n\r\n        //notifier api\r\n        return {\r\n            /**\r\n             * Gets or Sets notifier settings.\r\n             *\r\n             * @param {string} key The setting name\r\n             * @param {Variant} value The setting value.\r\n             *\r\n             * @return {Object}\tif the called as a setter, return the notifier instance.\r\n             */\r\n            setting: function (key, value) {\r\n                //ensure init\r\n                initialize(this);\r\n\r\n                if (typeof value === 'undefined') {\r\n                    //get\r\n                    return this.__internal[key];\r\n                } else {\r\n                    //set\r\n                    switch (key) {\r\n                    case 'position':\r\n                        this.__internal.position = value;\r\n                        updatePosition(this);\r\n                        break;\r\n                    case 'delay':\r\n                        this.__internal.delay = value;\r\n                        break;\r\n                    }\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n             * [Alias] Sets dialog settings/options\r\n             */\r\n            set:function(key,value){\r\n                this.setting(key,value);\r\n                return this;\r\n            },\r\n            /**\r\n             * [Alias] Gets dialog settings/options\r\n             */\r\n            get:function(key){\r\n                return this.setting(key);\r\n            },\r\n            /**\r\n             * Creates a new notification message\r\n             *\r\n             * @param {string} type The type of notification message (simply a CSS class name 'ajs-{type}' to be added).\r\n             * @param {Function} callback  A callback function to be invoked when the message is dismissed.\r\n             *\r\n             * @return {undefined}\r\n             */\r\n            create: function (type, callback) {\r\n                //ensure notifier init\r\n                initialize(this);\r\n                //create new notification message\r\n                var div = document.createElement('div');\r\n                div.className = classes.message + ((typeof type === 'string' && type !== '') ? ' ' + classes.prefix + type : '');\r\n                return create(div, callback);\r\n            },\r\n            /**\r\n             * Dismisses all open notifications.\r\n             *\r\n             * @param {Object} excpet [optional] The notification object to exclude from dismissal.\r\n             *\r\n             */\r\n            dismissAll: function (except) {\r\n                var clone = openInstances.slice(0);\r\n                for (var x = 0; x < clone.length; x += 1) {\r\n                    var  instance = clone[x];\r\n                    if (except === undefined || except !== instance) {\r\n                        instance.dismiss();\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    })();\r\n\r\n    /**\r\n     * Alertify public API\r\n     * This contains everything that is exposed through the alertify object.\r\n     *\r\n     * @return {Object}\r\n     */\r\n    function Alertify() {\r\n\r\n        // holds a references of created dialogs\r\n        var dialogs = {};\r\n\r\n        /**\r\n         * Extends a given prototype by merging properties from base into sub.\r\n         *\r\n         * @sub {Object} sub The prototype being overwritten.\r\n         * @base {Object} base The prototype being written.\r\n         *\r\n         * @return {Object} The extended prototype.\r\n         */\r\n        function extend(sub, base) {\r\n            // copy dialog pototype over definition.\r\n            for (var prop in base) {\r\n                if (base.hasOwnProperty(prop)) {\r\n                    sub[prop] = base[prop];\r\n                }\r\n            }\r\n            return sub;\r\n        }\r\n\r\n\r\n        /**\r\n        * Helper: returns a dialog instance from saved dialogs.\r\n        * and initializes the dialog if its not already initialized.\r\n        *\r\n        * @name {String} name The dialog name.\r\n        *\r\n        * @return {Object} The dialog instance.\r\n        */\r\n        function get_dialog(name) {\r\n            var dialog = dialogs[name].dialog;\r\n            //initialize the dialog if its not already initialized.\r\n            if (dialog && typeof dialog.__init === 'function') {\r\n                dialog.__init(dialog);\r\n            }\r\n            return dialog;\r\n        }\r\n\r\n        /**\r\n         * Helper:  registers a new dialog definition.\r\n         *\r\n         * @name {String} name The dialog name.\r\n         * @Factory {Function} Factory a function resposible for creating dialog prototype.\r\n         * @transient {Boolean} transient True to create a new dialog instance each time the dialog is invoked, false otherwise.\r\n         * @base {String} base the name of another dialog to inherit from.\r\n         *\r\n         * @return {Object} The dialog definition.\r\n         */\r\n        function register(name, Factory, transient, base) {\r\n            var definition = {\r\n                dialog: null,\r\n                factory: Factory\r\n            };\r\n\r\n            //if this is based on an existing dialog, create a new definition\r\n            //by applying the new protoype over the existing one.\r\n            if (base !== undefined) {\r\n                definition.factory = function () {\r\n                    return extend(new dialogs[base].factory(), new Factory());\r\n                };\r\n            }\r\n\r\n            if (!transient) {\r\n                //create a new definition based on dialog\r\n                definition.dialog = extend(new definition.factory(), dialog);\r\n            }\r\n            return dialogs[name] = definition;\r\n        }\r\n\r\n        return {\r\n            /**\r\n             * Alertify defaults\r\n             * \r\n             * @type {Object}\r\n             */\r\n            defaults: defaults,\r\n            /**\r\n             * Dialogs factory \r\n             *\r\n             * @param {string}      Dialog name.\r\n             * @param {Function}    A Dialog factory function.\r\n             * @param {Boolean}     Indicates whether to create a singleton or transient dialog.\r\n             * @param {String}      The name of the base type to inherit from.\r\n             */\r\n            dialog: function (name, Factory, transient, base) {\r\n\r\n                // get request, create a new instance and return it.\r\n                if (typeof Factory !== 'function') {\r\n                    return get_dialog(name);\r\n                }\r\n\r\n                if (this.hasOwnProperty(name)) {\r\n                    throw new Error('alertify.dialog: name already exists');\r\n                }\r\n\r\n                // register the dialog\r\n                var definition = register(name, Factory, transient, base);\r\n\r\n                if (transient) {\r\n\r\n                    // make it public\r\n                    this[name] = function () {\r\n                        //if passed with no params, consider it a get request\r\n                        if (arguments.length === 0) {\r\n                            return definition.dialog;\r\n                        } else {\r\n                            var instance = extend(new definition.factory(), dialog);\r\n                            //ensure init\r\n                            if (instance && typeof instance.__init === 'function') {\r\n                                instance.__init(instance);\r\n                            }\r\n                            instance['main'].apply(instance, arguments);\r\n                            return instance['show'].apply(instance);\r\n                        }\r\n                    };\r\n                } else {\r\n                    // make it public\r\n                    this[name] = function () {\r\n                        //ensure init\r\n                        if (definition.dialog && typeof definition.dialog.__init === 'function') {\r\n                            definition.dialog.__init(definition.dialog);\r\n                        }\r\n                        //if passed with no params, consider it a get request\r\n                        if (arguments.length === 0) {\r\n                            return definition.dialog;\r\n                        } else {\r\n                            var dialog = definition.dialog;\r\n                            dialog['main'].apply(definition.dialog, arguments);\r\n                            return dialog['show'].apply(definition.dialog);\r\n                        }\r\n                    };\r\n                }\r\n            },\r\n            /**\r\n             * Close all open dialogs.\r\n             *\r\n             * @param {Object} excpet [optional] The dialog object to exclude from closing.\r\n             *\r\n             * @return {undefined}\r\n             */\r\n            closeAll: function (except) {\r\n                var clone = openDialogs.slice(0);\r\n                for (var x = 0; x < clone.length; x += 1) {\r\n                    var instance = clone[x];\r\n                    if (except === undefined || except !== instance) {\r\n                        instance.close();\r\n                    }\r\n                }\r\n            },\r\n            /**\r\n             * Gets or Sets dialog settings/options. if the dialog is transient, this call does nothing.\r\n             *\r\n             * @param {string} name The dialog name.\r\n             * @param {String|Object} key A string specifying a propery name or a collection of key/value pairs.\r\n             * @param {Variant} value Optional, the value associated with the key (in case it was a string).\r\n             *\r\n             * @return {undefined}\r\n             */\r\n            setting: function (name, key, value) {\r\n\r\n                if (name === 'notifier') {\r\n                    return notifier.setting(key, value);\r\n                }\r\n\r\n                var dialog = get_dialog(name);\r\n                if (dialog) {\r\n                    return dialog.setting(key, value);\r\n                }\r\n            },\r\n            /**\r\n             * [Alias] Sets dialog settings/options \r\n             */\r\n            set: function(name,key,value){\r\n                return this.setting(name, key,value);\r\n            },\r\n            /**\r\n             * [Alias] Gets dialog settings/options \r\n             */\r\n            get: function(name, key){\r\n                return this.setting(name, key);\r\n            },\r\n            /**\r\n             * Creates a new notification message.\r\n             * If a type is passed, a class name \"ajs-{type}\" will be added.\r\n             * This allows for custom look and feel for various types of notifications.\r\n             *\r\n             * @param  {String | DOMElement}    [message=undefined]\t\tMessage text\r\n             * @param  {String}                 [type='']\t\t\t\tType of log message\r\n             * @param  {String}                 [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\r\n             * @param  {Function}               [callback=undefined]\tA callback function to be invoked when the log is closed.\r\n             *\r\n             * @return {Object} Notification object.\r\n             */\r\n            notify: function (message, type, wait, callback) {\r\n                return notifier.create(type, callback).push(message, wait);\r\n            },\r\n            /**\r\n             * Creates a new notification message.\r\n             *\r\n             * @param  {String}\t\t[message=undefined]\t\tMessage text\r\n             * @param  {String}     [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\r\n             * @param  {Function}\t[callback=undefined]\tA callback function to be invoked when the log is closed.\r\n             *\r\n             * @return {Object} Notification object.\r\n             */\r\n            message: function (message, wait, callback) {\r\n                return notifier.create(null, callback).push(message, wait);\r\n            },\r\n            /**\r\n             * Creates a new notification message of type 'success'.\r\n             *\r\n             * @param  {String}\t\t[message=undefined]\t\tMessage text\r\n             * @param  {String}     [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\r\n             * @param  {Function}\t[callback=undefined]\tA callback function to be invoked when the log is closed.\r\n             *\r\n             * @return {Object} Notification object.\r\n             */\r\n            success: function (message, wait, callback) {\r\n                return notifier.create('success', callback).push(message, wait);\r\n            },\r\n            /**\r\n             * Creates a new notification message of type 'error'.\r\n             *\r\n             * @param  {String}\t\t[message=undefined]\t\tMessage text\r\n             * @param  {String}     [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\r\n             * @param  {Function}\t[callback=undefined]\tA callback function to be invoked when the log is closed.\r\n             *\r\n             * @return {Object} Notification object.\r\n             */\r\n            error: function (message, wait, callback) {\r\n                return notifier.create('error', callback).push(message, wait);\r\n            },\r\n            /**\r\n             * Creates a new notification message of type 'warning'.\r\n             *\r\n             * @param  {String}\t\t[message=undefined]\t\tMessage text\r\n             * @param  {String}     [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\r\n             * @param  {Function}\t[callback=undefined]\tA callback function to be invoked when the log is closed.\r\n             *\r\n             * @return {Object} Notification object.\r\n             */\r\n            warning: function (message, wait, callback) {\r\n                return notifier.create('warning', callback).push(message, wait);\r\n            },\r\n            /**\r\n             * Dismisses all open notifications\r\n             *\r\n             * @return {undefined}\r\n             */\r\n            dismissAll: function () {\r\n                notifier.dismissAll();\r\n            }\r\n        };\r\n    }\r\n    var alertify = new Alertify();\r\n\r\n    /**\r\n    * Alert dialog definition\r\n    *\r\n    * invoked by:\r\n    *\talertify.alert(message);\r\n    *\talertify.alert(title, message);\r\n    *\talertify.alert(message, onok);\r\n    *\talertify.alert(title, message, onok);\r\n     */\r\n    alertify.dialog('alert', function () {\r\n        return {\r\n            main: function (_title, _message, _onok) {\r\n                var title, message, onok;\r\n                switch (arguments.length) {\r\n                case 1:\r\n                    message = _title;\r\n                    break;\r\n                case 2:\r\n                    if (typeof _message === 'function') {\r\n                        message = _title;\r\n                        onok = _message;\r\n                    } else {\r\n                        title = _title;\r\n                        message = _message;\r\n                    }\r\n                    break;\r\n                case 3:\r\n                    title = _title;\r\n                    message = _message;\r\n                    onok = _onok;\r\n                    break;\r\n                }\r\n                this.set('title', title);\r\n                this.set('message', message);\r\n                this.set('onok', onok);\r\n                return this;\r\n            },\r\n            setup: function () {\r\n                return {\r\n                    buttons: [\r\n                        {\r\n                            text: alertify.defaults.glossary.ok,\r\n                            key: keys.ESC,\r\n                            invokeOnClose: true,\r\n                            className: alertify.defaults.theme.ok,\r\n                        }\r\n                    ],\r\n                    focus: {\r\n                        element: 0,\r\n                        select: false\r\n                    },\r\n                    options: {\r\n                        maximizable: false,\r\n                        resizable: false\r\n                    }\r\n                };\r\n            },\r\n            build: function () {\r\n                // nothing\r\n            },\r\n            prepare: function () {\r\n                //nothing\r\n            },\r\n            setMessage: function (message) {\r\n                this.setContent(message);\r\n            },\r\n            settings: {\r\n                message: undefined,\r\n                onok: undefined,\r\n                label: undefined,\r\n            },\r\n            settingUpdated: function (key, oldValue, newValue) {\r\n                switch (key) {\r\n                case 'message':\r\n                    this.setMessage(newValue);\r\n                    break;\r\n                case 'label':\r\n                    if (this.__internal.buttons[0].element) {\r\n                        this.__internal.buttons[0].element.innerHTML = newValue;\r\n                    }\r\n                    break;\r\n                }\r\n            },\r\n            callback: function (closeEvent) {\r\n                if (typeof this.get('onok') === 'function') {\r\n                    var returnValue = this.get('onok').call(this, closeEvent);\r\n                    if (typeof returnValue !== 'undefined') {\r\n                        closeEvent.cancel = !returnValue;\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    });\r\n    /**\r\n     * Confirm dialog object\r\n     *\r\n     *\talertify.confirm(message);\r\n     *\talertify.confirm(message, onok);\r\n     *\talertify.confirm(message, onok, oncancel);\r\n     *\talertify.confirm(title, message, onok, oncancel);\r\n     */\r\n    alertify.dialog('confirm', function () {\r\n\r\n        var autoConfirm = {\r\n            timer: null,\r\n            index: null,\r\n            text: null,\r\n            duration: null,\r\n            task: function (event, self) {\r\n                if (self.isOpen()) {\r\n                    self.__internal.buttons[autoConfirm.index].element.innerHTML = autoConfirm.text + ' (&#8207;' + autoConfirm.duration + '&#8207;) ';\r\n                    autoConfirm.duration -= 1;\r\n                    if (autoConfirm.duration === -1) {\r\n                        clearAutoConfirm(self);\r\n                        var button = self.__internal.buttons[autoConfirm.index];\r\n                        var closeEvent = createCloseEvent(autoConfirm.index, button);\r\n\r\n                        if (typeof self.callback === 'function') {\r\n                            self.callback.apply(self, [closeEvent]);\r\n                        }\r\n                        //close the dialog.\r\n                        if (closeEvent.close !== false) {\r\n                            self.close();\r\n                        }\r\n                    }\r\n                } else {\r\n                    clearAutoConfirm(self);\r\n                }\r\n            }\r\n        };\r\n\r\n        function clearAutoConfirm(self) {\r\n            if (autoConfirm.timer !== null) {\r\n                clearInterval(autoConfirm.timer);\r\n                autoConfirm.timer = null;\r\n                self.__internal.buttons[autoConfirm.index].element.innerHTML = autoConfirm.text;\r\n            }\r\n        }\r\n\r\n        function startAutoConfirm(self, index, duration) {\r\n            clearAutoConfirm(self);\r\n            autoConfirm.duration = duration;\r\n            autoConfirm.index = index;\r\n            autoConfirm.text = self.__internal.buttons[index].element.innerHTML;\r\n            autoConfirm.timer = setInterval(delegate(self, autoConfirm.task), 1000);\r\n            autoConfirm.task(null, self);\r\n        }\r\n\r\n\r\n        return {\r\n            main: function (_title, _message, _onok, _oncancel) {\r\n                var title, message, onok, oncancel;\r\n                switch (arguments.length) {\r\n                case 1:\r\n                    message = _title;\r\n                    break;\r\n                case 2:\r\n                    message = _title;\r\n                    onok = _message;\r\n                    break;\r\n                case 3:\r\n                    message = _title;\r\n                    onok = _message;\r\n                    oncancel = _onok;\r\n                    break;\r\n                case 4:\r\n                    title = _title;\r\n                    message = _message;\r\n                    onok = _onok;\r\n                    oncancel = _oncancel;\r\n                    break;\r\n                }\r\n                this.set('title', title);\r\n                this.set('message', message);\r\n                this.set('onok', onok);\r\n                this.set('oncancel', oncancel);\r\n                return this;\r\n            },\r\n            setup: function () {\r\n                return {\r\n                    buttons: [\r\n                        {\r\n                            text: alertify.defaults.glossary.ok,\r\n                            key: keys.ENTER,\r\n                            className: alertify.defaults.theme.ok,\r\n                        },\r\n                        {\r\n                            text: alertify.defaults.glossary.cancel,\r\n                            key: keys.ESC,\r\n                            invokeOnClose: true,\r\n                            className: alertify.defaults.theme.cancel,\r\n                        }\r\n                    ],\r\n                    focus: {\r\n                        element: 0,\r\n                        select: false\r\n                    },\r\n                    options: {\r\n                        maximizable: false,\r\n                        resizable: false\r\n                    }\r\n                };\r\n            },\r\n            build: function () {\r\n                //nothing\r\n            },\r\n            prepare: function () {\r\n                //nothing\r\n            },\r\n            setMessage: function (message) {\r\n                this.setContent(message);\r\n            },\r\n            settings: {\r\n                message: null,\r\n                labels: null,\r\n                onok: null,\r\n                oncancel: null,\r\n                defaultFocus: null,\r\n                reverseButtons: null,\r\n            },\r\n            settingUpdated: function (key, oldValue, newValue) {\r\n                switch (key) {\r\n                case 'message':\r\n                    this.setMessage(newValue);\r\n                    break;\r\n                case 'labels':\r\n                    if ('ok' in newValue && this.__internal.buttons[0].element) {\r\n                        this.__internal.buttons[0].text = newValue.ok;\r\n                        this.__internal.buttons[0].element.innerHTML = newValue.ok;\r\n                    }\r\n                    if ('cancel' in newValue && this.__internal.buttons[1].element) {\r\n                        this.__internal.buttons[1].text = newValue.cancel;\r\n                        this.__internal.buttons[1].element.innerHTML = newValue.cancel;\r\n                    }\r\n                    break;\r\n                case 'reverseButtons':\r\n                    if (newValue === true) {\r\n                        this.elements.buttons.primary.appendChild(this.__internal.buttons[0].element);\r\n                    } else {\r\n                        this.elements.buttons.primary.appendChild(this.__internal.buttons[1].element);\r\n                    }\r\n                    break;\r\n                case 'defaultFocus':\r\n                    this.__internal.focus.element = newValue === 'ok' ? 0 : 1;\r\n                    break;\r\n                }\r\n            },\r\n            callback: function (closeEvent) {\r\n                clearAutoConfirm(this);\r\n                var returnValue;\r\n                switch (closeEvent.index) {\r\n                case 0:\r\n                    if (typeof this.get('onok') === 'function') {\r\n                        returnValue = this.get('onok').call(this, closeEvent);\r\n                        if (typeof returnValue !== 'undefined') {\r\n                            closeEvent.cancel = !returnValue;\r\n                        }\r\n                    }\r\n                    break;\r\n                case 1:\r\n                    if (typeof this.get('oncancel') === 'function') {\r\n                        returnValue = this.get('oncancel').call(this, closeEvent);\r\n                        if (typeof returnValue !== 'undefined') {\r\n                            closeEvent.cancel = !returnValue;\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n            },\r\n            autoOk: function (duration) {\r\n                startAutoConfirm(this, 0, duration);\r\n                return this;\r\n            },\r\n            autoCancel: function (duration) {\r\n                startAutoConfirm(this, 1, duration);\r\n                return this;\r\n            }\r\n        };\r\n    });\r\n    /**\r\n     * Prompt dialog object\r\n     *\r\n     * invoked by:\r\n     *\talertify.prompt(message);\r\n     *\talertify.prompt(message, value);\r\n     *\talertify.prompt(message, value, onok);\r\n     *\talertify.prompt(message, value, onok, oncancel);\r\n     *\talertify.prompt(title, message, value, onok, oncancel);\r\n     */\r\n    alertify.dialog('prompt', function () {\r\n        var input = document.createElement('INPUT');\r\n        var p = document.createElement('P');\r\n        return {\r\n            main: function (_title, _message, _value, _onok, _oncancel) {\r\n                var title, message, value, onok, oncancel;\r\n                switch (arguments.length) {\r\n                case 1:\r\n                    message = _title;\r\n                    break;\r\n                case 2:\r\n                    message = _title;\r\n                    value = _message;\r\n                    break;\r\n                case 3:\r\n                    message = _title;\r\n                    value = _message;\r\n                    onok = _value;\r\n                    break;\r\n                case 4:\r\n                    message = _title;\r\n                    value = _message;\r\n                    onok = _value;\r\n                    oncancel = _onok;\r\n                    break;\r\n                case 5:\r\n                    title = _title;\r\n                    message = _message;\r\n                    value = _value;\r\n                    onok = _onok;\r\n                    oncancel = _oncancel;\r\n                    break;\r\n                }\r\n                this.set('title', title);\r\n                this.set('message', message);\r\n                this.set('value', value);\r\n                this.set('onok', onok);\r\n                this.set('oncancel', oncancel);\r\n                return this;\r\n            },\r\n            setup: function () {\r\n                return {\r\n                    buttons: [\r\n                        {\r\n                            text: alertify.defaults.glossary.ok,\r\n                            key: keys.ENTER,\r\n                            className: alertify.defaults.theme.ok,\r\n                        },\r\n                        {\r\n                            text: alertify.defaults.glossary.cancel,\r\n                            key: keys.ESC,\r\n                            invokeOnClose: true,\r\n                            className: alertify.defaults.theme.cancel,\r\n                        }\r\n                    ],\r\n                    focus: {\r\n                        element: input,\r\n                        select: true\r\n                    },\r\n                    options: {\r\n                        maximizable: false,\r\n                        resizable: false\r\n                    }\r\n                };\r\n            },\r\n            build: function () {\r\n                input.className = alertify.defaults.theme.input;\r\n                input.setAttribute('type', 'text');\r\n                input.value = this.get('value');\r\n                this.elements.content.appendChild(p);\r\n                this.elements.content.appendChild(input);\r\n            },\r\n            prepare: function () {\r\n                //nothing\r\n            },\r\n            setMessage: function (message) {\r\n                if (typeof message === 'string') {\r\n                    clearContents(p);\r\n                    p.innerHTML = message;\r\n                } else if (message instanceof window.HTMLElement && p.firstChild !== message) {\r\n                    clearContents(p);\r\n                    p.appendChild(message);\r\n                }\r\n            },\r\n            settings: {\r\n                message: undefined,\r\n                labels: undefined,\r\n                onok: undefined,\r\n                oncancel: undefined,\r\n                value: '',\r\n                type:'text',\r\n                reverseButtons: undefined,\r\n            },\r\n            settingUpdated: function (key, oldValue, newValue) {\r\n                switch (key) {\r\n                case 'message':\r\n                    this.setMessage(newValue);\r\n                    break;\r\n                case 'value':\r\n                    input.value = newValue;\r\n                    break;\r\n                case 'type':\r\n                    switch (newValue) {\r\n                    case 'text':\r\n                    case 'color':\r\n                    case 'date':\r\n                    case 'datetime-local':\r\n                    case 'email':\r\n                    case 'month':\r\n                    case 'number':\r\n                    case 'password':\r\n                    case 'search':\r\n                    case 'tel':\r\n                    case 'time':\r\n                    case 'week':\r\n                        input.type = newValue;\r\n                        break;\r\n                    default:\r\n                        input.type = 'text';\r\n                        break;\r\n                    }\r\n                    break;\r\n                case 'labels':\r\n                    if (newValue.ok && this.__internal.buttons[0].element) {\r\n                        this.__internal.buttons[0].element.innerHTML = newValue.ok;\r\n                    }\r\n                    if (newValue.cancel && this.__internal.buttons[1].element) {\r\n                        this.__internal.buttons[1].element.innerHTML = newValue.cancel;\r\n                    }\r\n                    break;\r\n                case 'reverseButtons':\r\n                    if (newValue === true) {\r\n                        this.elements.buttons.primary.appendChild(this.__internal.buttons[0].element);\r\n                    } else {\r\n                        this.elements.buttons.primary.appendChild(this.__internal.buttons[1].element);\r\n                    }\r\n                    break;\r\n                }\r\n            },\r\n            callback: function (closeEvent) {\r\n                var returnValue;\r\n                switch (closeEvent.index) {\r\n                case 0:\r\n                    this.settings.value = input.value;\r\n                    if (typeof this.get('onok') === 'function') {\r\n                        returnValue = this.get('onok').call(this, closeEvent, this.settings.value);\r\n                        if (typeof returnValue !== 'undefined') {\r\n                            closeEvent.cancel = !returnValue;\r\n                        }\r\n                    }\r\n                    break;\r\n                case 1:\r\n                    if (typeof this.get('oncancel') === 'function') {\r\n                        returnValue = this.get('oncancel').call(this, closeEvent);\r\n                        if (typeof returnValue !== 'undefined') {\r\n                            closeEvent.cancel = !returnValue;\r\n                        }\r\n                    }\r\n                    if(!closeEvent.cancel){\r\n                        input.value = this.settings.value;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n    });\r\n\r\n    // CommonJS\r\n    if ( typeof module === 'object' && typeof module.exports === 'object' ) {\r\n        module.exports = alertify;\r\n    // AMD\r\n    } else if ( typeof define === 'function' && define.amd) {\r\n        define( [], function () {\r\n            return alertify;\r\n        } );\r\n    // window\r\n    } else if ( !window.alertify ) {\r\n        window.alertify = alertify;\r\n    }\r\n\r\n} ( typeof window !== 'undefined' ? window : this ) );\r\n","import { getDefaultNormalizer } from '@testing-library/react';\nimport axios from 'axios';\nimport {API, GetRecall, Headers} from '../Services/config';\n\nexport async function GetRecalls (chassisNumber) {\n  let a = await axios.get(`${API}${GetRecall}`,\n  {\n    headers : {\n      'Content-Type' : 'application/json; charset=utf-8',\n      'Ocp-Apim-Subscription-Key': 'e7dff51e117448e1a56e301912d70d83',\n      'Ocp-Apim-Trace': 'true',\n    },\n    params: {\n      'chassisNumber': chassisNumber,\n    }\n  }\n  ).then((response) => {\n    return response.data;\n  })\n  .catch(function (error) {\n    return null;\n  })\n\n  return a;\n}","import React, {Component} from 'react';\r\nimport SlideImage from '../../Assets/img/image_4.png';\r\nimport SlideImage2 from '../../Assets/img/nopath.png';\r\nimport './Subpage.scss';\r\nimport BreadCrumbNav from '../../Components/BreadCrumbNav/BreadCrumbNav'\r\nimport { Link, NavLink, Redirect, useParams } from \"react-router-dom\";\r\nimport { Helmet } from 'react-helmet'\r\n\r\nimport Popup from 'reactjs-popup';\r\nimport 'reactjs-popup/dist/index.css';\r\n\r\nimport Tabs from 'react-bootstrap/Tabs'\r\nimport Tab from 'react-bootstrap/Tab'\r\n\r\nimport {Dropdown, DropdownButton} from 'react-bootstrap'\r\nimport SubCategories from '../../Components/SubCategories/SubCategories';\r\nimport SubPosts from '../../Components/SubPosts/SubPosts';\r\nimport { GetGeneralContents } from '../../Actions/GetGeneralContents'\r\nimport { GetGeneralContentPreviews } from '../../Actions/GetGeneralContentsPreview'\r\nimport Slider from \"react-slick\";\r\nimport { render } from '@testing-library/react';\r\n\r\nimport findValue from '../../Components/FindValue/findValue'\r\n\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\nimport { jsPDF } from \"jspdf\";\r\nimport html2canvas from \"html2canvas\";\r\nimport 'alertifyjs/build/css/alertify.css';\r\nimport alertify from 'alertifyjs';\r\n\r\nimport $ from 'jquery'\r\n\r\nimport languageJson from '../../language.json';\r\nimport language from '../../newLanguage.json';\r\nimport { GetRecalls } from '../../Actions/GetRecall';\r\n\r\nconst lng = languageJson[localStorage.lang];\r\nconst lang = language[localStorage.lang];\r\n\r\nexport default class Subpage extends Component {\r\nconstructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      displayMenu: '',\r\n      content: null,\r\n      Loader: false,\r\n      success: false,\r\n      inputValue: '',\r\n      GetRecallValue: null\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n  }\r\n\r\n\r\n\r\n  imageRepeater () {\r\n    const NewsSlider = [];\r\n\r\n    if (this.state.content.galleries.length !== 0) {\r\n      for (let i = 0; i < this.state.content.galleries.length; i++) {\r\n        NewsSlider.push(\r\n          <div className=\"slide\">\r\n            <div>\r\n              <img src={this.state.content.galleries[i].imageUrl} alt=\"\"/>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n    } else {\r\n      NewsSlider.push(\r\n        <div className=\"slide\">\r\n          <div>\r\n            <img src={this.state.content.imageUrl} alt=\"\"/>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n\r\n\r\n    return NewsSlider;\r\n  }\r\n\r\n  componentDidMount = async() => {\r\n  }\r\n  async postData (data) {\r\n    const GetGeneralContentsPage = await GetRecalls(data);\r\n    this.setState({GetRecallValue: GetGeneralContentsPage})\r\n\r\n  }\r\n\r\n  componentDidUpdate = async() => {\r\n  }\r\n\r\n  download () {\r\n    const table = document.getElementsByClassName('table table-borderless')[0]\r\n\r\n    html2canvas(table)\r\n    .then((canvas) => {\r\n      const imgData = canvas.toDataURL('image/png');\r\n      const pdf = new jsPDF();\r\n      pdf.addImage(imgData, 'PNG', 0, 0);\r\n      pdf.save(\"download.pdf\");  \r\n    });\r\n  }\r\n  async postData (data) {\r\n    const GetGeneralContentsPage = await GetRecalls(data);\r\n    if(GetGeneralContentsPage.length === 0) {\r\n      this.setState({GetRecallValue: 'error'})\r\n    } else {\r\n      this.setState({GetRecallValue: GetGeneralContentsPage})\r\n    }\r\n    \r\n  }\r\n  handleChange(event){\r\n    this.setState({\r\n      inputValue: event.target.value\r\n    });\r\n  }\r\n  render(match){\r\n\r\n    const settings = {\r\n      dots: false,\r\n      fade: true,\r\n      infinite: true,\r\n      speed: 500,\r\n      slidesToShow: 1,\r\n      slidesToScroll: 1\r\n    };\r\n\r\n    const breadcrumbData = this.props.match.url.split('/')\r\n    return (\r\n      <div className=\"Subpage\">\r\n        <img src=\"https://pcorpweb-tcorpweb.azurewebsites.net/MB.png\" alt=\"\" />\r\n        <div className=\"container sasi\">\r\n          <p className=\"recalltext\">\r\n            {lng.allsite.title[18]}\r\n          </p>\r\n          <label htmlFor=\"\">{lng.allsite.title[19]}</label>\r\n          <input type=\"text\" value={this.state.inputValue} onChange={this.handleChange} />\r\n\r\n          <button onClick={()=>this.postData(this.state.inputValue)}>{lng.allsite.title[20]}</button>\r\n\r\n          { this.state.GetRecallValue !== null ?\r\n\r\n            <div className=\"mb-sasi-details\">\r\n              { this.state.GetRecallValue !== 'error'  ?\r\n                <>\r\n                  <h3>{lng.allsite.title[51]}</h3>\r\n                  <p>\r\n                  {lng.allsite.title[21]}\r\n                  </p>\r\n\r\n                  <table className=\"table\">\r\n                    <tr>\r\n                      <td>{lng.allsite.title[19]}</td>\r\n                      <td>{this.state.GetRecallValue[0].chassisNumer}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{lng.allsite.title[22]}</td>\r\n                      <td>{this.state.GetRecallValue[0].actionName}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{lng.allsite.title[23]}</td>\r\n                      <td>{this.state.GetRecallValue[0].status}</td>\r\n                    </tr>\r\n                  </table>\r\n\r\n                  <a href={\"/\"+lng.mainurl.title[5]}  className=\"goToRecall\">{lng.allsite.title[24]}</a>\r\n                </>\r\n              :\r\n                lng.allsite.title[17]\r\n              }\r\n            </div>\r\n            :\r\n            ''\r\n          }\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}"],"sourceRoot":""}