{"version":3,"sources":["Container/Main/Main.js","App.js","serviceWorker.js","index.js","Services/config.js","Actions/GetLanguage.js","Components/getLanguage/getLanguage.js"],"names":["Homepage","importedComponent","AnnouncementList","AnnouncementDetails","CampaignDetails","CampaignList","Subpage","MapLocation","PriceList","Search","GetRecall","Main","props","pathControl","lang","language","localStorage","element","document","getElementsByTagName","window","location","pathname","split","mainurl","title","classList","add","remove","componentWillMount","componentDidMount","showImages","el","windowHeight","jQuery","height","each","thisPos","this","offset","top","scrollTop","addClass","ready","on","cookie","scroll","componentDidUpdate","prevProps","prevState","state","languageDetails","className","undefined","path","exact","component","link","sub","React","Component","Header","Footer","getLanguage","lng","languageJson","App","a","langid","componentWillUpdate","LoaderDetails","GetLanguageState","updatePage","Helmet","name","content","withRouter","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","then","registration","unregister","catch","error","console","message","API","GetCities","GetLanguages","GetMainPage","GetMainPagePreview","GetGeneralContent","GetGeneralContentPreview","GetCampaignList","GetCampaignDetail","GetCampaignDetailPreview","GetFooterContent","GetNewsList","GetNewsDetail","GetNewsDetailPreview","GetSocialMedia","GetPriceList","GetDealerList","GetSearchResult","GetSubNavigationPages","GetSiteScript","GetLanguageF","axios","get","headers","response","data","param","pageName","GetLanguageUpdate","code","id"],"mappings":"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","file":"static/js/main.741ce9c7.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport importedComponent from 'react-imported-component';\r\n\r\nimport { GetLanguageF } from '../../Actions/GetLanguage'\r\nimport language from '../../newLanguage.json';\r\n\r\nimport {\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\nimport jQuery from 'jquery'\r\n\r\n/* Styles */\r\nimport './Main.scss';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'bootstrap/dist/js/bootstrap';\r\n\r\n\r\nimport \"slick-carousel/slick/slick.css\"; \r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\n\r\nimport './Main.scss';\r\n\r\n\r\n/* Modules */\r\nconst Homepage = importedComponent( () => import('../../Container/Homepage/Homepage'));\r\nconst AnnouncementList = importedComponent( () => import('../../Container/AnnouncementList/AnnouncementList'));\r\nconst AnnouncementDetails = importedComponent( () => import('../../Container/AnnouncementDetails/AnnouncementDetails'));\r\nconst CampaignDetails = importedComponent( () => import('../../Container/CampaignDetails/CampaignDetails'));\r\nconst CampaignList = importedComponent( () => import('../../Container/CampaignList/CampaignList'));\r\nconst Subpage = importedComponent( () => import('../../Container/Subpage/Subpage'));\r\nconst MapLocation = importedComponent( () => import('../../Container/Map/Map'));\r\nconst PriceList = importedComponent( () => import('../../Container/PriceList/PriceList'));\r\nconst Search = importedComponent( () => import('../../Container/Search/Search'));\r\nconst ContactUs = importedComponent( () => import('../../Container/ContactUs/ContactUs'));\r\nconst GetRecall = importedComponent( () => import('../../Container/Subpage/getRecall'));\r\n\r\n\r\nexport default class Main extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      languageDetails: null,\r\n    }\r\n  }\r\n\r\n  pathControl = () => {\r\n    const lang = language[localStorage.lang];\r\n    const element = document.getElementsByTagName('body')[0]\r\n    const splitUrl = window.location.pathname.split('/')\r\n\r\n    if (window.location.pathname === '/' + lang[6].mainurl.title[5]) {\r\n      element.classList.add('Map')\r\n    } else {\r\n      element.classList.remove('Map')\r\n    }\r\n  }\r\n  componentWillMount = () => {\r\n  }\r\n  componentDidMount = () => {\r\n \r\n    function showImages(el) {\r\n      var windowHeight = jQuery( window ).height();\r\n      jQuery(el).each(function(){\r\n          var thisPos = jQuery(this).offset().top;\r\n  \r\n          var topOfWindow = jQuery(window).scrollTop();\r\n          if (topOfWindow + windowHeight - 200 > thisPos ) {\r\n            jQuery(this).addClass(\"animate__fadeInRight\");\r\n          }\r\n      });\r\n    }\r\n  \r\n    // if the image in the window of browser when the page is loaded, show that image\r\n    jQuery(document).ready(function(){\r\n        showImages('.star');\r\n\r\n        jQuery('#closeCookie').on('click', function(){\r\n            localStorage.cookie = false;\r\n\r\n            jQuery('.accept-cookie').addClass('d-none');\r\n        })\r\n    });\r\n    \r\n    // if the image in the window of browser when scrolling the page, show that image\r\n    jQuery(window).scroll(function() {\r\n        showImages('.star');\r\n    });\r\n\r\n\r\n    this.pathControl()\r\n  }\r\n  componentDidUpdate = (prevProps, prevState) => {\r\n    this.pathControl()\r\n  }\r\n  render()\r\n  {\r\n    const lang = language[localStorage.lang];\r\n    \r\n    return (\r\n      <div className=\"App show-on-scroll\">\r\n        { \r\n          lang !== undefined\r\n          ? \r\n            <Switch>\r\n              <Route path=\"/\" exact component={Homepage} />\r\n              <Route path={lang[5].link+\"/:counter?\"} component={AnnouncementList}/>\r\n              <Route path={'/'+lang[6].mainurl.title[0] + '/' + lang[6].mainurl.title[1]+\"/:pagename\"} component={AnnouncementDetails}/>\r\n              <Route path={\"/\"+lang[6].mainurl.title[2]+\"/:pagename\"} component={CampaignList}/>\r\n              <Route path={\"/\"+lang[6].mainurl.title[3]+\"/:pagename/:subname\"} component={CampaignDetails}/>\r\n              <Route path={lang[1].link+\"/:pagename?/:subpage?/:subdetails?\"} component={Subpage}/>\r\n              <Route path={lang[2].link+\"/:pagename?/:subpage?/:subdetails?\"} component={Subpage}/>\r\n              <Route path={lang[3].link+\"/:pagename?/:subpage?/:subdetails?\"} component={Subpage}/>\r\n              <Route path={lang[4].link+\"/:pagename?/:subpage?/:subdetails?\"} component={Subpage}/>\r\n              <Route path={\"/\"+lang[6].mainurl.title[5]} exact component={MapLocation} />\r\n              <Route path={\"/\"+lang[6].mainurl.title[6]+\"&=:searchText\"} component={Search} />\r\n              <Route path={lang[2].sub[0].sub[0].sub[3].link} component={PriceList} />\r\n              <Route path={lang[2].sub[1].sub[0].sub[3].link} component={PriceList} />\r\n              <Route path={'/Gonullu-Geri-Cagirma-Aksiyonlari'} component={GetRecall} />\r\n            </Switch>\r\n          : ''\r\n        }\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Helmet } from 'react-helmet'\r\n\r\nimport importedComponent from 'react-imported-component';\r\n\r\nimport Main from './Container/Main/Main';\r\nimport Loader from 'react-loader-spinner'\r\nimport languageJson from './language.json';\r\nimport getLanguage from './Components/getLanguage/getLanguage'\r\n\r\n/* Styles */\r\nimport './App.scss';\r\nimport 'animate.css';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\r\n\r\n/* Modules */\r\nconst Header = importedComponent( () => import('./Components/Header/Header'));\r\nconst Footer = importedComponent( () => import('./Components/Footer/Footer'));\r\ngetLanguage();\r\n\r\nconst lng = languageJson[localStorage.lang];\r\nlet updatePage = false;\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      LoaderDetails: false,\r\n      GetLanguageState: null,\r\n      updatePage: false\r\n    }\r\n  }\r\n  pathControl() {\r\n    const element = document.getElementsByTagName('body')[0]\r\n    \r\n    if (this.props.location.pathname == '/'+lng.mainurl.title[5]) {\r\n      element.classList.add('Map')\r\n    } else {\r\n      element.classList.remove('Map')\r\n    }\r\n  }\r\n\r\n  componentWillMount = async() => {\r\n    if(localStorage.lang === undefined){\r\n      localStorage.lang = 'tr'\r\n      localStorage.langid = \"20dd5d1f-3c87-48a5-8ff5-bcefb810bcc2\"\r\n    }\r\n  }\r\n\r\n  componentDidMount = async() => {\r\n  }\r\n\r\n  componentWillUpdate = (prevProps, prevState) => {\r\n  }\r\n  componentDidUpdate = (prevProps, prevState) => {\r\n  }\r\n  \r\n  render()\r\n  {\r\n    getLanguage()\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Helmet>\r\n          <meta name=\"facebook-domain-verification\" content=\"2y33dajq47ot2oix5i7n519j23slo8\" />\r\n        </Helmet>\r\n        <div>\r\n          <Header />\r\n          <Main />\r\n          <Footer />\r\n        </div>\r\n        {\r\n          updatePage === true ?\r\n            <Loader />\r\n          :\r\n            ''\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default  withRouter(props => <App {...props} />);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {ThroughProvider} from 'react-through'\n\nimport './index.scss';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <ThroughProvider>\n      <App/>\n    </ThroughProvider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","export const API = 'https://tcorpapi.azure-api.net/contentservice';\nexport const SKey = 'e7dff51e117448e1a56e301912d70d83';\nexport const OCP = 'true';\n\n/* EndPoints */\nexport const GetCities = '/api/UI/GetCities';\n\nexport const GetLanguages = '/api/UI/GetLanguages';\n\nexport const GetMainPage = '/api/UI/GetMainPage';\nexport const GetMainPagePreview = '/api/UI/GetMainPagePreview';\n\nexport const GetGeneralContent = '/api/UI/GetGeneralContent';\nexport const GetGeneralContentPreview = '/api/UI/GetGeneralContentPreview';\n\nexport const GetCampaignList = '/api/UI/GetCampaignList';\nexport const GetCampaignDetail = '/api/UI/GetCampaignDetail';\nexport const GetCampaignDetailPreview = '/api/UI/GetCampaignDetailPreview';\n\nexport const GetFooterContent = '/api/UI/GetFooterContent';\n\nexport const GetNewsList = '/api/UI/GetNewsList';\nexport const GetNewsDetail = '/api/UI/GetNewsDetail';\nexport const GetNewsDetailPreview = '/api/UI/GetNewsDetailPreview';\n\nexport const GetSocialMedia = '/api/UI/GetSocialMedia';\n\nexport const GetPriceList = '/api/UI/GetPriceList';\n\nexport const GetDealerList = '/api/UI/GetDealerList';\n\nexport const GetSearchResult = '/api/UI/GetSearchResult';\n\nexport const GetRecall = '/api/UI/GetRecall';\n\nexport const GetSubNavigationPages = '/api/UI/GetSubNavigationPages';\n\nexport const GetSiteScript = '/api/UI/GetSiteScript';\n\nexport const Headers = {\n    'Content-Ocp-Apim-Subscription-Key': SKey,\n    'Ocp-Apim-Trace': OCP,\n    'access-control-allow-origin':'*'\n}","import axios from 'axios';\nimport {API, GetLanguages, Headers} from '../Services/config';\nimport $ from 'jquery'\n\nexport async function GetLanguageF (language) {\n  let a = await axios.get(`${API}${GetLanguages}`,\n  {\n    headers : {\n      'Access-Control-Allow-Origin' : '*', // Required for CORS support to work\n      'Access-Control-Allow-Credentials' : true, // Required for cookies, authorization headers with HTTPS\n      'Content-Type' : 'application/json; charset=utf-8',\n      'Ocp-Apim-Subscription-Key': 'e7dff51e117448e1a56e301912d70d83',\n      'Ocp-Apim-Trace': 'true'\n    }\n  }\n  ).then((response) => {\n    return response.data;\n  })\n  .catch(function (error) {\n  })\n\n  return a;\n}","import { GetLanguageF } from '../../Actions/GetLanguage'\r\n\r\nexport default async function getLanguage(param, pageName, pathname) {\r\n  let GetLanguageUpdate = await GetLanguageF()\r\n\r\n  if(localStorage.lang === undefined) {\r\n    localStorage.lang = GetLanguageUpdate[2].code\r\n    localStorage.langid = GetLanguageUpdate[2].id\r\n  } else if (localStorage.lang === 'tr'){\r\n    localStorage.lang = GetLanguageUpdate[2].code\r\n    localStorage.langid = GetLanguageUpdate[2].id\r\n  } else if (localStorage.lang === 'en'){\r\n    localStorage.lang = GetLanguageUpdate[1].code\r\n    localStorage.langid = GetLanguageUpdate[1].id\r\n  }\r\n}"],"sourceRoot":""}