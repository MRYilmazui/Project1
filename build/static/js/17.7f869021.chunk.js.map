{"version":3,"sources":["../node_modules/invariant/browser.js","../node_modules/warning/warning.js","../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js","../node_modules/fbjs/lib/shallowEqual.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/recompose/dist/Recompose.esm.js","../node_modules/recompose/node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","../node_modules/change-emitter/lib/index.js","../node_modules/symbol-observable/es/index.js","../node_modules/symbol-observable/es/ponyfill.js","../webpack:/webpack/bootstrap 2a95070affdf3c0054f1","../../../../../src/index.js","../../../../../src/utils.js","../node_modules/tabbable/index.js","../node_modules/use-places-autocomplete/dist/index.esm.js","../../src/index.tsx","../../src/index.ts","../../src/ClusterIcon.tsx","../../src/Cluster.tsx","../../src/Clusterer.tsx","../../src/InfoBox.tsx","../../src/map-context.ts","../../src/utils/helper.ts","../../src/utils/foreach.ts","../../src/utils/reduce.ts","../../src/GoogleMap.tsx","../../src/utils/isbrowser.ts","../../src/utils/injectscript.ts","../../src/utils/prevent-google-fonts.ts","../../src/utils/make-load-script-url.ts","../../src/LoadScript.tsx","../../src/useLoadScript.tsx","../../src/LoadScriptNext.tsx","../../src/components/maps/TrafficLayer.tsx","../../src/components/maps/BicyclingLayer.tsx","../../src/components/maps/TransitLayer.tsx","../../src/components/drawing/DrawingManager.tsx","../../src/components/drawing/Marker.tsx","../../src/components/addons/MarkerClusterer.tsx","../../src/components/addons/InfoBox.tsx","../../src/components/drawing/InfoWindow.tsx","../../src/components/drawing/Polyline.tsx","../../src/components/drawing/Polygon.tsx","../../src/components/drawing/Rectangle.tsx","../../src/components/drawing/Circle.tsx","../../src/components/drawing/Data.tsx","../../src/components/kml/KmlLayer.tsx","../../src/components/dom/dom-helper.ts","../../src/components/dom/OverlayView.tsx","../../src/components/overlays/GroundOverlay.tsx","../../src/components/heatmap/HeatmapLayer.tsx","../../src/components/streetview/StreetViewPanorama.tsx","../../src/components/streetview/StreetViewService.tsx","../../src/components/directions/DirectionsService.tsx","../../src/components/directions/DirectionsRenderer.tsx","../../src/components/distance-matrix/DistanceMatrixService.tsx","../../src/components/places/StandaloneSearchBox.tsx","../../src/components/places/Autocomplete.tsx"],"names":["module","exports","condition","format","a","b","c","d","e","f","error","undefined","Error","args","argIndex","replace","name","framesToPop","warning","componentWillMount","state","this","constructor","getDerivedStateFromProps","props","setState","componentWillReceiveProps","nextProps","prevState","bind","componentWillUpdate","nextState","prevProps","__reactInternalSnapshotFlag","__reactInternalSnapshot","getSnapshotBeforeUpdate","polyfill","Component","prototype","isReactComponent","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","componentName","displayName","newApiName","componentDidUpdate","maybeSnapshot","snapshot","call","__suppressDeprecationWarning","hasOwnProperty","Object","is","x","y","objA","objB","keysA","keys","keysB","length","i","_arrayLikeToArray","arr","len","arr2","Array","_slicedToArray","isArray","Symbol","iterator","_arr","_n","_d","_e","_s","_i","next","done","push","value","err","o","minLen","n","toString","slice","from","test","TypeError","config$$1","_config","fromESObservable","toESObservable","config","observable","stream","REACT_STATICS","childContextTypes","contextTypes","defaultProps","getDefaultProps","mixins","propTypes","type","KNOWN_STATICS","caller","callee","arguments","arity","defineProperty","getOwnPropertyNames","getOwnPropertySymbols","getOwnPropertyDescriptor","getPrototypeOf","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","concat","key","descriptor","createChangeEmitter","currentListeners","nextListeners","ensureCanMutateNextListeners","listen","listener","isSubscribed","index","indexOf","splice","emit","listeners","apply","root","self","window","global","result","ponyfill","symbolObservablePonyfill","combineChunks","fillInChunks","findAll","findChunks","autoEscape","caseSensitive","sanitize","searchWords","textToHighlight","chunksToHighlight","chunks","totalLength","first","second","processedChunks","prevChunk","nextChunk","endIndex","Math","highlight","start","end","defaultFindChunks","defaultSanitize","searchWord","string","regex","RegExp","match","allChunks","append","lastIndex","chunk","candidateSelectors","candidateSelector","join","matches","Element","msMatchesSelector","webkitMatchesSelector","tabbable","el","options","candidate","candidateTabindex","regularTabbables","orderedTabbables","candidates","querySelectorAll","includeContainer","unshift","isNodeMatchingSelectorTabbable","getTabindex","documentOrder","tabIndex","node","sort","sortOrderedTabbables","map","isNodeMatchingSelectorFocusable","isInput","isRadio","checked","nodes","getCheckedRadio","ownerDocument","isTabbableRadio","isNonTabbableRadio","disabled","isHiddenInput","offsetParent","getComputedStyle","visibility","isHidden","isTabbable","isFocusable","focusableCandidateSelector","tabindexAttr","parseInt","getAttribute","isNaN","contentEditable","isContentEditable","tagName","_defineProperty","obj","enumerable","configurable","writable","ownKeys","object","enumerableOnly","symbols","filter","sym","_objectSpread2","target","source","forEach","getOwnPropertyDescriptors","defineProperties","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","commonjsGlobal","globalThis","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","freeGlobal","freeSelf","Function","objectToString","nativeMax","max","nativeMin","min","now","Date","isObject","toNumber","isObjectLike","isSymbol","other","valueOf","isBinary","lodash_debounce","func","wait","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","invokeFunc","time","thisArg","leadingEdge","setTimeout","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","remainingWait","debounced","isInvoking","cancel","clearTimeout","flush","useLatest","val","ref","useRef","useEffect","current","loadApiErr","getGeocode","geocoder","google","maps","Geocoder","Promise","resolve","reject","geocode","results","status","address","componentRestrictions","console","getLatLng","_result$geometry$loca","geometry","location","lat","lng","usePlacesAutocomplete","_ref","requestOptions","_ref$debounce","debounce","googleMaps","callbackName","_ref$defaultValue","defaultValue","_useState","useState","_useState2","ready","setReady","_useState3","_useState4","setVal","_useState5","loading","data","_useState6","suggestions","setSuggestions","asRef","requestOptionsRef","googleMapsRef","init","useCallback","_google$maps","gMaps","placesLib","places","AutocompleteService","clearSuggestions","fetchPredictions","getPlacePredictions","input","setValue","shouldFetchData","useIsomorphicLayoutEffect","canUseDOM","React","checkStyles","noop","assignRef","isFunction","createNamedContext","Ctx","createContext","forwardRefWithAs","render","getOwnerDocument","element","useForceUpdate","dispatch","useForkedRef","refs","useMemo","wrapEvent","theirHandler","ourHandler","event","createDescendantContext","initialValue","descendants","registerDescendant","unregisterDescendant","useDescendant","descendant","context","indexProp","forceUpdate","useContext","item","previousDescendants","usePrevious","someDescendantsHaveChanged","DescendantProvider","children","items","set","explicitIndex","rest","newItems","Boolean","Node","newItem","serverHandoffComplete","id","genId","mountNode","portalNode","createPortal","observedNodes","run","changedStates","newRect","cb","rafId","observe","wasEmpty","rect","hasRectChanged","callbacks","unobserve","cancelAnimationFrame","useRect","nodeRef","onChange","setElement","initialRectIsSet","initialRefIsSet","setRect","onChangeRef","elem","observer","observeRect","Popover","forwardRef","PopoverImpl","targetRef","position","positionDefault","unstable_observableRefs","popoverRef","popoverRect","targetRect","triggerRef","elementAfterTrigger","getElementAfterTrigger","shiftTabbedFromElementAfterTrigger","elements","last","focusLastTabbableInPopover","shiftTabbedOutOfPopover","focusTriggerRef","shiftTabbedToBrowserChrome","disableTabbablesInPopover","focusFirstPopoverTabbable","tabbedOutOfPopover","focusTabbableAfterTrigger","tabbedToBrowserChrome","targetIndex","restoreTabIndexTupl√©s","useSimulateTabNavigationForReactTree","style","getStyles","top","getCollisions","directionUp","left","directionRight","getTopPosition","positionMatchWidth","width","offsetLeft","offsetBottom","collisions","right","bottom","directionLeft","directionDown","IDLE","SUGGESTING","NAVIGATING","INTERACTING","NAVIGATE","stateChart","initial","states","on","reducer","lastEventType","navigationValue","findNavigationValue","popoverIsExpanded","includes","stateData","ComboboxDescendantContext","ComboboxContext","OptionContext","Combobox","onSelect","openOnFocus","as","Comp","ariaLabel","ariaLabelledby","setOptions","inputRef","buttonRef","autocompletePropRef","persistSelectionRef","chart","useReducer","initialData","payload","currentState","useReducerMachine","transition","useFocusManagement","initialId","idFromProps","setId","String","useId","listboxId","makeId","comboboxId","isExpanded","forwardedRef","ComboboxInput","selectOnClick","autocomplete","onClick","onKeyDown","onBlur","onFocus","controlledValue","initialControlledValue","controlledValueChangedRef","effect","deps","mounted","useUpdateEffect","selectOnClickRef","handleKeyDown","useKeyDown","handleBlur","useBlur","isControlled","handleValueChange","inputValue","makeHash","role","ComboboxPopover","portal","sharedProps","hidden","ComboboxOption","ownRef","isActive","ComboboxOptionText","contextValue","str","escapeRegexp","ctx","persistSelection","getFirstOption","prev","getLastOption","requestAnimationFrame","hash","ClusterIcon","cluster","getClusterer","onAdd","document","cDraggingMapByCluster","cMouseDownInCluster","markerClusterer","maxZoom","bounds","onRemove","div","boundsChangedListener","draw","visible","getPosFromLatLng","hide","show","img","divTitle","bp","backgroundPosition","split","spriteH","spriteV","pos","sums","title","createCss","anchorText","useStyle","styles","height","setCenter","getProjection","fromLatLngToDivPixel","anchorIcon","Cluster","getSize","markers","getMarkers","getCenter","getMap","getBounds","remove","addMarker","isMarkerAlreadyAdded","marker","center","mCount","getZoom","isMarkerInClusterBounds","contains","calculateBounds","getExtendedBounds","updateIcon","getCalculator","CALCULATOR","count","dv","text","IMAGE_SIZES","Clusterer","optMarkers","optOptions","navigator","clusters","setupStyles","imageSizes","url","imagePath","fitMapToMarkers","getGridSize","setGridSize","getMinimumClusterSize","setMinimumClusterSize","getMaxZoom","setMaxZoom","setStyles","getTitle","setTitle","getZoomOnClick","setZoomOnClick","getAverageCenter","setAverageCenter","getIgnoreHidden","setIgnoreHidden","getEnableRetinaIcons","setEnableRetinaIcons","getImageExtension","setImageExtension","getImagePath","setImagePath","getImageSizes","setImageSizes","setCalculator","getBatchSizeIE","setBatchSizeIE","getClusterClass","setClusterClass","getTotalMarkers","getClusters","getTotalClusters","addMarkers","pushMarkerTo","removeMarker_","removeMarker","removed","optNoDraw","removeMarkers","clearMarkers","repaint","oldClusters","projection","trPix","blPix","redraw","resetViewport","distanceBetweenPoints","dLat","p2","p1","dLon","isMarkerInBounds","addToClosestCluster","distance","clusterToAddTo","createClusters","iFirst","timerRefStatic","mapBounds","iLast","ignoreHidden","extend","InfoBox","createInfoBoxDiv","getCloseBoxImg","panes","maxWidth","offsetWidth","bw","events","cancelHandler","closeBoxURL","addClickHandler","closeBox","getCloseClickHandler","panBox","xOffset","yOffset","mapDiv","mapWidth","mapHeight","iwOffsetX","pixelOffset","iwOffsetY","iwWidth","iwHeight","padX","infoBoxClearance","padY","pixPosition","setBoxStyle","boxStyle","opacity","parseFloat","zIndex","getBoxWidths","computedStyle","currentStyle","setContent","content","setPosition","setVisible","setZIndex","getContent","getPosition","getZIndex","getVisible","isVisible","open","anchor","close","eventListeners","MapContext","applyUpdaterToNextProps","fn","updaterMap","nextValue","instance","registerEvents","eventMap","newAcc","reduce","acc","unregisterEvent","registered","unregisterEvents","applyUpdatersToPropsAndRegisterEvents","registeredEvents","onDblClick","onDragEnd","onDragStart","onMapTypeIdChanged","onMouseMove","onMouseOut","onMouseOver","onMouseDown","onMouseUp","onRightClick","onTilesLoaded","onBoundsChanged","onCenterChanged","onDrag","onHeadingChanged","onIdle","onProjectionChanged","onResize","onTiltChanged","onZoomChanged","extraMapTypes","extra","it","clickableIcons","heading","mapTypeId","streetView","tilt","zoom","GoogleMap","mapRef","getInstance","panTo","setMapCallback","getRef","componentDidMount","componentWillUnmount","mapContainerStyle","className","mapContainerClassName","isBrowser","injectScript","nonce","existingScript","windowWithGoogleMap","dataStateAttribute","originalInitMap","originalErrorCallback","script","isRobotoStyle","preventGoogleFonts","head","trueInsertBefore","Reflect","newElement","trueAppend","textNode","makeLoadScriptUrl","googleMapsApiKey","googleMapsClientId","version","language","region","libraries","channel","params","cleaningUp","DefaultLoadingElement","defaultLoadScriptProps","useLoadScript","preventGoogleFontsLoading","isMounted","isLoaded","setLoaded","loadError","setLoadError","previouslyLoadedUrl","setLoadedIfMounted","prevLibraries","check","loaded","cleanupCallback","isCleaningUp","timer","cleanup","link","injectScriptOptions","loadingElement","LoadScript","trafficLayer","setTrafficLayerCallback","TrafficLayer","bicyclingLayer","setBicyclingLayerCallback","BicyclingLayer","transitLayer","setTransitLayerCallback","TransitLayer","onCircleComplete","onMarkerComplete","onOverlayComplete","onPolygonComplete","onPolylineComplete","onRectangleComplete","drawingMode","drawingManager","setDrawingManagerCallback","DrawingManager","onAnimationChanged","onClickableChanged","onCursorChanged","onDraggableChanged","onFlatChanged","onIconChanged","onPositionChanged","onShapeChanged","onTitleChanged","onVisibleChanged","onZindexChanged","animation","clickable","cursor","draggable","icon","label","shape","Marker","setMarkerCallback","markerOptions","clusterer","setMap","child","elementChild","onClusteringBegin","onClusteringEnd","averageCenter","batchSizeIE","calculator","clusterClass","enableRetinaIcons","gridSize","imageExtension","minimumClusterSize","zoomOnClick","setClustererCallback","ClustererComponent","onCloseClick","onContentChanged","onDomReady","containerElement","infoBox","setInfoBoxCallback","onLoad","infoBoxOptions","positionLatLng","onUnmount","ReactDOM","InfoBoxComponent","InfoWindow","infoWindow","setInfoWindowCallback","editable","path","polyline","setPolylineCallback","Polyline","paths","polygon","setPolygonCallback","Polygon","rectangle","setRectangleCallback","Rectangle","onRadiusChanged","radius","circle","setCircleCallback","Circle","onAddFeature","onRemoveFeature","onRemoveProperty","onSetGeometry","onSetProperty","add","addgeojson","foreach","loadgeojson","overridestyle","revertstyle","controlposition","controls","drawingmode","togeojson","setDataCallback","Data","onDefaultViewportChanged","onStatusChanged","kmlLayer","setKmlLayerCallback","KmlLayer","createLatLng","inst","Type","createLatLngBounds","ensureOfType","factory","convertToLatLngString","latLngLike","convertToLatLngBoundsString","latLngBoundsLike","OverlayView","paneEl","containerStyle","updatePane","mapPaneName","mapPanes","onPositionElement","getPixelPositionOffset","layoutStyles","ne","mapCanvasProjection","sw","offset","getLayoutStylesByBounds","point","getLayoutStylesByPosition","getLayoutStyles","currentPosition","previousPosition","overlayView","prevPositionString","positionString","prevBoundsString","boundsString","containerRef","GroundOverlay","groundOverlay","setGroundOverlayCallback","heatmapLayer","setHeatmapLayerCallback","HeatmapLayer","onPanoChanged","onPovChanged","register","links","motionTracking","pano","pov","streetViewPanorama","setStreetViewPanoramaCallback","StreetViewPanorama","streetViewService","setStreetViewServiceCallback","StreetViewService","onDirectionsChanged","directions","panel","routeIndex","directionsRenderer","setDirectionsRendererCallback","DirectionsRenderer","onPlacesChanged","searchBox","setSearchBoxCallback","querySelector","StandaloneSearchBox","onPlaceChanged","restrictions","fields","types","setAutocompleteCallback","Autocomplete"],"mappings":"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","file":"static/js/17.7f869021.chunk.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n * \n */\n\n/*eslint-disable no-self-compare */\n\n'use strict';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Added the nonzero y check to make Flow happy, but it is redundant\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n  }\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqual;","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { createFactory, Component, createElement } from 'react';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport shallowEqual from 'fbjs/lib/shallowEqual';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport { polyfill } from 'react-lifecycles-compat';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { createChangeEmitter } from 'change-emitter';\nimport $$observable from 'symbol-observable';\n\nvar setStatic = function setStatic(key, value) {\n  return function (BaseComponent) {\n    /* eslint-disable no-param-reassign */\n    BaseComponent[key] = value;\n    /* eslint-enable no-param-reassign */\n\n    return BaseComponent;\n  };\n};\n\nvar setDisplayName = function setDisplayName(displayName) {\n  return setStatic('displayName', displayName);\n};\n\nvar getDisplayName = function getDisplayName(Component$$1) {\n  if (typeof Component$$1 === 'string') {\n    return Component$$1;\n  }\n\n  if (!Component$$1) {\n    return undefined;\n  }\n\n  return Component$$1.displayName || Component$$1.name || 'Component';\n};\n\nvar wrapDisplayName = function wrapDisplayName(BaseComponent, hocName) {\n  return hocName + \"(\" + getDisplayName(BaseComponent) + \")\";\n};\n\nvar mapProps = function mapProps(propsMapper) {\n  return function (BaseComponent) {\n    var factory = createFactory(BaseComponent);\n\n    var MapProps = function MapProps(props) {\n      return factory(propsMapper(props));\n    };\n\n    if (process.env.NODE_ENV !== 'production') {\n      return setDisplayName(wrapDisplayName(BaseComponent, 'mapProps'))(MapProps);\n    }\n\n    return MapProps;\n  };\n};\n\nvar withProps = function withProps(input) {\n  var hoc = mapProps(function (props) {\n    return _extends({}, props, typeof input === 'function' ? input(props) : input);\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    return function (BaseComponent) {\n      return setDisplayName(wrapDisplayName(BaseComponent, 'withProps'))(hoc(BaseComponent));\n    };\n  }\n\n  return hoc;\n};\n\nvar pick = function pick(obj, keys) {\n  var result = {};\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n\n    if (obj.hasOwnProperty(key)) {\n      result[key] = obj[key];\n    }\n  }\n\n  return result;\n};\n\nvar withPropsOnChange = function withPropsOnChange(shouldMapOrKeys, propsMapper) {\n  return function (BaseComponent) {\n    var factory = createFactory(BaseComponent);\n    var shouldMap = typeof shouldMapOrKeys === 'function' ? shouldMapOrKeys : function (props, nextProps) {\n      return !shallowEqual(pick(props, shouldMapOrKeys), pick(nextProps, shouldMapOrKeys));\n    };\n\n    var WithPropsOnChange =\n    /*#__PURE__*/\n    function (_Component) {\n      _inheritsLoose(WithPropsOnChange, _Component);\n\n      function WithPropsOnChange() {\n        var _this;\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n        _this.state = {\n          computedProps: propsMapper(_this.props),\n          prevProps: _this.props\n        };\n        return _this;\n      }\n\n      WithPropsOnChange.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n        if (shouldMap(prevState.prevProps, nextProps)) {\n          return {\n            computedProps: propsMapper(nextProps),\n            prevProps: nextProps\n          };\n        }\n\n        return {\n          prevProps: nextProps\n        };\n      };\n\n      var _proto = WithPropsOnChange.prototype;\n\n      _proto.render = function render() {\n        return factory(_extends({}, this.props, this.state.computedProps));\n      };\n\n      return WithPropsOnChange;\n    }(Component);\n\n    polyfill(WithPropsOnChange);\n\n    if (process.env.NODE_ENV !== 'production') {\n      return setDisplayName(wrapDisplayName(BaseComponent, 'withPropsOnChange'))(WithPropsOnChange);\n    }\n\n    return WithPropsOnChange;\n  };\n};\n\nvar mapValues = function mapValues(obj, func) {\n  var result = {};\n  /* eslint-disable no-restricted-syntax */\n\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      result[key] = func(obj[key], key);\n    }\n  }\n  /* eslint-enable no-restricted-syntax */\n\n\n  return result;\n};\n\nvar withHandlers = function withHandlers(handlers) {\n  return function (BaseComponent) {\n    var factory = createFactory(BaseComponent);\n\n    var WithHandlers =\n    /*#__PURE__*/\n    function (_Component) {\n      _inheritsLoose(WithHandlers, _Component);\n\n      function WithHandlers() {\n        var _this;\n\n        for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n          _args[_key] = arguments[_key];\n        }\n\n        _this = _Component.call.apply(_Component, [this].concat(_args)) || this;\n        _this.handlers = mapValues(typeof handlers === 'function' ? handlers(_this.props) : handlers, function (createHandler) {\n          return function () {\n            var handler = createHandler(_this.props);\n\n            if (process.env.NODE_ENV !== 'production' && typeof handler !== 'function') {\n              console.error( // eslint-disable-line no-console\n              'withHandlers(): Expected a map of higher-order functions. ' + 'Refer to the docs for more info.');\n            }\n\n            return handler.apply(void 0, arguments);\n          };\n        });\n        return _this;\n      }\n\n      var _proto = WithHandlers.prototype;\n\n      _proto.render = function render() {\n        return factory(_extends({}, this.props, this.handlers));\n      };\n\n      return WithHandlers;\n    }(Component);\n\n    if (process.env.NODE_ENV !== 'production') {\n      return setDisplayName(wrapDisplayName(BaseComponent, 'withHandlers'))(WithHandlers);\n    }\n\n    return WithHandlers;\n  };\n};\n\nvar defaultProps = function defaultProps(props) {\n  return function (BaseComponent) {\n    var factory = createFactory(BaseComponent);\n\n    var DefaultProps = function DefaultProps(ownerProps) {\n      return factory(ownerProps);\n    };\n\n    DefaultProps.defaultProps = props;\n\n    if (process.env.NODE_ENV !== 'production') {\n      return setDisplayName(wrapDisplayName(BaseComponent, 'defaultProps'))(DefaultProps);\n    }\n\n    return DefaultProps;\n  };\n};\n\nvar omit = function omit(obj, keys) {\n  var rest = _extends({}, obj);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n\n    if (rest.hasOwnProperty(key)) {\n      delete rest[key];\n    }\n  }\n\n  return rest;\n};\n\nvar renameProp = function renameProp(oldName, newName) {\n  var hoc = mapProps(function (props) {\n    var _extends2;\n\n    return _extends({}, omit(props, [oldName]), (_extends2 = {}, _extends2[newName] = props[oldName], _extends2));\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    return function (BaseComponent) {\n      return setDisplayName(wrapDisplayName(BaseComponent, 'renameProp'))(hoc(BaseComponent));\n    };\n  }\n\n  return hoc;\n};\n\nvar keys = Object.keys;\n\nvar mapKeys = function mapKeys(obj, func) {\n  return keys(obj).reduce(function (result, key) {\n    var val = obj[key];\n    /* eslint-disable no-param-reassign */\n\n    result[func(val, key)] = val;\n    /* eslint-enable no-param-reassign */\n\n    return result;\n  }, {});\n};\n\nvar renameProps = function renameProps(nameMap) {\n  var hoc = mapProps(function (props) {\n    return _extends({}, omit(props, keys(nameMap)), mapKeys(pick(props, keys(nameMap)), function (_, oldName) {\n      return nameMap[oldName];\n    }));\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    return function (BaseComponent) {\n      return setDisplayName(wrapDisplayName(BaseComponent, 'renameProps'))(hoc(BaseComponent));\n    };\n  }\n\n  return hoc;\n};\n\nvar flattenProp = function flattenProp(propName) {\n  return function (BaseComponent) {\n    var factory = createFactory(BaseComponent);\n\n    var FlattenProp = function FlattenProp(props) {\n      return factory(_extends({}, props, props[propName]));\n    };\n\n    if (process.env.NODE_ENV !== 'production') {\n      return setDisplayName(wrapDisplayName(BaseComponent, 'flattenProp'))(FlattenProp);\n    }\n\n    return FlattenProp;\n  };\n};\n\nvar withState = function withState(stateName, stateUpdaterName, initialState) {\n  return function (BaseComponent) {\n    var factory = createFactory(BaseComponent);\n\n    var WithState =\n    /*#__PURE__*/\n    function (_Component) {\n      _inheritsLoose(WithState, _Component);\n\n      function WithState() {\n        var _this;\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n        _this.state = {\n          stateValue: typeof initialState === 'function' ? initialState(_this.props) : initialState\n        };\n\n        _this.updateStateValue = function (updateFn, callback) {\n          return _this.setState(function (_ref) {\n            var stateValue = _ref.stateValue;\n            return {\n              stateValue: typeof updateFn === 'function' ? updateFn(stateValue) : updateFn\n            };\n          }, callback);\n        };\n\n        return _this;\n      }\n\n      var _proto = WithState.prototype;\n\n      _proto.render = function render() {\n        var _extends2;\n\n        return factory(_extends({}, this.props, (_extends2 = {}, _extends2[stateName] = this.state.stateValue, _extends2[stateUpdaterName] = this.updateStateValue, _extends2)));\n      };\n\n      return WithState;\n    }(Component);\n\n    if (process.env.NODE_ENV !== 'production') {\n      return setDisplayName(wrapDisplayName(BaseComponent, 'withState'))(WithState);\n    }\n\n    return WithState;\n  };\n};\n\nvar withStateHandlers = function withStateHandlers(initialState, stateUpdaters) {\n  return function (BaseComponent) {\n    var factory = createFactory(BaseComponent);\n\n    var WithStateHandlers =\n    /*#__PURE__*/\n    function (_Component) {\n      _inheritsLoose(WithStateHandlers, _Component);\n\n      function WithStateHandlers() {\n        var _this;\n\n        for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n          _args[_key] = arguments[_key];\n        }\n\n        _this = _Component.call.apply(_Component, [this].concat(_args)) || this;\n        _this.state = typeof initialState === 'function' ? initialState(_this.props) : initialState;\n        _this.stateUpdaters = mapValues(stateUpdaters, function (handler) {\n          return function (mayBeEvent) {\n            for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n              args[_key2 - 1] = arguments[_key2];\n            }\n\n            // Having that functional form of setState can be called async\n            // we need to persist SyntheticEvent\n            if (mayBeEvent && typeof mayBeEvent.persist === 'function') {\n              mayBeEvent.persist();\n            }\n\n            _this.setState(function (state, props) {\n              return handler(state, props).apply(void 0, [mayBeEvent].concat(args));\n            });\n          };\n        });\n        return _this;\n      }\n\n      var _proto = WithStateHandlers.prototype;\n\n      _proto.render = function render() {\n        return factory(_extends({}, this.props, this.state, this.stateUpdaters));\n      };\n\n      return WithStateHandlers;\n    }(Component);\n\n    if (process.env.NODE_ENV !== 'production') {\n      return setDisplayName(wrapDisplayName(BaseComponent, 'withStateHandlers'))(WithStateHandlers);\n    }\n\n    return WithStateHandlers;\n  };\n};\n\nvar noop = function noop() {};\n\nvar withReducer = function withReducer(stateName, dispatchName, reducer, initialState) {\n  return function (BaseComponent) {\n    var factory = createFactory(BaseComponent);\n\n    var WithReducer =\n    /*#__PURE__*/\n    function (_Component) {\n      _inheritsLoose(WithReducer, _Component);\n\n      function WithReducer() {\n        var _this;\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n        _this.state = {\n          stateValue: _this.initializeStateValue()\n        };\n\n        _this.dispatch = function (action, callback) {\n          if (callback === void 0) {\n            callback = noop;\n          }\n\n          return _this.setState(function (_ref) {\n            var stateValue = _ref.stateValue;\n            return {\n              stateValue: reducer(stateValue, action)\n            };\n          }, function () {\n            return callback(_this.state.stateValue);\n          });\n        };\n\n        return _this;\n      }\n\n      var _proto = WithReducer.prototype;\n\n      _proto.initializeStateValue = function initializeStateValue() {\n        if (initialState !== undefined) {\n          return typeof initialState === 'function' ? initialState(this.props) : initialState;\n        }\n\n        return reducer(undefined, {\n          type: '@@recompose/INIT'\n        });\n      };\n\n      _proto.render = function render() {\n        var _extends2;\n\n        return factory(_extends({}, this.props, (_extends2 = {}, _extends2[stateName] = this.state.stateValue, _extends2[dispatchName] = this.dispatch, _extends2)));\n      };\n\n      return WithReducer;\n    }(Component);\n\n    if (process.env.NODE_ENV !== 'production') {\n      return setDisplayName(wrapDisplayName(BaseComponent, 'withReducer'))(WithReducer);\n    }\n\n    return WithReducer;\n  };\n};\n\nvar identity = function identity(Component$$1) {\n  return Component$$1;\n};\n\nvar branch = function branch(test, left, right) {\n  if (right === void 0) {\n    right = identity;\n  }\n\n  return function (BaseComponent) {\n    var leftFactory;\n    var rightFactory;\n\n    var Branch = function Branch(props) {\n      if (test(props)) {\n        leftFactory = leftFactory || createFactory(left(BaseComponent));\n        return leftFactory(props);\n      }\n\n      rightFactory = rightFactory || createFactory(right(BaseComponent));\n      return rightFactory(props);\n    };\n\n    if (process.env.NODE_ENV !== 'production') {\n      return setDisplayName(wrapDisplayName(BaseComponent, 'branch'))(Branch);\n    }\n\n    return Branch;\n  };\n};\n\nvar renderComponent = function renderComponent(Component$$1) {\n  return function (_) {\n    var factory = createFactory(Component$$1);\n\n    var RenderComponent = function RenderComponent(props) {\n      return factory(props);\n    };\n\n    if (process.env.NODE_ENV !== 'production') {\n      RenderComponent.displayName = wrapDisplayName(Component$$1, 'renderComponent');\n    }\n\n    return RenderComponent;\n  };\n};\n\nvar Nothing =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Nothing, _Component);\n\n  function Nothing() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Nothing.prototype;\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return Nothing;\n}(Component);\n\nvar renderNothing = function renderNothing(_) {\n  return Nothing;\n};\n\nvar shouldUpdate = function shouldUpdate(test) {\n  return function (BaseComponent) {\n    var factory = createFactory(BaseComponent);\n\n    var ShouldUpdate =\n    /*#__PURE__*/\n    function (_Component) {\n      _inheritsLoose(ShouldUpdate, _Component);\n\n      function ShouldUpdate() {\n        return _Component.apply(this, arguments) || this;\n      }\n\n      var _proto = ShouldUpdate.prototype;\n\n      _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n        return test(this.props, nextProps);\n      };\n\n      _proto.render = function render() {\n        return factory(this.props);\n      };\n\n      return ShouldUpdate;\n    }(Component);\n\n    if (process.env.NODE_ENV !== 'production') {\n      return setDisplayName(wrapDisplayName(BaseComponent, 'shouldUpdate'))(ShouldUpdate);\n    }\n\n    return ShouldUpdate;\n  };\n};\n\nvar pure = function pure(BaseComponent) {\n  var hoc = shouldUpdate(function (props, nextProps) {\n    return !shallowEqual(props, nextProps);\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    return setDisplayName(wrapDisplayName(BaseComponent, 'pure'))(hoc(BaseComponent));\n  }\n\n  return hoc(BaseComponent);\n};\n\nvar onlyUpdateForKeys = function onlyUpdateForKeys(propKeys) {\n  var hoc = shouldUpdate(function (props, nextProps) {\n    return !shallowEqual(pick(nextProps, propKeys), pick(props, propKeys));\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    return function (BaseComponent) {\n      return setDisplayName(wrapDisplayName(BaseComponent, 'onlyUpdateForKeys'))(hoc(BaseComponent));\n    };\n  }\n\n  return hoc;\n};\n\nvar onlyUpdateForPropTypes = function onlyUpdateForPropTypes(BaseComponent) {\n  var propTypes = BaseComponent.propTypes;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!propTypes) {\n      /* eslint-disable */\n      console.error('A component without any `propTypes` was passed to ' + '`onlyUpdateForPropTypes()`. Check the implementation of the ' + (\"component with display name \\\"\" + getDisplayName(BaseComponent) + \"\\\".\"));\n      /* eslint-enable */\n    }\n  }\n\n  var propKeys = Object.keys(propTypes || {});\n  var OnlyUpdateForPropTypes = onlyUpdateForKeys(propKeys)(BaseComponent);\n\n  if (process.env.NODE_ENV !== 'production') {\n    return setDisplayName(wrapDisplayName(BaseComponent, 'onlyUpdateForPropTypes'))(OnlyUpdateForPropTypes);\n  }\n\n  return OnlyUpdateForPropTypes;\n};\n\nvar withContext = function withContext(childContextTypes, getChildContext) {\n  return function (BaseComponent) {\n    var factory = createFactory(BaseComponent);\n\n    var WithContext =\n    /*#__PURE__*/\n    function (_Component) {\n      _inheritsLoose(WithContext, _Component);\n\n      function WithContext() {\n        var _this;\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n        _this.getChildContext = function () {\n          return getChildContext(_this.props);\n        };\n\n        return _this;\n      }\n\n      var _proto = WithContext.prototype;\n\n      _proto.render = function render() {\n        return factory(this.props);\n      };\n\n      return WithContext;\n    }(Component);\n\n    WithContext.childContextTypes = childContextTypes;\n\n    if (process.env.NODE_ENV !== 'production') {\n      return setDisplayName(wrapDisplayName(BaseComponent, 'withContext'))(WithContext);\n    }\n\n    return WithContext;\n  };\n};\n\nvar getContext = function getContext(contextTypes) {\n  return function (BaseComponent) {\n    var factory = createFactory(BaseComponent);\n\n    var GetContext = function GetContext(ownerProps, context) {\n      return factory(_extends({}, ownerProps, context));\n    };\n\n    GetContext.contextTypes = contextTypes;\n\n    if (process.env.NODE_ENV !== 'production') {\n      return setDisplayName(wrapDisplayName(BaseComponent, 'getContext'))(GetContext);\n    }\n\n    return GetContext;\n  };\n};\n\nvar lifecycle = function lifecycle(spec) {\n  return function (BaseComponent) {\n    var factory = createFactory(BaseComponent);\n\n    if (process.env.NODE_ENV !== 'production' && spec.hasOwnProperty('render')) {\n      console.error('lifecycle() does not support the render method; its behavior is to ' + 'pass all props and state to the base component.');\n    }\n\n    var Lifecycle =\n    /*#__PURE__*/\n    function (_Component) {\n      _inheritsLoose(Lifecycle, _Component);\n\n      function Lifecycle() {\n        return _Component.apply(this, arguments) || this;\n      }\n\n      var _proto = Lifecycle.prototype;\n\n      _proto.render = function render() {\n        return factory(_extends({}, this.props, this.state));\n      };\n\n      return Lifecycle;\n    }(Component);\n\n    Object.keys(spec).forEach(function (hook) {\n      return Lifecycle.prototype[hook] = spec[hook];\n    });\n\n    if (process.env.NODE_ENV !== 'production') {\n      return setDisplayName(wrapDisplayName(BaseComponent, 'lifecycle'))(Lifecycle);\n    }\n\n    return Lifecycle;\n  };\n};\n\nvar isClassComponent = function isClassComponent(Component$$1) {\n  return Boolean(Component$$1 && Component$$1.prototype && typeof Component$$1.prototype.render === 'function');\n};\n\nvar toClass = function toClass(baseComponent) {\n  var _class, _temp;\n\n  return isClassComponent(baseComponent) ? baseComponent : (_temp = _class =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(ToClass, _Component);\n\n    function ToClass() {\n      return _Component.apply(this, arguments) || this;\n    }\n\n    var _proto = ToClass.prototype;\n\n    _proto.render = function render() {\n      if (typeof baseComponent === 'string') {\n        return React.createElement(baseComponent, this.props);\n      }\n\n      return baseComponent(this.props, this.context);\n    };\n\n    return ToClass;\n  }(Component), _class.displayName = getDisplayName(baseComponent), _class.propTypes = baseComponent.propTypes, _class.contextTypes = baseComponent.contextTypes, _class.defaultProps = baseComponent.defaultProps, _temp);\n};\n\nfunction toRenderProps(hoc) {\n  var RenderPropsComponent = function RenderPropsComponent(props) {\n    return props.children(props);\n  };\n\n  return hoc(RenderPropsComponent);\n}\n\nvar fromRenderProps = function fromRenderProps(RenderPropsComponent, propsMapper, renderPropName) {\n  if (renderPropName === void 0) {\n    renderPropName = 'children';\n  }\n\n  return function (BaseComponent) {\n    var baseFactory = React.createFactory(BaseComponent);\n    var renderPropsFactory = React.createFactory(RenderPropsComponent);\n\n    var FromRenderProps = function FromRenderProps(ownerProps) {\n      var _renderPropsFactory;\n\n      return renderPropsFactory((_renderPropsFactory = {}, _renderPropsFactory[renderPropName] = function () {\n        return baseFactory(_extends({}, ownerProps, propsMapper.apply(void 0, arguments)));\n      }, _renderPropsFactory));\n    };\n\n    if (process.env.NODE_ENV !== 'production') {\n      return setDisplayName(wrapDisplayName(BaseComponent, 'fromRenderProps'))(FromRenderProps);\n    }\n\n    return FromRenderProps;\n  };\n};\n\nvar setPropTypes = function setPropTypes(propTypes) {\n  return setStatic('propTypes', propTypes);\n};\n\nvar compose = function compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  }, function (arg) {\n    return arg;\n  });\n};\n\nvar createSink = function createSink(callback) {\n  var Sink =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(Sink, _Component);\n\n    function Sink() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n      _this.state = {};\n      return _this;\n    }\n\n    Sink.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps) {\n      callback(nextProps);\n      return null;\n    };\n\n    var _proto = Sink.prototype;\n\n    _proto.render = function render() {\n      return null;\n    };\n\n    return Sink;\n  }(Component);\n\n  polyfill(Sink);\n  return Sink;\n};\n\nvar componentFromProp = function componentFromProp(propName) {\n  var Component$$1 = function Component$$1(props) {\n    return createElement(props[propName], omit(props, [propName]));\n  };\n\n  Component$$1.displayName = \"componentFromProp(\" + propName + \")\";\n  return Component$$1;\n};\n\nvar nest = function nest() {\n  for (var _len = arguments.length, Components = new Array(_len), _key = 0; _key < _len; _key++) {\n    Components[_key] = arguments[_key];\n  }\n\n  var factories = Components.map(createFactory);\n\n  var Nest = function Nest(_ref) {\n    var children = _ref.children,\n        props = _objectWithoutPropertiesLoose(_ref, [\"children\"]);\n\n    return factories.reduceRight(function (child, factory) {\n      return factory(props, child);\n    }, children);\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    var displayNames = Components.map(getDisplayName);\n    Nest.displayName = \"nest(\" + displayNames.join(', ') + \")\";\n  }\n\n  return Nest;\n};\n\nvar hoistStatics = function hoistStatics(higherOrderComponent, blacklist) {\n  return function (BaseComponent) {\n    var NewComponent = higherOrderComponent(BaseComponent);\n    hoistNonReactStatics(NewComponent, BaseComponent, blacklist);\n    return NewComponent;\n  };\n};\n\nvar _config = {\n  fromESObservable: null,\n  toESObservable: null\n};\n\nvar configureObservable = function configureObservable(c) {\n  _config = c;\n};\n\nvar config = {\n  fromESObservable: function fromESObservable(observable) {\n    return typeof _config.fromESObservable === 'function' ? _config.fromESObservable(observable) : observable;\n  },\n  toESObservable: function toESObservable(stream) {\n    return typeof _config.toESObservable === 'function' ? _config.toESObservable(stream) : stream;\n  }\n};\n\nvar componentFromStreamWithConfig = function componentFromStreamWithConfig(config$$1) {\n  return function (propsToVdom) {\n    return (\n      /*#__PURE__*/\n      function (_Component) {\n        _inheritsLoose(ComponentFromStream, _Component);\n\n        function ComponentFromStream() {\n          var _config$fromESObserva;\n\n          var _this;\n\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n          _this.state = {\n            vdom: null\n          };\n          _this.propsEmitter = createChangeEmitter();\n          _this.props$ = config$$1.fromESObservable((_config$fromESObserva = {\n            subscribe: function subscribe(observer) {\n              var unsubscribe = _this.propsEmitter.listen(function (props) {\n                if (props) {\n                  observer.next(props);\n                } else {\n                  observer.complete();\n                }\n              });\n\n              return {\n                unsubscribe: unsubscribe\n              };\n            }\n          }, _config$fromESObserva[$$observable] = function () {\n            return this;\n          }, _config$fromESObserva));\n          _this.vdom$ = config$$1.toESObservable(propsToVdom(_this.props$));\n          return _this;\n        }\n\n        var _proto = ComponentFromStream.prototype;\n\n        _proto.componentWillMount = function componentWillMount() {\n          var _this2 = this;\n\n          // Subscribe to child prop changes so we know when to re-render\n          this.subscription = this.vdom$.subscribe({\n            next: function next(vdom) {\n              _this2.setState({\n                vdom: vdom\n              });\n            }\n          });\n          this.propsEmitter.emit(this.props);\n        };\n\n        _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n          // Receive new props from the owner\n          this.propsEmitter.emit(nextProps);\n        };\n\n        _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {\n          return nextState.vdom !== this.state.vdom;\n        };\n\n        _proto.componentWillUnmount = function componentWillUnmount() {\n          // Call without arguments to complete stream\n          this.propsEmitter.emit(); // Clean-up subscription before un-mounting\n\n          this.subscription.unsubscribe();\n        };\n\n        _proto.render = function render() {\n          return this.state.vdom;\n        };\n\n        return ComponentFromStream;\n      }(Component)\n    );\n  };\n};\n\nvar componentFromStream = function componentFromStream(propsToVdom) {\n  return componentFromStreamWithConfig(config)(propsToVdom);\n};\n\nvar identity$1 = function identity(t) {\n  return t;\n};\n\nvar mapPropsStreamWithConfig = function mapPropsStreamWithConfig(config$$1) {\n  var componentFromStream$$1 = componentFromStreamWithConfig({\n    fromESObservable: identity$1,\n    toESObservable: identity$1\n  });\n  return function (transform) {\n    return function (BaseComponent) {\n      var factory = createFactory(BaseComponent);\n      var fromESObservable = config$$1.fromESObservable,\n          toESObservable = config$$1.toESObservable;\n      return componentFromStream$$1(function (props$) {\n        var _ref;\n\n        return _ref = {\n          subscribe: function subscribe(observer) {\n            var subscription = toESObservable(transform(fromESObservable(props$))).subscribe({\n              next: function next(childProps) {\n                return observer.next(factory(childProps));\n              }\n            });\n            return {\n              unsubscribe: function unsubscribe() {\n                return subscription.unsubscribe();\n              }\n            };\n          }\n        }, _ref[$$observable] = function () {\n          return this;\n        }, _ref;\n      });\n    };\n  };\n};\n\nvar mapPropsStream = function mapPropsStream(transform) {\n  var hoc = mapPropsStreamWithConfig(config)(transform);\n\n  if (process.env.NODE_ENV !== 'production') {\n    return function (BaseComponent) {\n      return setDisplayName(wrapDisplayName(BaseComponent, 'mapPropsStream'))(hoc(BaseComponent));\n    };\n  }\n\n  return hoc;\n};\n\nvar createEventHandlerWithConfig = function createEventHandlerWithConfig(config$$1) {\n  return function () {\n    var _config$fromESObserva;\n\n    var emitter = createChangeEmitter();\n    var stream = config$$1.fromESObservable((_config$fromESObserva = {\n      subscribe: function subscribe(observer) {\n        var unsubscribe = emitter.listen(function (value) {\n          return observer.next(value);\n        });\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _config$fromESObserva[$$observable] = function () {\n      return this;\n    }, _config$fromESObserva));\n    return {\n      handler: emitter.emit,\n      stream: stream\n    };\n  };\n};\nvar createEventHandler = createEventHandlerWithConfig(config);\n\n// Higher-order component helpers\n\nexport { mapProps, withProps, withPropsOnChange, withHandlers, defaultProps, renameProp, renameProps, flattenProp, withState, withStateHandlers, withReducer, branch, renderComponent, renderNothing, shouldUpdate, pure, onlyUpdateForKeys, onlyUpdateForPropTypes, withContext, getContext, lifecycle, toClass, toRenderProps, fromRenderProps, setStatic, setPropTypes, setDisplayName, compose, getDisplayName, wrapDisplayName, shallowEqual, isClassComponent, createSink, componentFromProp, nest, hoistStatics, componentFromStream, componentFromStreamWithConfig, mapPropsStream, mapPropsStreamWithConfig, createEventHandler, createEventHandlerWithConfig, configureObservable as setObservableConfig };\n","'use strict';\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n    childContextTypes: true,\n    contextTypes: true,\n    defaultProps: true,\n    displayName: true,\n    getDefaultProps: true,\n    getDerivedStateFromProps: true,\n    mixins: true,\n    propTypes: true,\n    type: true\n};\n\nvar KNOWN_STATICS = {\n    name: true,\n    length: true,\n    prototype: true,\n    caller: true,\n    callee: true,\n    arguments: true,\n    arity: true\n};\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = getPrototypeOf && getPrototypeOf(Object);\n\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n    if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components\n\n        if (objectPrototype) {\n            var inheritedComponent = getPrototypeOf(sourceComponent);\n            if (inheritedComponent && inheritedComponent !== objectPrototype) {\n                hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n            }\n        }\n\n        var keys = getOwnPropertyNames(sourceComponent);\n\n        if (getOwnPropertySymbols) {\n            keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n        }\n\n        for (var i = 0; i < keys.length; ++i) {\n            var key = keys[i];\n            if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {\n                var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n                try { // Avoid failures from read-only properties\n                    defineProperty(targetComponent, key, descriptor);\n                } catch (e) {}\n            }\n        }\n\n        return targetComponent;\n    }\n\n    return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar createChangeEmitter = exports.createChangeEmitter = function createChangeEmitter() {\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n\n  function listen(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected listener to be a function.');\n    }\n\n    var isSubscribed = true;\n\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n\n    return function () {\n      if (!isSubscribed) {\n        return;\n      }\n\n      isSubscribed = false;\n\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n    };\n  }\n\n  function emit() {\n    currentListeners = nextListeners;\n    var listeners = currentListeners;\n    for (var i = 0; i < listeners.length; i++) {\n      listeners[i].apply(listeners, arguments);\n    }\n  }\n\n  return {\n    listen: listen,\n    emit: emit\n  };\n};","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2a95070affdf3c0054f1","// @flow\n\nexport { combineChunks, fillInChunks, findAll, findChunks } from './utils'\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","// @flow\n\nexport type Chunk = {|\n  highlight: boolean,\n  start: number,\n  end: number,\n|};\n\n/**\n * Creates an array of chunk objects representing both higlightable and non highlightable pieces of text that match each search word.\n * @return Array of \"chunks\" (where a Chunk is { start:number, end:number, highlight:boolean })\n */\nexport const findAll = ({\n  autoEscape,\n  caseSensitive = false,\n  findChunks = defaultFindChunks,\n  sanitize,\n  searchWords,\n  textToHighlight\n}: {\n  autoEscape?: boolean,\n  caseSensitive?: boolean,\n  findChunks?: typeof defaultFindChunks,\n  sanitize?: typeof defaultSanitize,\n  searchWords: Array<string>,\n  textToHighlight: string,\n}): Array<Chunk> => (\n  fillInChunks({\n    chunksToHighlight: combineChunks({\n      chunks: findChunks({\n        autoEscape,\n        caseSensitive,\n        sanitize,\n        searchWords,\n        textToHighlight\n      })\n    }),\n    totalLength: textToHighlight ? textToHighlight.length : 0\n  })\n)\n\n/**\n * Takes an array of {start:number, end:number} objects and combines chunks that overlap into single chunks.\n * @return {start:number, end:number}[]\n */\nexport const combineChunks = ({\n  chunks\n}: {\n  chunks: Array<Chunk>,\n}): Array<Chunk> => {\n  chunks = chunks\n    .sort((first, second) => first.start - second.start)\n    .reduce((processedChunks, nextChunk) => {\n      // First chunk just goes straight in the array...\n      if (processedChunks.length === 0) {\n        return [nextChunk]\n      } else {\n        // ... subsequent chunks get checked to see if they overlap...\n        const prevChunk = processedChunks.pop()\n        if (nextChunk.start <= prevChunk.end) {\n          // It may be the case that prevChunk completely surrounds nextChunk, so take the\n          // largest of the end indeces.\n          const endIndex = Math.max(prevChunk.end, nextChunk.end)\n          processedChunks.push({highlight: false, start: prevChunk.start, end: endIndex})\n        } else {\n          processedChunks.push(prevChunk, nextChunk)\n        }\n        return processedChunks\n      }\n    }, [])\n\n  return chunks\n}\n\n/**\n * Examine text for any matches.\n * If we find matches, add them to the returned array as a \"chunk\" object ({start:number, end:number}).\n * @return {start:number, end:number}[]\n */\nconst defaultFindChunks = ({\n  autoEscape,\n  caseSensitive,\n  sanitize = defaultSanitize,\n  searchWords,\n  textToHighlight\n}: {\n  autoEscape?: boolean,\n  caseSensitive?: boolean,\n  sanitize?: typeof defaultSanitize,\n  searchWords: Array<string>,\n  textToHighlight: string,\n}): Array<Chunk> => {\n  textToHighlight = sanitize(textToHighlight)\n\n  return searchWords\n    .filter(searchWord => searchWord) // Remove empty words\n    .reduce((chunks, searchWord) => {\n      searchWord = sanitize(searchWord)\n\n      if (autoEscape) {\n        searchWord = escapeRegExpFn(searchWord)\n      }\n\n      const regex = new RegExp(searchWord, caseSensitive ? 'g' : 'gi')\n\n      let match\n      while ((match = regex.exec(textToHighlight))) {\n        let start = match.index\n        let end = regex.lastIndex\n        // We do not return zero-length matches\n        if (end > start) {\n          chunks.push({highlight: false, start, end})\n        }\n\n        // Prevent browsers like Firefox from getting stuck in an infinite loop\n        // See http://www.regexguru.com/2008/04/watch-out-for-zero-length-matches/\n        if (match.index === regex.lastIndex) {\n          regex.lastIndex++\n        }\n      }\n\n      return chunks\n    }, [])\n}\n// Allow the findChunks to be overridden in findAll,\n// but for backwards compatibility we export as the old name\nexport {defaultFindChunks as findChunks}\n\n/**\n * Given a set of chunks to highlight, create an additional set of chunks\n * to represent the bits of text between the highlighted text.\n * @param chunksToHighlight {start:number, end:number}[]\n * @param totalLength number\n * @return {start:number, end:number, highlight:boolean}[]\n */\nexport const fillInChunks = ({\n  chunksToHighlight,\n  totalLength\n}: {\n  chunksToHighlight: Array<Chunk>,\n  totalLength: number,\n}): Array<Chunk> => {\n  const allChunks = []\n  const append = (start, end, highlight) => {\n    if (end - start > 0) {\n      allChunks.push({\n        start,\n        end,\n        highlight\n      })\n    }\n  }\n\n  if (chunksToHighlight.length === 0) {\n    append(0, totalLength, false)\n  } else {\n    let lastIndex = 0\n    chunksToHighlight.forEach((chunk) => {\n      append(lastIndex, chunk.start, false)\n      append(chunk.start, chunk.end, true)\n      lastIndex = chunk.end\n    })\n    append(lastIndex, totalLength, false)\n  }\n  return allChunks\n}\n\nfunction defaultSanitize (string: string): string {\n  return string\n}\n\nfunction escapeRegExpFn (string: string): string {\n  return string.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&')\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","var candidateSelectors = [\n  'input',\n  'select',\n  'textarea',\n  'a[href]',\n  'button',\n  '[tabindex]',\n  'audio[controls]',\n  'video[controls]',\n  '[contenteditable]:not([contenteditable=\"false\"])',\n];\nvar candidateSelector = candidateSelectors.join(',');\n\nvar matches = typeof Element === 'undefined'\n  ? function () {}\n  : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\nfunction tabbable(el, options) {\n  options = options || {};\n\n  var regularTabbables = [];\n  var orderedTabbables = [];\n\n  var candidates = el.querySelectorAll(candidateSelector);\n\n  if (options.includeContainer) {\n    if (matches.call(el, candidateSelector)) {\n      candidates = Array.prototype.slice.apply(candidates);\n      candidates.unshift(el);\n    }\n  }\n\n  var i, candidate, candidateTabindex;\n  for (i = 0; i < candidates.length; i++) {\n    candidate = candidates[i];\n\n    if (!isNodeMatchingSelectorTabbable(candidate)) continue;\n\n    candidateTabindex = getTabindex(candidate);\n    if (candidateTabindex === 0) {\n      regularTabbables.push(candidate);\n    } else {\n      orderedTabbables.push({\n        documentOrder: i,\n        tabIndex: candidateTabindex,\n        node: candidate,\n      });\n    }\n  }\n\n  var tabbableNodes = orderedTabbables\n    .sort(sortOrderedTabbables)\n    .map(function(a) { return a.node })\n    .concat(regularTabbables);\n\n  return tabbableNodes;\n}\n\ntabbable.isTabbable = isTabbable;\ntabbable.isFocusable = isFocusable;\n\nfunction isNodeMatchingSelectorTabbable(node) {\n  if (\n    !isNodeMatchingSelectorFocusable(node)\n    || isNonTabbableRadio(node)\n    || getTabindex(node) < 0\n  ) {\n    return false;\n  }\n  return true;\n}\n\nfunction isTabbable(node) {\n  if (!node) throw new Error('No node provided');\n  if (matches.call(node, candidateSelector) === false) return false;\n  return isNodeMatchingSelectorTabbable(node);\n}\n\nfunction isNodeMatchingSelectorFocusable(node) {\n  if (\n    node.disabled\n    || isHiddenInput(node)\n    || isHidden(node)\n  ) {\n    return false;\n  }\n  return true;\n}\n\nvar focusableCandidateSelector = candidateSelectors.concat('iframe').join(',');\nfunction isFocusable(node) {\n  if (!node) throw new Error('No node provided');\n  if (matches.call(node, focusableCandidateSelector) === false) return false;\n  return isNodeMatchingSelectorFocusable(node);\n}\n\nfunction getTabindex(node) {\n  var tabindexAttr = parseInt(node.getAttribute('tabindex'), 10);\n  if (!isNaN(tabindexAttr)) return tabindexAttr;\n  // Browsers do not return `tabIndex` correctly for contentEditable nodes;\n  // so if they don't have a tabindex attribute specifically set, assume it's 0.\n  if (isContentEditable(node)) return 0;\n  return node.tabIndex;\n}\n\nfunction sortOrderedTabbables(a, b) {\n  return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;\n}\n\nfunction isContentEditable(node) {\n  return node.contentEditable === 'true';\n}\n\nfunction isInput(node) {\n  return node.tagName === 'INPUT';\n}\n\nfunction isHiddenInput(node) {\n  return isInput(node) && node.type === 'hidden';\n}\n\nfunction isRadio(node) {\n  return isInput(node) && node.type === 'radio';\n}\n\nfunction isNonTabbableRadio(node) {\n  return isRadio(node) && !isTabbableRadio(node);\n}\n\nfunction getCheckedRadio(nodes) {\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked) {\n      return nodes[i];\n    }\n  }\n}\n\nfunction isTabbableRadio(node) {\n  if (!node.name) return true;\n  // This won't account for the edge case where you have radio groups with the same\n  // in separate forms on the same page.\n  var radioSet = node.ownerDocument.querySelectorAll('input[type=\"radio\"][name=\"' + node.name + '\"]');\n  var checked = getCheckedRadio(radioSet);\n  return !checked || checked === node;\n}\n\nfunction isHidden(node) {\n  // offsetParent being null will allow detecting cases where an element is invisible or inside an invisible element,\n  // as long as the element does not use position: fixed. For them, their visibility has to be checked directly as well.\n  return node.offsetParent === null || getComputedStyle(node).visibility === 'hidden';\n}\n\nmodule.exports = tabbable;\n","import { useRef, useEffect, useState, useCallback } from 'react';\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof commonjsGlobal == 'object' && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nvar lodash_debounce = debounce;\n\nvar useLatest = (function (val) {\n  var ref = useRef(val);\n  useEffect(function () {\n    ref.current = val;\n  }, [val]);\n  return ref;\n});\n\nvar loadApiErr = \"üí°use-places-autocomplete: Google Maps Places API library must be loaded. See: https://github.com/wellyshen/use-places-autocomplete#load-the-library\";\n\nvar usePlacesAutocomplete = function usePlacesAutocomplete() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      requestOptions = _ref.requestOptions,\n      _ref$debounce = _ref.debounce,\n      debounce = _ref$debounce === void 0 ? 200 : _ref$debounce,\n      googleMaps = _ref.googleMaps,\n      callbackName = _ref.callbackName,\n      _ref$defaultValue = _ref.defaultValue,\n      defaultValue = _ref$defaultValue === void 0 ? \"\" : _ref$defaultValue;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      ready = _useState2[0],\n      setReady = _useState2[1];\n\n  var _useState3 = useState(defaultValue),\n      _useState4 = _slicedToArray(_useState3, 2),\n      value = _useState4[0],\n      setVal = _useState4[1];\n\n  var _useState5 = useState({\n    loading: false,\n    status: \"\",\n    data: []\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      suggestions = _useState6[0],\n      setSuggestions = _useState6[1];\n\n  var asRef = useRef(null);\n  var requestOptionsRef = useLatest(requestOptions);\n  var googleMapsRef = useLatest(googleMaps);\n  var init = useCallback(function () {\n    var _google$maps;\n\n    var _window = window,\n        google = _window.google;\n    var gMaps = googleMapsRef.current;\n    var placesLib = (gMaps === null || gMaps === void 0 ? void 0 : gMaps.places) || (google === null || google === void 0 ? void 0 : (_google$maps = google.maps) === null || _google$maps === void 0 ? void 0 : _google$maps.places);\n\n    if (!placesLib) {\n      console.error(loadApiErr);\n      return;\n    }\n\n    asRef.current = new placesLib.AutocompleteService();\n    setReady(true);\n  }, []);\n  var clearSuggestions = useCallback(function () {\n    setSuggestions({\n      loading: false,\n      status: \"\",\n      data: []\n    });\n  }, []);\n  var fetchPredictions = useCallback(lodash_debounce(function (val) {\n    if (!val) {\n      clearSuggestions();\n      return;\n    } // To keep the previous suggestions\n\n\n    setSuggestions(function (prevState) {\n      return _objectSpread2(_objectSpread2({}, prevState), {}, {\n        loading: true\n      });\n    }); // @ts-expect-error\n\n    asRef.current.getPlacePredictions(_objectSpread2(_objectSpread2({}, requestOptionsRef.current), {}, {\n      input: val\n    }), function (data, status) {\n      setSuggestions({\n        loading: false,\n        status: status,\n        data: data || []\n      });\n    });\n  }, debounce), [debounce, clearSuggestions]);\n  var setValue = useCallback(function (val) {\n    var shouldFetchData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    setVal(val);\n    if (shouldFetchData) fetchPredictions(val);\n  }, [fetchPredictions]);\n  useEffect(function () {\n    var _window2 = window,\n        google = _window2.google;\n\n    if (!googleMapsRef.current && !(google === null || google === void 0 ? void 0 : google.maps) && callbackName) {\n      window[callbackName] = init;\n    } else {\n      init();\n    }\n\n    return function () {\n      // @ts-expect-error\n      if (window[callbackName]) delete window[callbackName];\n    };\n  }, [callbackName, init]);\n  return {\n    ready: ready,\n    value: value,\n    suggestions: suggestions,\n    setValue: setValue,\n    clearSuggestions: clearSuggestions\n  };\n};\n\n/* eslint-disable compat/compat */\nvar geocodeErr = \"üí°use-places-autocomplete: Please provide an address when using getGeocode() with the componentRestrictions.\";\nvar getGeocode = function getGeocode(args) {\n  var geocoder = new window.google.maps.Geocoder();\n  return new Promise(function (resolve, reject) {\n    geocoder.geocode(args, function (results, status) {\n      if (status !== \"OK\") reject(status);\n\n      if (!args.address && args.componentRestrictions) {\n        console.error(geocodeErr);\n        resolve(results);\n      }\n\n      resolve(results);\n    });\n  });\n};\nvar getLatLng = function getLatLng(result) {\n  return new Promise(function (resolve, reject) {\n    try {\n      var _result$geometry$loca = result.geometry.location,\n          lat = _result$geometry$loca.lat,\n          lng = _result$geometry$loca.lng;\n      resolve({\n        lat: lat(),\n        lng: lng()\n      });\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\nvar getZipCode = function getZipCode(result, useShortName) {\n  return new Promise(function (resolve, reject) {\n    try {\n      var zipCode = null;\n      result.address_components.forEach(function (_ref) {\n        var long_name = _ref.long_name,\n            short_name = _ref.short_name,\n            types = _ref.types;\n        if (types.includes(\"postal_code\")) zipCode = useShortName ? short_name : long_name;\n      });\n      resolve(zipCode);\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\nvar getDetailsErr = \"üí°use-places-autocomplete: Please provide a place Id when using getDetails() either as a string or as part of an Autocomplete Prediction.\";\nvar getDetails = function getDetails(args) {\n  var PlacesService = new window.google.maps.places.PlacesService(document.createElement(\"div\"));\n  var placeId = _typeof(args) === \"object\" ? args.place_id : args;\n\n  if (typeof placeId !== \"string\") {\n    console.error(getDetailsErr);\n    return Promise.reject(getDetailsErr);\n  }\n\n  return new Promise(function (resolve, reject) {\n    PlacesService.getDetails({\n      placeId: placeId\n    }, function (results, status) {\n      if (status !== \"OK\") reject(status);\n      resolve(results);\n    });\n  });\n};\n\nexport default usePlacesAutocomplete;\nexport { getDetails, getGeocode, getLatLng, getZipCode };\n","/**\n * Welcome to @reach/combobox!\n *\n * Accessible combobox (autocomplete or autosuggest) component for React.\n *\n * A combobox is the combination of an `<input type=\"text\"/>` and a list. The\n * list is designed to help the user arrive at a value, but the value does not\n * necessarily have to come from that list. Don't think of it like a\n * `<select/>`, but more of an `<input type=\"text\"/>` with some suggestions. You\n * can, however, validate that the value comes from the list, that's up to your\n * app.\n *\n * ???: navigate w/ arrows, then hit backspace: should it delete the\n *      autocompleted text or the old value the user had typed?!\n *\n * @see Docs     https://reach.tech/combobox\n * @see Source   https://github.com/reach/reach-ui/tree/main/packages/combobox\n * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices-1.2/#combobox\n */\n\nimport React, {\n  forwardRef,\n  useEffect,\n  useRef,\n  useCallback,\n  useContext,\n  useMemo,\n  useReducer,\n  useState,\n} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  checkStyles,\n  createNamedContext,\n  forwardRefWithAs,\n  getOwnerDocument,\n  isFunction,\n  makeId,\n  useIsomorphicLayoutEffect,\n  useForkedRef,\n  useUpdateEffect,\n  wrapEvent,\n  noop,\n} from \"@reach/utils\";\nimport {\n  createDescendantContext,\n  Descendant,\n  DescendantProvider,\n  useDescendant,\n  useDescendants,\n  useDescendantsInit,\n} from \"@reach/descendants\";\nimport { findAll } from \"highlight-words-core\";\nimport { useId } from \"@reach/auto-id\";\nimport Popover, { positionMatchWidth, PopoverProps } from \"@reach/popover\";\n\n////////////////////////////////////////////////////////////////////////////////\n// States\n\n// Nothing going on, waiting for the user to type or use the arrow keys\nconst IDLE = \"IDLE\";\n\n// The component is suggesting options as the user types\nconst SUGGESTING = \"SUGGESTING\";\n\n// The user is using the keyboard to navigate the list, not typing\nconst NAVIGATING = \"NAVIGATING\";\n\n// The user is interacting with arbitrary elements inside the popup that\n// are not ComboboxInputs\nconst INTERACTING = \"INTERACTING\";\n\n////////////////////////////////////////////////////////////////////////////////\n// Events\n\n// User cleared the value w/ backspace, but input still has focus\nconst CLEAR = \"CLEAR\";\n\n// User is typing\nconst CHANGE = \"CHANGE\";\n\n// Initial input value change handler for syncing user state with state machine\n// Prevents initial change from sending the user to the NAVIGATING state\n// https://github.com/reach/reach-ui/issues/464\nconst INITIAL_CHANGE = \"INITIAL_CHANGE\";\n\n// User is navigating w/ the keyboard\nconst NAVIGATE = \"NAVIGATE\";\n\n// User can be navigating with keyboard and then click instead, we want the\n// value from the click, not the current nav item\nconst SELECT_WITH_KEYBOARD = \"SELECT_WITH_KEYBOARD\";\nconst SELECT_WITH_CLICK = \"SELECT_WITH_CLICK\";\n\n// Pretty self-explanatory, user can hit escape or blur to close the popover\nconst ESCAPE = \"ESCAPE\";\nconst BLUR = \"BLUR\";\n\n// The user left the input to interact with arbitrary elements inside the popup\nconst INTERACT = \"INTERACT\";\n\nconst FOCUS = \"FOCUS\";\n\nconst OPEN_WITH_BUTTON = \"OPEN_WITH_BUTTON\";\n\nconst CLOSE_WITH_BUTTON = \"CLOSE_WITH_BUTTON\";\n\n////////////////////////////////////////////////////////////////////////////////\nconst stateChart: StateChart = {\n  initial: IDLE,\n  states: {\n    [IDLE]: {\n      on: {\n        [BLUR]: IDLE,\n        [CLEAR]: IDLE,\n        [CHANGE]: SUGGESTING,\n        [INITIAL_CHANGE]: IDLE,\n        [FOCUS]: SUGGESTING,\n        [NAVIGATE]: NAVIGATING,\n        [OPEN_WITH_BUTTON]: SUGGESTING,\n      },\n    },\n    [SUGGESTING]: {\n      on: {\n        [CHANGE]: SUGGESTING,\n        [FOCUS]: SUGGESTING,\n        [NAVIGATE]: NAVIGATING,\n        [CLEAR]: IDLE,\n        [ESCAPE]: IDLE,\n        [BLUR]: IDLE,\n        [SELECT_WITH_CLICK]: IDLE,\n        [INTERACT]: INTERACTING,\n        [CLOSE_WITH_BUTTON]: IDLE,\n      },\n    },\n    [NAVIGATING]: {\n      on: {\n        [CHANGE]: SUGGESTING,\n        [FOCUS]: SUGGESTING,\n        [CLEAR]: IDLE,\n        [BLUR]: IDLE,\n        [ESCAPE]: IDLE,\n        [NAVIGATE]: NAVIGATING,\n        [SELECT_WITH_CLICK]: IDLE,\n        [SELECT_WITH_KEYBOARD]: IDLE,\n        [CLOSE_WITH_BUTTON]: IDLE,\n        [INTERACT]: INTERACTING,\n      },\n    },\n    [INTERACTING]: {\n      on: {\n        [CLEAR]: IDLE,\n        [CHANGE]: SUGGESTING,\n        [FOCUS]: SUGGESTING,\n        [BLUR]: IDLE,\n        [ESCAPE]: IDLE,\n        [NAVIGATE]: NAVIGATING,\n        [CLOSE_WITH_BUTTON]: IDLE,\n        [SELECT_WITH_CLICK]: IDLE,\n      },\n    },\n  },\n};\n\nconst reducer: Reducer = (data: StateData, event: MachineEvent) => {\n  const nextState = { ...data, lastEventType: event.type };\n  switch (event.type) {\n    case CHANGE:\n    case INITIAL_CHANGE:\n      return {\n        ...nextState,\n        navigationValue: null,\n        value: event.value,\n      };\n    case NAVIGATE:\n    case OPEN_WITH_BUTTON:\n      return {\n        ...nextState,\n        navigationValue: findNavigationValue(nextState, event),\n      };\n    case CLEAR:\n      return {\n        ...nextState,\n        value: \"\",\n        navigationValue: null,\n      };\n    case BLUR:\n    case ESCAPE:\n      return {\n        ...nextState,\n        navigationValue: null,\n      };\n    case SELECT_WITH_CLICK:\n      return {\n        ...nextState,\n        value: event.value,\n        navigationValue: null,\n      };\n    case SELECT_WITH_KEYBOARD:\n      return {\n        ...nextState,\n        value: data.navigationValue,\n        navigationValue: null,\n      };\n    case CLOSE_WITH_BUTTON:\n      return {\n        ...nextState,\n        navigationValue: null,\n      };\n    case INTERACT:\n      return nextState;\n    case FOCUS:\n      return {\n        ...nextState,\n        navigationValue: findNavigationValue(nextState, event),\n      };\n\n    default:\n      return nextState;\n  }\n};\n\nfunction popoverIsExpanded(state: State) {\n  return [SUGGESTING, NAVIGATING, INTERACTING].includes(state);\n}\n\n/**\n * When we open a list, set the navigation value to the value in the input, if\n * it's in the list, then it'll automatically be highlighted.\n *\n * @param stateData\n * @param event\n */\nfunction findNavigationValue(stateData: StateData, event: MachineEvent) {\n  // @ts-ignore\n  if (event.value) {\n    // @ts-ignore\n    return event.value;\n    // @ts-ignore\n  } else if (event.persistSelection) {\n    return stateData.value;\n  } else {\n    return null;\n  }\n}\n\nconst ComboboxDescendantContext = createDescendantContext<ComboboxDescendant>(\n  \"ComboboxDescendantContext\"\n);\nconst ComboboxContext = createNamedContext(\n  \"ComboboxContext\",\n  {} as InternalComboboxContextValue\n);\n\n// Allows us to put the option's value on context so that ComboboxOptionText\n// can work it's highlight text magic no matter what else is rendered around\n// it.\nconst OptionContext = createNamedContext(\n  \"OptionContext\",\n  {} as ComboboxOptionContextValue\n);\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Combobox\n *\n * @see Docs https://reach.tech/combobox#combobox\n */\nexport const Combobox = forwardRefWithAs<ComboboxProps, \"div\">(\n  function Combobox(\n    {\n      onSelect,\n      openOnFocus = false,\n      children,\n      as: Comp = \"div\",\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabelledby,\n      ...props\n    },\n    forwardedRef\n  ) {\n    let [options, setOptions] = useDescendantsInit<ComboboxDescendant>();\n\n    // Need this to focus it\n    const inputRef = useRef();\n\n    const popoverRef = useRef();\n\n    const buttonRef = useRef();\n\n    // When <ComboboxInput autocomplete={false} /> we don't want cycle back to\n    // the user's value while navigating (because it's always the user's value),\n    // but we need to know this in useKeyDown which is far away from the prop\n    // here, so we do something sneaky and write it to this ref on context so we\n    // can use it anywhere else üòõ. Another new trick for me and I'm excited\n    // about this one too!\n    const autocompletePropRef = useRef();\n\n    const persistSelectionRef = useRef();\n\n    const defaultData: StateData = {\n      // The value the user has typed. We derive this also when the developer is\n      // controlling the value of ComboboxInput.\n      value: \"\",\n      // the value the user has navigated to with the keyboard\n      navigationValue: null,\n    };\n\n    const [state, data, transition] = useReducerMachine(\n      stateChart,\n      reducer,\n      defaultData\n    );\n\n    useFocusManagement(data.lastEventType, inputRef);\n\n    const id = useId(props.id);\n    const listboxId = id ? makeId(\"listbox\", id) : \"listbox\";\n\n    const context: InternalComboboxContextValue = {\n      ariaLabel,\n      ariaLabelledby,\n      autocompletePropRef,\n      buttonRef,\n      comboboxId: id,\n      data,\n      inputRef,\n      isExpanded: popoverIsExpanded(state),\n      listboxId,\n      onSelect: onSelect || noop,\n      openOnFocus,\n      persistSelectionRef,\n      popoverRef,\n      state,\n      transition,\n    };\n\n    useEffect(() => checkStyles(\"combobox\"), []);\n\n    return (\n      <DescendantProvider\n        context={ComboboxDescendantContext}\n        items={options}\n        set={setOptions}\n      >\n        <ComboboxContext.Provider value={context}>\n          <Comp {...props} data-reach-combobox=\"\" ref={forwardedRef}>\n            {isFunction(children)\n              ? children({ id, isExpanded: popoverIsExpanded(state) })\n              : children}\n          </Comp>\n        </ComboboxContext.Provider>\n      </DescendantProvider>\n    );\n  }\n);\n\n/**\n * @see Docs https://reach.tech/combobox#combobox-props\n */\nexport type ComboboxProps = {\n  /**\n   * @see Docs https://reach.tech/combobox#combobox-children\n   */\n  children:\n    | React.ReactNode\n    | ((props: ComboboxContextValue) => React.ReactNode);\n  /**\n   * Called with the selection value when the user makes a selection from the\n   * list.\n   *\n   * @see Docs https://reach.tech/combobox#combobox-onselect\n   */\n  onSelect?(value: ComboboxValue): void;\n  /**\n   * If true, the popover opens when focus is on the text box.\n   *\n   * @see Docs https://reach.tech/combobox#combobox-openonfocus\n   */\n  openOnFocus?: boolean;\n  /**\n   * Defines a string value that labels the current element.\n   * @see Docs https://reach.tech/combobox#accessibility\n   */\n  \"aria-label\"?: string;\n  /**\n   * Identifies the element (or elements) that labels the current element.\n   * @see Docs https://reach.tech/combobox#accessibility\n   */\n  \"aria-labelledby\"?: string;\n};\n\nif (__DEV__) {\n  Combobox.displayName = \"Combobox\";\n  Combobox.propTypes = {\n    as: PropTypes.any,\n    onSelect: PropTypes.func,\n    openOnFocus: PropTypes.bool,\n  };\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * ComboboxInput\n *\n * Wraps an `<input/>` with a couple extra props that work with the combobox.\n *\n * @see Docs https://reach.tech/combobox#comboboxinput\n */\nexport const ComboboxInput = forwardRefWithAs<ComboboxInputProps, \"input\">(\n  function ComboboxInput(\n    {\n      as: Comp = \"input\",\n      selectOnClick = false,\n      autocomplete = true,\n      onClick,\n      onChange,\n      onKeyDown,\n      onBlur,\n      onFocus,\n      value: controlledValue,\n      ...props\n    },\n    forwardedRef\n  ) {\n    // https://github.com/reach/reach-ui/issues/464\n    let { current: initialControlledValue } = useRef(controlledValue);\n    let controlledValueChangedRef = useRef(false);\n    useUpdateEffect(() => {\n      controlledValueChangedRef.current = true;\n    }, [controlledValue]);\n\n    let {\n      data: { navigationValue, value, lastEventType },\n      inputRef,\n      state,\n      transition,\n      listboxId,\n      autocompletePropRef,\n      openOnFocus,\n      isExpanded,\n      ariaLabel,\n      ariaLabelledby,\n    } = useContext(ComboboxContext);\n\n    let ref = useForkedRef(inputRef, forwardedRef);\n\n    // Because we close the List on blur, we need to track if the blur is\n    // caused by clicking inside the list, and if so, don't close the List.\n    let selectOnClickRef = useRef(false);\n\n    let handleKeyDown = useKeyDown();\n\n    let handleBlur = useBlur();\n\n    let isControlled = controlledValue != null;\n\n    // Layout effect should be SSR-safe here because we don't actually do\n    // anything with this ref that involves rendering until after we've\n    // let the client hydrate in nested components.\n    useIsomorphicLayoutEffect(() => {\n      autocompletePropRef.current = autocomplete;\n    }, [autocomplete, autocompletePropRef]);\n\n    const handleValueChange = useCallback(\n      (value: ComboboxValue) => {\n        if (value.trim() === \"\") {\n          transition(CLEAR);\n        } else if (\n          value === initialControlledValue &&\n          !controlledValueChangedRef.current\n        ) {\n          transition(INITIAL_CHANGE, { value });\n        } else {\n          transition(CHANGE, { value });\n        }\n      },\n      [initialControlledValue, transition]\n    );\n\n    useEffect(() => {\n      // If they are controlling the value we still need to do our transitions,\n      // so  we have this derived state to emulate onChange of the input as we\n      // receive new `value`s ...[*]\n      if (\n        isControlled &&\n        controlledValue !== value &&\n        // https://github.com/reach/reach-ui/issues/481\n        (controlledValue!.trim() === \"\" ? (value || \"\").trim() !== \"\" : true)\n      ) {\n        handleValueChange(controlledValue!);\n      }\n    }, [controlledValue, handleValueChange, isControlled, value]);\n\n    // [*]... and when controlled, we don't trigger handleValueChange as the\n    // user types, instead the developer controls it with the normal input\n    // onChange prop\n    function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n      const { value } = event.target;\n      if (!isControlled) {\n        handleValueChange(value);\n      }\n    }\n\n    function handleFocus() {\n      if (selectOnClick) {\n        selectOnClickRef.current = true;\n      }\n\n      // If we select an option with click, useFocusManagement will focus the\n      // input, in those cases we don't want to cause the menu to open back up,\n      // so we guard behind these states.\n      if (openOnFocus && lastEventType !== SELECT_WITH_CLICK) {\n        transition(FOCUS);\n      }\n    }\n\n    function handleClick() {\n      if (selectOnClickRef.current) {\n        selectOnClickRef.current = false;\n        inputRef.current.select();\n      }\n    }\n\n    const inputValue =\n      autocomplete && (state === NAVIGATING || state === INTERACTING)\n        ? // When idle, we don't have a navigationValue on ArrowUp/Down\n          navigationValue || controlledValue || value\n        : controlledValue || value;\n\n    return (\n      <Comp\n        aria-activedescendant={\n          navigationValue ? String(makeHash(navigationValue)) : undefined\n        }\n        aria-autocomplete=\"both\"\n        aria-controls={listboxId}\n        aria-expanded={isExpanded}\n        aria-haspopup=\"listbox\"\n        aria-label={ariaLabel}\n        aria-labelledby={ariaLabel ? undefined : ariaLabelledby}\n        role=\"combobox\"\n        {...props}\n        data-reach-combobox-input=\"\"\n        ref={ref}\n        onBlur={wrapEvent(onBlur, handleBlur)}\n        onChange={wrapEvent(onChange, handleChange)}\n        onClick={wrapEvent(onClick, handleClick)}\n        onFocus={wrapEvent(onFocus, handleFocus)}\n        onKeyDown={wrapEvent(onKeyDown, handleKeyDown)}\n        value={inputValue || \"\"}\n      />\n    );\n  }\n);\n\n/**\n * @see Docs https://reach.tech/combobox#comboboxinput-props\n */\nexport type ComboboxInputProps = {\n  /**\n   * If true, when the user clicks inside the text box the current value will\n   * be selected. Use this if the user is likely to delete all the text anyway\n   * (like the URL bar in browsers).\n   *\n   * However, if the user is likely to want to tweak the value, leave this\n   * false, like a google search--the user is likely wanting to edit their\n   * search, not replace it completely.\n   *\n   * @see Docs https://reach.tech/combobox#comboboxinput-selectonclick\n   */\n  selectOnClick?: boolean;\n  /**\n   * Determines if the value in the input changes or not as the user navigates\n   * with the keyboard. If true, the value changes, if false the value doesn't\n   * change.\n   *\n   * Set this to false when you don't really need the value from the input but\n   * want to populate some other state (like the recipient selector in Gmail).\n   * But if your input is more like a normal `<input type=\"text\"/>`, then leave\n   * the `true` default.\n   *\n   * @see Docs https://reach.tech/combobox#comboboxinput-autocomplete\n   */\n  autocomplete?: boolean;\n  /**\n   * @see Docs https://reach.tech/combobox#comboboxinput-value\n   */\n  value?: ComboboxValue;\n};\n\nif (__DEV__) {\n  ComboboxInput.displayName = \"ComboboxInput\";\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * ComboboxPopover\n *\n * Contains the popup that renders the list. Because some UI needs to render\n * more than the list in the popup, you need to render one of these around the\n * list. For example, maybe you want to render the number of results suggested.\n *\n * @see Docs https://reach.tech/combobox#comboboxpopover\n */\nexport const ComboboxPopover = forwardRef<\n  HTMLDivElement,\n  ComboboxPopoverProps & Partial<PopoverProps>\n>(function ComboboxPopover(\n  {\n    children,\n    portal = true,\n    onKeyDown,\n    onBlur,\n    position = positionMatchWidth,\n    ...props\n  },\n  forwardedRef: React.Ref<any>\n) {\n  const { popoverRef, inputRef, isExpanded } = useContext(ComboboxContext);\n  const ref = useForkedRef(popoverRef, forwardedRef);\n  const handleKeyDown = useKeyDown();\n  const handleBlur = useBlur();\n\n  const sharedProps = {\n    \"data-reach-combobox-popover\": \"\",\n    onKeyDown: wrapEvent<any>(onKeyDown, handleKeyDown),\n    onBlur: wrapEvent<any>(onBlur, handleBlur),\n    // Instead of conditionally rendering the popover we use the `hidden` prop\n    // because we don't want to unmount on close (from escape or onSelect).\n    // However, the developer can conditionally render the ComboboxPopover if\n    // they do want to cause mount/unmount based on the app's own data (like\n    // results.length or whatever).\n    hidden: !isExpanded,\n    tabIndex: -1,\n    children,\n  };\n\n  return portal ? (\n    <Popover\n      {...props}\n      ref={ref}\n      position={position}\n      targetRef={inputRef}\n      {...sharedProps}\n    />\n  ) : (\n    <div ref={ref} {...props} {...sharedProps} />\n  );\n});\n\nif (__DEV__) {\n  ComboboxPopover.displayName = \"ComboboxPopover\";\n}\n\n/**\n * @see Docs https://reach.tech/combobox#comboboxpopover-props\n */\nexport type ComboboxPopoverProps = {\n  /**\n   * If you pass `<ComboboxPopover portal={false} />` the popover will not\n   * render inside of a portal, but in the same order as the React tree. This\n   * is mostly useful for styling the entire component together, like the pink\n   * focus outline in the example earlier in this page.\n   *\n   * @see Docs https://reach.tech/combobox#comboboxpopover-portal\n   */\n  portal?: boolean;\n};\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * ComboboxList\n *\n * Contains the `ComboboxOption` elements and sets up the proper aria attributes\n * for the list.\n *\n * @see Docs https://reach.tech/combobox#comboboxlist\n */\nexport const ComboboxList = forwardRefWithAs<ComboboxListProps, \"ul\">(\n  function ComboboxList(\n    {\n      // when true, and the list opens again, the option with a matching value\n      // will be automatically highlighted.\n      persistSelection = false,\n      as: Comp = \"ul\",\n      ...props\n    },\n    forwardedRef\n  ) {\n    const { persistSelectionRef, listboxId } = useContext(ComboboxContext);\n\n    if (persistSelection) {\n      persistSelectionRef.current = true;\n    }\n\n    return (\n      <Comp\n        role=\"listbox\"\n        {...props}\n        ref={forwardedRef}\n        data-reach-combobox-list=\"\"\n        id={listboxId}\n      />\n    );\n  }\n);\n\n/**\n * @see Docs https://reach.tech/combobox#comboboxlist-props\n */\nexport type ComboboxListProps = {\n  /**\n   * Defaults to false. When true and the list is opened, if an option's value\n   * matches the value in the input, it will automatically be highlighted and\n   * be the starting point for any keyboard navigation of the list.\n   *\n   * This allows you to treat a Combobox more like a `<select>` than an\n   * `<input/>`, but be mindful that the user is still able to put any\n   * arbitrary value into the input, so if the only valid values for the input\n   * are from the list, your app will need to do that validation on blur or\n   * submit of the form.\n   *\n   * @see Docs https://reach.tech/combobox#comboboxlist-persistselection\n   */\n  persistSelection?: boolean;\n};\n\nif (__DEV__) {\n  ComboboxList.displayName = \"ComboboxList\";\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * ComboboxOption\n *\n * An option that is suggested to the user as they interact with the combobox.\n *\n * @see Docs https://reach.tech/combobox#comboboxoption\n */\nexport const ComboboxOption = forwardRefWithAs<ComboboxOptionProps, \"li\">(\n  function ComboboxOption(\n    { as: Comp = \"li\", children, value, onClick, ...props },\n    forwardedRef: React.Ref<any>\n  ) {\n    const {\n      onSelect,\n      data: { navigationValue },\n      transition,\n    } = useContext(ComboboxContext);\n\n    let ownRef = useRef<HTMLElement | null>(null);\n    let ref = useForkedRef(forwardedRef, ownRef);\n\n    let index = useDescendant(\n      {\n        element: ownRef.current!,\n        value,\n      },\n      ComboboxDescendantContext\n    );\n\n    const isActive = navigationValue === value;\n\n    const handleClick = () => {\n      onSelect && onSelect(value);\n      transition(SELECT_WITH_CLICK, { value });\n    };\n\n    return (\n      <OptionContext.Provider value={{ value, index }}>\n        <Comp\n          aria-selected={isActive}\n          role=\"option\"\n          {...props}\n          data-reach-combobox-option=\"\"\n          ref={ref}\n          id={String(makeHash(value))}\n          data-highlighted={isActive ? \"\" : undefined}\n          // Without this the menu will close from `onBlur`, but with it the\n          // element can be `document.activeElement` and then our focus checks in\n          // onBlur will work as intended\n          tabIndex={-1}\n          onClick={wrapEvent(onClick, handleClick)}\n          children={children || <ComboboxOptionText />}\n        />\n      </OptionContext.Provider>\n    );\n  }\n);\n\n/**\n * @see Docs https://reach.tech/combobox#comboboxoption-props\n */\nexport type ComboboxOptionProps = {\n  /**\n   * Optional. If omitted, the `value` will be used as the children like as:\n   * `<ComboboxOption value=\"Seattle, Tacoma, Washington\" />`. But if you need\n   * to control a bit more, you can put whatever children you want, but make\n   * sure to render a `ComboboxOptionText` as well, so the value is still\n   * displayed with the text highlighting on the matched portions.\n   *\n   * @example\n   *   <ComboboxOption value=\"Apple\" />\n   *     üçé <ComboboxOptionText />\n   *   </ComboboxOption>\n   *\n   * @see Docs https://reach.tech/combobox#comboboxoption-children\n   */\n  children?: React.ReactNode;\n  /**\n   * The value to match against when suggesting.\n   *\n   * @see Docs https://reach.tech/combobox#comboboxoption-value\n   */\n  value: string;\n};\n\nif (__DEV__) {\n  ComboboxOption.displayName = \"ComboboxOption\";\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * ComboboxOptionText\n *\n * Renders the value of a `ComboboxOption` as text but with spans wrapping the\n * matching and non-matching segments of text.\n *\n * We don't forwardRef or spread props because we render multiple spans or null,\n * should be fine ü§ô\n *\n * @example\n *   <ComboboxOption value=\"Seattle\">\n *     üåß <ComboboxOptionText />\n *   </ComboboxOption>\n *\n * @see Docs https://reach.tech/combobox#comboboxoptiontext\n */\nexport function ComboboxOptionText() {\n  const { value } = useContext(OptionContext);\n  const {\n    data: { value: contextValue },\n  } = useContext(ComboboxContext);\n\n  const results = useMemo(\n    () =>\n      findAll({\n        searchWords: escapeRegexp(contextValue || \"\").split(/\\s+/),\n        textToHighlight: value,\n      }),\n    [contextValue, value]\n  );\n\n  return (\n    <>\n      {results.length\n        ? results.map((result, index) => {\n            const str = value.slice(result.start, result.end);\n            return (\n              <span\n                key={index}\n                data-user-value={result.highlight ? true : undefined}\n                data-suggested-value={result.highlight ? undefined : true}\n              >\n                {str}\n              </span>\n            );\n          })\n        : value}\n    </>\n  );\n}\n\nif (__DEV__) {\n  ComboboxOptionText.displayName = \"ComboboxOptionText\";\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * ComboboxButton\n */\nexport const ComboboxButton = forwardRefWithAs<{}, \"button\">(\n  function ComboboxButton(\n    { as: Comp = \"button\", onClick, onKeyDown, ...props },\n    forwardedRef\n  ) {\n    const { transition, state, buttonRef, listboxId, isExpanded } = useContext(\n      ComboboxContext\n    );\n    const ref = useForkedRef(buttonRef, forwardedRef);\n\n    const handleKeyDown = useKeyDown();\n\n    const handleClick = () => {\n      if (state === IDLE) {\n        transition(OPEN_WITH_BUTTON);\n      } else {\n        transition(CLOSE_WITH_BUTTON);\n      }\n    };\n\n    return (\n      <Comp\n        aria-controls={listboxId}\n        aria-haspopup=\"listbox\"\n        aria-expanded={isExpanded}\n        {...props}\n        data-reach-combobox-button=\"\"\n        ref={ref}\n        onClick={wrapEvent(onClick, handleClick)}\n        onKeyDown={wrapEvent(onKeyDown, handleKeyDown)}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  ComboboxButton.displayName = \"ComboboxButton\";\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Move focus back to the input if we start navigating w/ the\n * keyboard after focus has moved to any focusable content in\n * the popup.\n *\n * @param lastEventType\n * @param inputRef\n */\nfunction useFocusManagement(\n  lastEventType: MachineEventType | undefined,\n  inputRef: React.MutableRefObject<any>\n) {\n  // useLayoutEffect so that the cursor goes to the end of the input instead\n  // of awkwardly at the beginning, unclear to me why ü§∑‚Äç‚ôÇÔ∏è\n  //\n  // Should be safe to use here since we're just focusing an input.\n  useIsomorphicLayoutEffect(() => {\n    if (\n      lastEventType === NAVIGATE ||\n      lastEventType === ESCAPE ||\n      lastEventType === SELECT_WITH_CLICK ||\n      lastEventType === OPEN_WITH_BUTTON\n    ) {\n      inputRef.current.focus();\n    }\n  }, [inputRef, lastEventType]);\n}\n\n/**\n * We want the same events when the input or the popup have focus (HOW COOL ARE\n * HOOKS BTW?) This is probably the hairiest piece but it's not bad.\n */\nfunction useKeyDown() {\n  const {\n    data: { navigationValue },\n    onSelect,\n    state,\n    transition,\n    autocompletePropRef,\n    persistSelectionRef,\n  } = useContext(ComboboxContext);\n\n  const options = useDescendants(ComboboxDescendantContext);\n\n  return function handleKeyDown(event: React.KeyboardEvent) {\n    let index = options.findIndex(({ value }) => value === navigationValue);\n\n    function getNextOption() {\n      let atBottom = index === options.length - 1;\n      if (atBottom) {\n        if (autocompletePropRef.current) {\n          // Go back to the value the user has typed because we are\n          // autocompleting and they need to be able to get back to what\n          // they had typed w/o having to backspace out.\n          return null;\n        } else {\n          // cycle through\n          return getFirstOption();\n        }\n      } else {\n        // Go to the next item in the list\n        return options[(index + 1) % options.length];\n      }\n    }\n\n    function getPreviousOption() {\n      let atTop = index === 0;\n      if (atTop) {\n        if (autocompletePropRef.current) {\n          // Go back to the value the user has typed because we are\n          // autocompleting and they need to be able to get back to what\n          // they had typed w/o having to backspace out.\n          return null;\n        } else {\n          // cycle through\n          return getLastOption();\n        }\n      } else if (index === -1) {\n        // displaying the user's value, so go select the last one\n        return getLastOption();\n      } else {\n        // normal case, select previous\n        return options[(index - 1 + options.length) % options.length];\n      }\n    }\n\n    function getFirstOption() {\n      return options[0];\n    }\n\n    function getLastOption() {\n      return options[options.length - 1];\n    }\n\n    switch (event.key) {\n      case \"ArrowDown\":\n        // Don't scroll the page\n        event.preventDefault();\n        if (!options || !options.length) {\n          return;\n        }\n\n        if (state === IDLE) {\n          // Opening a closed list\n          transition(NAVIGATE, {\n            persistSelection: persistSelectionRef.current,\n          });\n        } else {\n          let next = getNextOption();\n          transition(NAVIGATE, { value: next ? next.value : null });\n        }\n        break;\n\n      // A lot of duplicate code with ArrowDown up next, I'm already over it.\n      case \"ArrowUp\":\n        // Don't scroll the page\n        event.preventDefault();\n        if (!options || options.length === 0) {\n          return;\n        }\n\n        if (state === IDLE) {\n          transition(NAVIGATE);\n        } else {\n          let prev = getPreviousOption();\n          transition(NAVIGATE, { value: prev ? prev.value : null });\n        }\n        break;\n\n      case \"Home\":\n      case \"PageUp\":\n        // Don't scroll the page\n        event.preventDefault();\n        if (!options || options.length === 0) {\n          return;\n        }\n\n        if (state === IDLE) {\n          transition(NAVIGATE);\n        } else {\n          transition(NAVIGATE, { value: getFirstOption().value });\n        }\n        break;\n\n      case \"End\":\n      case \"PageDown\":\n        // Don't scroll the page\n        event.preventDefault();\n        if (!options || options.length === 0) {\n          return;\n        }\n\n        if (state === IDLE) {\n          transition(NAVIGATE);\n        } else {\n          transition(NAVIGATE, { value: getLastOption().value });\n        }\n        break;\n\n      case \"Escape\":\n        if (state !== IDLE) {\n          transition(ESCAPE);\n        }\n        break;\n      case \"Enter\":\n        if (state === NAVIGATING && navigationValue !== null) {\n          // don't want to submit forms\n          event.preventDefault();\n          onSelect && onSelect(navigationValue);\n          transition(SELECT_WITH_KEYBOARD);\n        }\n        break;\n    }\n  };\n}\n\nfunction useBlur() {\n  const { state, transition, popoverRef, inputRef, buttonRef } = useContext(\n    ComboboxContext\n  );\n\n  return function handleBlur() {\n    let ownerDocument = getOwnerDocument(inputRef.current) || document;\n    requestAnimationFrame(() => {\n      // we on want to close only if focus propss outside the combobox\n      if (\n        ownerDocument.activeElement !== inputRef.current &&\n        ownerDocument.activeElement !== buttonRef.current &&\n        popoverRef.current\n      ) {\n        if (popoverRef.current.contains(ownerDocument.activeElement)) {\n          // focus landed inside the combobox, keep it open\n          if (state !== INTERACTING) {\n            transition(INTERACT);\n          }\n        } else {\n          // focus landed outside the combobox, close it.\n          transition(BLUR);\n        }\n      }\n    });\n  };\n}\n\n/**\n * This manages transitions between states with a built in reducer to manage\n * the data that goes with those transitions.\n *\n * @param chart\n * @param reducer\n * @param initialData\n */\nfunction useReducerMachine(\n  chart: StateChart,\n  reducer: Reducer,\n  initialData: Partial<StateData>\n): [State, StateData, Transition] {\n  const [state, setState] = useState(chart.initial);\n  const [data, dispatch] = useReducer(reducer, initialData);\n\n  const transition: Transition = (event, payload = {}) => {\n    const currentState = chart.states[state];\n    const nextState = currentState && currentState.on[event];\n    if (nextState) {\n      dispatch({ type: event, state, nextState: state, ...payload });\n      setState(nextState);\n      return;\n    }\n  };\n\n  return [state, data, transition];\n}\n\n/**\n * We don't want to track the active descendant with indexes because nothing is\n * more annoying in a combobox than having it change values RIGHT AS YOU HIT\n * ENTER. That only happens if you use the index as your data, rather than\n * *your data as your data*. We use this to generate a unique ID based on the\n * value of each item.  This function is short, sweet, and good enough‚Ñ¢ (I also\n * don't know how it works, tbqh)\n *\n * @see https://stackoverflow.com/questions/6122571/simple-non-secure-hash-function-for-javascript\n * @param str\n */\nconst makeHash = (str: string) => {\n  let hash = 0;\n  if (str.length === 0) {\n    return hash;\n  }\n  for (let i = 0; i < str.length; i++) {\n    var char = str.charCodeAt(i);\n    hash = (hash << 5) - hash + char;\n    hash = hash & hash;\n  }\n  return hash;\n};\n\n/**\n * Escape regexp special characters in `str`\n *\n * @see https://github.com/component/escape-regexp/blob/5ce923c1510c9802b3da972c90b6861dd2829b6b/index.js\n * @param str\n */\n\nexport function escapeRegexp(str: string) {\n  return String(str).replace(/([.*+?=^!:${}()|[\\]/\\\\])/g, \"\\\\$1\");\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A hook that exposes data for a given `Combobox` component to its descendants.\n *\n * @see Docs https://reach.tech/combobox#usecomboboxcontext\n */\nexport function useComboboxContext(): ComboboxContextValue {\n  let { isExpanded, comboboxId } = useContext(ComboboxContext);\n  return useMemo(\n    () => ({\n      id: comboboxId,\n      isExpanded,\n    }),\n    [comboboxId, isExpanded]\n  );\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Well alright, you made it all the way here to like 1100 lines of code (geez,\n// what the heck?). Have a great day :D\n\n////////////////////////////////////////////////////////////////////////////////\n// Types\n\nexport type ComboboxContextValue = {\n  id: string | undefined;\n  isExpanded: boolean;\n};\n\ntype ComboboxDescendant = Descendant<HTMLElement> & {\n  value: ComboboxValue;\n};\n\ninterface ComboboxOptionContextValue {\n  value: ComboboxValue;\n  index: number;\n}\n\ninterface InternalComboboxContextValue {\n  ariaLabel?: string;\n  ariaLabelledby?: string;\n  autocompletePropRef: React.MutableRefObject<any>;\n  buttonRef: React.MutableRefObject<any>;\n  comboboxId: string | undefined;\n  data: StateData;\n  inputRef: React.MutableRefObject<any>;\n  isExpanded: boolean;\n  listboxId: string;\n  onSelect(value?: ComboboxValue): any;\n  openOnFocus: boolean;\n  persistSelectionRef: React.MutableRefObject<any>;\n  popoverRef: React.MutableRefObject<any>;\n  state: State;\n  transition: Transition;\n}\n\ntype Transition = (event: MachineEventType, payload?: any) => any;\n\ntype ComboboxValue = string;\n\ntype State = \"IDLE\" | \"SUGGESTING\" | \"NAVIGATING\" | \"INTERACTING\";\n\ntype MachineEventType =\n  | \"CLEAR\"\n  | \"CHANGE\"\n  | \"INITIAL_CHANGE\"\n  | \"NAVIGATE\"\n  | \"SELECT_WITH_KEYBOARD\"\n  | \"SELECT_WITH_CLICK\"\n  | \"ESCAPE\"\n  | \"BLUR\"\n  | \"INTERACT\"\n  | \"FOCUS\"\n  | \"OPEN_WITH_BUTTON\"\n  | \"CLOSE_WITH_BUTTON\";\n\ninterface StateChart {\n  initial: State;\n  states: {\n    [key in State]?: {\n      on: {\n        [key in MachineEventType]?: State;\n      };\n    };\n  };\n}\n\ntype StateData = {\n  lastEventType?: MachineEventType;\n  navigationValue?: ComboboxValue | null;\n  value?: ComboboxValue | null;\n};\n\ntype MachineEvent =\n  | { type: \"BLUR\" }\n  | { type: \"CHANGE\"; value: ComboboxValue }\n  | { type: \"INITIAL_CHANGE\"; value: ComboboxValue }\n  | { type: \"CLEAR\" }\n  | { type: \"CLOSE_WITH_BUTTON\" }\n  | { type: \"ESCAPE\" }\n  | { type: \"FOCUS\" }\n  | { type: \"INTERACT\" }\n  | {\n      type: \"NAVIGATE\";\n      persistSelection?: React.MutableRefObject<any>;\n      value: ComboboxValue;\n    }\n  | { type: \"OPEN_WITH_BUTTON\" }\n  | {\n      type: \"SELECT_WITH_CLICK\";\n      value: ComboboxValue;\n    }\n  | {\n      type: \"SELECT_WITH_KEYBOARD\";\n    };\n\ntype Reducer = (data: StateData, event: MachineEvent) => StateData;\n","let props: (keyof DOMRect)[] = [\n\t\"bottom\",\n\t\"height\",\n\t\"left\",\n\t\"right\",\n\t\"top\",\n\t\"width\",\n];\n\nlet rectChanged = (a: DOMRect = {} as DOMRect, b: DOMRect = {} as DOMRect) =>\n\tprops.some((prop) => a[prop] !== b[prop]);\n\nlet observedNodes = new Map<Element, RectProps>();\nlet rafId: number;\n\nlet run = () => {\n\tconst changedStates: RectProps[] = [];\n\tobservedNodes.forEach((state, node) => {\n\t\tlet newRect = node.getBoundingClientRect();\n\t\tif (rectChanged(newRect, state.rect)) {\n\t\t\tstate.rect = newRect;\n\t\t\tchangedStates.push(state);\n\t\t}\n\t});\n\n\tchangedStates.forEach((state) => {\n\t\tstate.callbacks.forEach((cb) => cb(state.rect));\n\t});\n\n\trafId = window.requestAnimationFrame(run);\n};\n\nexport default function observeRect(\n\tnode: Element,\n\tcb: (rect: DOMRect) => void\n) {\n\treturn {\n\t\tobserve() {\n\t\t\tlet wasEmpty = observedNodes.size === 0;\n\t\t\tif (observedNodes.has(node)) {\n\t\t\t\tobservedNodes.get(node)!.callbacks.push(cb);\n\t\t\t} else {\n\t\t\t\tobservedNodes.set(node, {\n\t\t\t\t\trect: undefined,\n\t\t\t\t\thasRectChanged: false,\n\t\t\t\t\tcallbacks: [cb],\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (wasEmpty) run();\n\t\t},\n\n\t\tunobserve() {\n\t\t\tlet state = observedNodes.get(node);\n\t\t\tif (state) {\n\t\t\t\t// Remove the callback\n\t\t\t\tconst index = state.callbacks.indexOf(cb);\n\t\t\t\tif (index >= 0) state.callbacks.splice(index, 1);\n\n\t\t\t\t// Remove the node reference\n\t\t\t\tif (!state.callbacks.length) observedNodes.delete(node);\n\n\t\t\t\t// Stop the loop\n\t\t\t\tif (!observedNodes.size) cancelAnimationFrame(rafId);\n\t\t\t}\n\t\t},\n\t};\n}\n\nexport type PartialRect = Partial<DOMRect>;\n\nexport type RectProps = {\n\trect: DOMRect | undefined;\n\thasRectChanged: boolean;\n\tcallbacks: Function[];\n};\n","/* global google */\n/* eslint-disable filenames/match-regex */\nimport { Cluster } from './Cluster'\n\nimport { ClusterIconStyle, ClusterIconInfo } from './types'\n\nexport class ClusterIcon {\n  cluster: Cluster\n  className: string\n  styles: ClusterIconStyle[]\n  center: google.maps.LatLng | undefined\n  div: HTMLDivElement | null\n  sums: ClusterIconInfo | null\n  visible: boolean\n  url: string\n  height: number\n  width: number\n  anchorText: number[]\n  anchorIcon: number[]\n  textColor: string\n  textSize: number\n  textDecoration: string\n  fontWeight: string\n  fontStyle: string\n  fontFamily: string\n  backgroundPosition: string\n\n  boundsChangedListener: google.maps.MapsEventListener | null\n\n  constructor(cluster: Cluster, styles: ClusterIconStyle[]) {\n    cluster.getClusterer().extend(ClusterIcon, google.maps.OverlayView)\n    this.cluster = cluster\n    this.className = this.cluster.getClusterer().getClusterClass()\n    this.styles = styles\n    this.center = undefined\n    this.div = null\n    this.sums = null\n    this.visible = false\n    this.boundsChangedListener = null\n    this.url = ''\n    this.height = 0\n    this.width = 0\n    this.anchorText = [0, 0]\n    this.anchorIcon = [0, 0]\n    this.textColor = 'black'\n    this.textSize = 11\n    this.textDecoration = 'none'\n    this.fontWeight = 'bold'\n    this.fontStyle = 'normal'\n    this.fontFamily = 'Arial,sans-serif'\n    this.backgroundPosition = '0 0'\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.setMap(cluster.getMap()) // Note: this causes onAdd to be called\n  }\n\n  onAdd() {\n    let cMouseDownInCluster: boolean\n    let cDraggingMapByCluster: boolean\n\n    this.div = document.createElement('div')\n    this.div.className = this.className\n    if (this.visible) {\n      this.show()\n    }\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.getPanes().overlayMouseTarget.appendChild(this.div)\n\n    // Fix for Issue 157\n    this.boundsChangedListener = google.maps.event.addListener(\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      this.getMap(),\n      'boundschanged',\n      function boundsChanged() {\n        cDraggingMapByCluster = cMouseDownInCluster\n      }\n    )\n\n    google.maps.event.addDomListener(this.div, 'mousedown', function onMouseDown() {\n      cMouseDownInCluster = true\n      cDraggingMapByCluster = false\n    })\n\n    // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n    google.maps.event.addDomListener(\n      this.div,\n      'click',\n      // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n      (event: Event) => {\n        cMouseDownInCluster = false\n\n        if (!cDraggingMapByCluster) {\n          const markerClusterer = this.cluster.getClusterer()\n\n          /**\n           * This event is fired when a cluster marker is clicked.\n           * @name MarkerClusterer#click\n           * @param {Cluster} c The cluster that was clicked.\n           * @event\n           */\n          google.maps.event.trigger(markerClusterer, 'click', this.cluster)\n          google.maps.event.trigger(markerClusterer, 'clusterclick', this.cluster) // deprecated name\n\n          // The default click handler follows. Disable it by setting\n          // the zoomOnClick property to false.\n          if (markerClusterer.getZoomOnClick()) {\n            // Zoom into the cluster.\n            const maxZoom = markerClusterer.getMaxZoom()\n\n            const bounds = this.cluster.getBounds()\n\n            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n            // @ts-ignore\n            markerClusterer.getMap().fitBounds(bounds)\n\n            // There is a fix for Issue 170 here:\n            setTimeout(function timeout() {\n              // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n              // @ts-ignore\n              markerClusterer.getMap().fitBounds(bounds)\n\n              // Don't zoom beyond the max zoom level\n              // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n              // @ts-ignore\n              if (maxZoom !== null && markerClusterer.getMap().getZoom() > maxZoom) {\n                // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n                // @ts-ignore\n                markerClusterer.getMap().setZoom(maxZoom + 1)\n              }\n            }, 100)\n          }\n\n          // Prevent event propagation to the map:\n          event.cancelBubble = true\n\n          if (event.stopPropagation) {\n            event.stopPropagation()\n          }\n        }\n      }\n    )\n\n    google.maps.event.addDomListener(\n      this.div,\n      'mouseover',\n      // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n      () => {\n        /**\n         * This event is fired when the mouse moves over a cluster marker.\n         * @name MarkerClusterer#mouseover\n         * @param {Cluster} c The cluster that the mouse moved over.\n         * @event\n         */\n        google.maps.event.trigger(this.cluster.getClusterer(), 'mouseover', this.cluster)\n      }\n    )\n\n    // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n    google.maps.event.addDomListener(\n      this.div,\n      'mouseout',\n      // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n      () => {\n        /**\n         * This event is fired when the mouse moves out of a cluster marker.\n         * @name MarkerClusterer#mouseout\n         * @param {Cluster} c The cluster that the mouse moved out of.\n         * @event\n         */\n        google.maps.event.trigger(this.cluster.getClusterer(), 'mouseout', this.cluster)\n      }\n    )\n  }\n\n  onRemove() {\n    if (this.div && this.div.parentNode) {\n      this.hide()\n\n      if (this.boundsChangedListener !== null) {\n        google.maps.event.removeListener(this.boundsChangedListener)\n      }\n\n      google.maps.event.clearInstanceListeners(this.div)\n\n      this.div.parentNode.removeChild(this.div)\n\n      this.div = null\n    }\n  }\n\n  draw() {\n    if (this.visible && this.div !== null && this.center) {\n      const { x, y } = this.getPosFromLatLng(this.center)\n\n      this.div.style.top = y + 'px'\n      this.div.style.left = x + 'px'\n    }\n  }\n\n  hide() {\n    if (this.div) {\n      this.div.style.display = 'none'\n    }\n\n    this.visible = false\n  }\n\n  show() {\n    if (this.div && this.center) {\n      let img = '',\n        divTitle = ''\n\n      // NOTE: values must be specified in px units\n      const bp = this.backgroundPosition.split(' ')\n\n      const spriteH = parseInt(bp[0].replace(/^\\s+|\\s+$/g, ''), 10)\n\n      const spriteV = parseInt(bp[1].replace(/^\\s+|\\s+$/g, ''), 10)\n\n      const pos = this.getPosFromLatLng(this.center)\n\n      if (this.sums === null || typeof this.sums.title === 'undefined' || this.sums.title === '') {\n        divTitle = this.cluster.getClusterer().getTitle()\n      } else {\n        divTitle = this.sums.title\n      }\n\n      this.div.style.cssText = this.createCss(pos)\n\n      img =\n        \"<img alt='\" +\n        divTitle +\n        \"' src='\" +\n        this.url +\n        \"' style='position: absolute; top: \" +\n        spriteV +\n        'px; left: ' +\n        spriteH +\n        'px; '\n\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      //@ts-ignore\n      if (!this.cluster.getClusterer().enableRetinaIcons) {\n        img +=\n          'clip: rect(' +\n          -1 * spriteV +\n          'px, ' +\n          (-1 * spriteH + this.width) +\n          'px, ' +\n          (-1 * spriteV + this.height) +\n          'px, ' +\n          -1 * spriteH +\n          'px);'\n      }\n\n      img += \"'>\"\n\n      this.div.innerHTML =\n        img +\n        \"<div style='\" +\n        'position: absolute;' +\n        'top: ' +\n        this.anchorText[0] +\n        'px;' +\n        'left: ' +\n        this.anchorText[1] +\n        'px;' +\n        'color: ' +\n        this.textColor +\n        ';' +\n        'font-size: ' +\n        this.textSize +\n        'px;' +\n        'font-family: ' +\n        this.fontFamily +\n        ';' +\n        'font-weight: ' +\n        this.fontWeight +\n        ';' +\n        'font-style: ' +\n        this.fontStyle +\n        ';' +\n        'text-decoration: ' +\n        this.textDecoration +\n        ';' +\n        'text-align: center;' +\n        'width: ' +\n        this.width +\n        'px;' +\n        'line-height:' +\n        this.height +\n        'px;' +\n        \"'>\" +\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.sums.text +\n        '</div>'\n\n      this.div.title = divTitle\n\n      this.div.style.display = ''\n    }\n\n    this.visible = true\n  }\n\n  useStyle(sums: ClusterIconInfo) {\n    this.sums = sums\n\n    const style = this.styles[Math.min(this.styles.length - 1, Math.max(0, sums.index - 1))]\n\n    this.url = style.url\n    this.height = style.height\n    this.width = style.width\n    this.anchorText = style.anchorText || [0, 0]\n    this.anchorIcon = style.anchorIcon || [this.height / 2, this.width / 2]\n\n    this.textColor = style.textColor || 'black'\n\n    this.textSize = style.textSize || 11\n\n    this.textDecoration = style.textDecoration || 'none'\n\n    this.fontWeight = style.fontWeight || 'bold'\n\n    this.fontStyle = style.fontStyle || 'normal'\n\n    this.fontFamily = style.fontFamily || 'Arial,sans-serif'\n\n    this.backgroundPosition = style.backgroundPosition || '0 0'\n  }\n\n  setCenter(center: google.maps.LatLng) {\n    this.center = center\n  }\n\n  createCss(pos: google.maps.Point): string {\n    const style = []\n\n    style.push('cursor: pointer;')\n\n    style.push('position: absolute; top: ' + pos.y + 'px; left: ' + pos.x + 'px;')\n\n    style.push('width: ' + this.width + 'px; height: ' + this.height + 'px;')\n\n    return style.join('')\n  }\n\n  getPosFromLatLng(latlng: google.maps.LatLng): google.maps.Point {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    const pos = this.getProjection().fromLatLngToDivPixel(latlng)\n\n    pos.x -= this.anchorIcon[1]\n\n    pos.y -= this.anchorIcon[0]\n\n    // pos.x = pos.x\n\n    // pos.y = pos.y\n\n    return pos\n  }\n}\n","/* global google */\n/* eslint-disable filenames/match-regex */\nimport { Clusterer } from './Clusterer'\n\nimport { ClusterIcon } from './ClusterIcon'\n\nimport { MarkerExtended } from './types'\n\nexport class Cluster {\n  markerClusterer: Clusterer\n  map: google.maps.Map | google.maps.StreetViewPanorama\n  gridSize: number\n  minClusterSize: number\n  averageCenter: boolean\n  markers: MarkerExtended[]\n  center: google.maps.LatLng | undefined\n  bounds: google.maps.LatLngBounds | null\n  clusterIcon: ClusterIcon\n\n  constructor(markerClusterer: Clusterer) {\n    this.markerClusterer = markerClusterer\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.map = this.markerClusterer.getMap()\n\n    this.gridSize = this.markerClusterer.getGridSize()\n\n    this.minClusterSize = this.markerClusterer.getMinimumClusterSize()\n\n    this.averageCenter = this.markerClusterer.getAverageCenter()\n\n    this.markers = []\n\n    this.center = undefined\n\n    this.bounds = null\n\n    this.clusterIcon = new ClusterIcon(this, this.markerClusterer.getStyles())\n  }\n\n  getSize(): number {\n    return this.markers.length\n  }\n\n  getMarkers(): MarkerExtended[] {\n    return this.markers\n  }\n\n  getCenter(): google.maps.LatLng | undefined {\n    return this.center\n  }\n\n  getMap(): google.maps.Map | google.maps.StreetViewPanorama {\n    return this.map\n  }\n\n  getClusterer(): Clusterer {\n    return this.markerClusterer\n  }\n\n  getBounds(): google.maps.LatLngBounds {\n    const bounds = new google.maps.LatLngBounds(this.center, this.center)\n\n    const markers = this.getMarkers()\n\n    for (let i = 0; i < markers.length; i++) {\n      const position = markers[i].getPosition()\n\n      if (position) {\n        bounds.extend(position)\n      }\n    }\n\n    return bounds\n  }\n\n  remove() {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.clusterIcon.setMap(null)\n\n    this.markers = []\n\n    delete this.markers\n  }\n\n  addMarker(marker: MarkerExtended): boolean {\n    if (this.isMarkerAlreadyAdded(marker)) {\n      return false\n    }\n\n    if (!this.center) {\n      const position = marker.getPosition()\n\n      if (position) {\n        this.center = position\n\n        this.calculateBounds()\n      }\n    } else {\n      if (this.averageCenter) {\n        const position = marker.getPosition()\n\n        if (position) {\n          const length = this.markers.length + 1\n\n          this.center = new google.maps.LatLng(\n            (this.center.lat() * (length - 1) + position.lat()) / length,\n            (this.center.lng() * (length - 1) + position.lng()) / length\n          )\n\n          this.calculateBounds()\n        }\n      }\n    }\n\n    marker.isAdded = true\n\n    this.markers.push(marker)\n\n    const mCount = this.markers.length\n\n    const maxZoom = this.markerClusterer.getMaxZoom()\n\n    if (maxZoom !== null && this.map.getZoom() > maxZoom) {\n      // Zoomed in past max zoom, so show the marker.\n      if (marker.getMap() !== this.map) {\n        marker.setMap(this.map)\n      }\n    } else if (mCount < this.minClusterSize) {\n      // Min cluster size not reached so show the marker.\n      if (marker.getMap() !== this.map) {\n        marker.setMap(this.map)\n      }\n    } else if (mCount === this.minClusterSize) {\n      // Hide the markers that were showing.\n      for (let i = 0; i < mCount; i++) {\n        this.markers[i].setMap(null)\n      }\n    } else {\n      marker.setMap(null)\n    }\n\n    return true\n  }\n\n  isMarkerInClusterBounds(marker: MarkerExtended): boolean {\n    if (this.bounds !== null) {\n      const position = marker.getPosition()\n\n      if (position) {\n        return this.bounds.contains(position)\n      }\n    }\n\n    return false\n  }\n\n  calculateBounds() {\n    this.bounds = this.markerClusterer.getExtendedBounds(\n      new google.maps.LatLngBounds(this.center, this.center)\n    )\n  }\n\n  updateIcon() {\n    const mCount = this.markers.length\n\n    const maxZoom = this.markerClusterer.getMaxZoom()\n\n    if (maxZoom !== null && this.map.getZoom() > maxZoom) {\n      this.clusterIcon.hide()\n\n      return\n    }\n\n    if (mCount < this.minClusterSize) {\n      // Min cluster size not yet reached.\n      this.clusterIcon.hide()\n\n      return\n    }\n\n    if (this.center) {\n      this.clusterIcon.setCenter(this.center)\n    }\n\n    this.clusterIcon.useStyle(\n      this.markerClusterer.getCalculator()(this.markers, this.markerClusterer.getStyles().length)\n    )\n\n    this.clusterIcon.show()\n  }\n\n  isMarkerAlreadyAdded(marker: MarkerExtended): boolean {\n    if (this.markers.includes) {\n      return this.markers.includes(marker)\n    } else {\n      for (let i = 0; i < this.markers.length; i++) {\n        if (marker === this.markers[i]) {\n          return true\n        }\n      }\n    }\n\n    return false\n  }\n}\n","/* global google */\n/* eslint-disable filenames/match-regex */\nimport { Cluster } from './Cluster'\n\nimport {\n  MarkerExtended,\n  ClustererOptions,\n  ClusterIconStyle,\n  TCalculator,\n  ClusterIconInfo,\n} from './types'\n\nconst CALCULATOR = function CALCULATOR(\n  markers: MarkerExtended[],\n  numStyles: number\n): ClusterIconInfo {\n  let index = 0\n\n  const title = ''\n\n  const count = markers.length.toString()\n\n  let dv: string | number = count\n\n  while (dv !== 0) {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    dv = parseInt(dv, 10) / 10\n\n    index++\n  }\n\n  index = Math.min(index, numStyles)\n\n  return {\n    text: count,\n    index: index,\n    title: title,\n  }\n}\n\nconst BATCH_SIZE = 2000\n\nconst BATCH_SIZE_IE = 500\n\nconst IMAGE_PATH =\n  'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m'\n\nconst IMAGE_EXTENSION = 'png'\n\nconst IMAGE_SIZES = [53, 56, 66, 78, 90]\n\nconst CLUSTERER_CLASS = 'cluster'\n\nexport class Clusterer {\n  markers: MarkerExtended[]\n  clusters: Cluster[]\n  listeners: google.maps.MapsEventListener[]\n  activeMap: google.maps.Map | google.maps.StreetViewPanorama | null\n  ready: boolean\n  gridSize: number\n  minClusterSize: number\n  maxZoom: number | null\n  styles: ClusterIconStyle[]\n  title: string\n  zoomOnClick: boolean\n  averageCenter: boolean\n  ignoreHidden: boolean\n  enableRetinaIcons: boolean\n  imagePath: string\n  imageExtension: string\n  imageSizes: number[]\n  calculator: TCalculator\n  batchSize: number\n  batchSizeIE: number\n  clusterClass: string\n  timerRefStatic: number | null\n\n  constructor(\n    map: google.maps.Map,\n    optMarkers: MarkerExtended[] = [],\n    optOptions: ClustererOptions = {}\n  ) {\n    this.extend(Clusterer, google.maps.OverlayView)\n\n    this.markers = []\n    this.clusters = []\n    this.listeners = []\n    this.activeMap = null\n    this.ready = false\n    this.gridSize = optOptions.gridSize || 60\n    this.minClusterSize = optOptions.minimumClusterSize || 2\n    this.maxZoom = optOptions.maxZoom || null\n    this.styles = optOptions.styles || []\n\n    this.title = optOptions.title || ''\n\n    this.zoomOnClick = true\n\n    if (optOptions.zoomOnClick !== undefined) {\n      this.zoomOnClick = optOptions.zoomOnClick\n    }\n\n    this.averageCenter = false\n\n    if (optOptions.averageCenter !== undefined) {\n      this.averageCenter = optOptions.averageCenter\n    }\n\n    this.ignoreHidden = false\n\n    if (optOptions.ignoreHidden !== undefined) {\n      this.ignoreHidden = optOptions.ignoreHidden\n    }\n\n    this.enableRetinaIcons = false\n\n    if (optOptions.enableRetinaIcons !== undefined) {\n      this.enableRetinaIcons = optOptions.enableRetinaIcons\n    }\n    this.imagePath = optOptions.imagePath || IMAGE_PATH\n\n    this.imageExtension = optOptions.imageExtension || IMAGE_EXTENSION\n\n    this.imageSizes = optOptions.imageSizes || IMAGE_SIZES\n\n    this.calculator = optOptions.calculator || CALCULATOR\n\n    this.batchSize = optOptions.batchSize || BATCH_SIZE\n\n    this.batchSizeIE = optOptions.batchSizeIE || BATCH_SIZE_IE\n\n    this.clusterClass = optOptions.clusterClass || CLUSTERER_CLASS\n\n    if (navigator.userAgent.toLowerCase().indexOf('msie') !== -1) {\n      // Try to avoid IE timeout when processing a huge number of markers:\n      this.batchSize = this.batchSizeIE\n    }\n\n    this.timerRefStatic = null\n\n    this.setupStyles()\n\n    this.addMarkers(optMarkers, true)\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.setMap(map) // Note: this causes onAdd to be called\n  }\n\n  onAdd() {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.activeMap = this.getMap()\n\n    this.ready = true\n\n    this.repaint()\n\n    // Add the map event listeners\n    this.listeners = [\n      google.maps.event.addListener(\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.getMap(),\n        'zoom_changed',\n        // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n        () => {\n          this.resetViewport(false)\n          // Workaround for this Google bug: when map is at level 0 and \"-\" of\n          // zoom slider is clicked, a \"zoom_changed\" event is fired even though\n          // the map doesn't zoom out any further. In this situation, no \"idle\"\n          // event is triggered so the cluster markers that have been removed\n          // do not get redrawn. Same goes for a zoom in at maxZoom.\n          if (\n            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n            // @ts-ignore\n            this.getMap().getZoom() === (this.get('minZoom') || 0) ||\n            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n            // @ts-ignore\n            this.getMap().getZoom() === this.get('maxZoom')\n          ) {\n            google.maps.event.trigger(this, 'idle')\n          }\n        }\n      ),\n      google.maps.event.addListener(\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.getMap(),\n        'idle',\n        // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n        () => {\n          this.redraw()\n        }\n      ),\n    ]\n  }\n\n  // eslint-disable-next-line @getify/proper-arrows/this\n  onRemove() {\n    // Put all the managed markers back on the map:\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].getMap() !== this.activeMap) {\n        this.markers[i].setMap(this.activeMap)\n      }\n    }\n\n    // Remove all clusters:\n    for (let i = 0; i < this.clusters.length; i++) {\n      this.clusters[i].remove()\n    }\n\n    this.clusters = []\n\n    // Remove map event listeners:\n    for (let i = 0; i < this.listeners.length; i++) {\n      google.maps.event.removeListener(this.listeners[i])\n    }\n\n    this.listeners = []\n\n    this.activeMap = null\n\n    this.ready = false\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  draw() {}\n\n  setupStyles() {\n    if (this.styles.length > 0) {\n      return\n    }\n\n    for (let i = 0; i < this.imageSizes.length; i++) {\n      this.styles.push({\n        url: this.imagePath + (i + 1) + '.' + this.imageExtension,\n        height: this.imageSizes[i],\n        width: this.imageSizes[i],\n      })\n    }\n  }\n\n  fitMapToMarkers() {\n    const markers = this.getMarkers()\n\n    const bounds = new google.maps.LatLngBounds()\n\n    for (let i = 0; i < markers.length; i++) {\n      const position = markers[i].getPosition()\n      if (position) {\n        bounds.extend(position)\n      }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.getMap().fitBounds(bounds)\n  }\n\n  getGridSize(): number {\n    return this.gridSize\n  }\n\n  setGridSize(gridSize: number) {\n    this.gridSize = gridSize\n  }\n\n  getMinimumClusterSize(): number {\n    return this.minClusterSize\n  }\n\n  setMinimumClusterSize(minimumClusterSize: number) {\n    this.minClusterSize = minimumClusterSize\n  }\n\n  getMaxZoom(): number | null {\n    return this.maxZoom\n  }\n\n  setMaxZoom(maxZoom: number) {\n    this.maxZoom = maxZoom\n  }\n\n  getStyles(): ClusterIconStyle[] {\n    return this.styles\n  }\n\n  setStyles(styles: ClusterIconStyle[]) {\n    this.styles = styles\n  }\n\n  getTitle(): string {\n    return this.title\n  }\n\n  setTitle(title: string) {\n    this.title = title\n  }\n\n  getZoomOnClick(): boolean {\n    return this.zoomOnClick\n  }\n\n  setZoomOnClick(zoomOnClick: boolean) {\n    this.zoomOnClick = zoomOnClick\n  }\n\n  getAverageCenter(): boolean {\n    return this.averageCenter\n  }\n\n  setAverageCenter(averageCenter: boolean) {\n    this.averageCenter = averageCenter\n  }\n\n  getIgnoreHidden(): boolean {\n    return this.ignoreHidden\n  }\n\n  setIgnoreHidden(ignoreHidden: boolean) {\n    this.ignoreHidden = ignoreHidden\n  }\n\n  getEnableRetinaIcons(): boolean {\n    return this.enableRetinaIcons\n  }\n\n  setEnableRetinaIcons(enableRetinaIcons: boolean) {\n    this.enableRetinaIcons = enableRetinaIcons\n  }\n\n  getImageExtension(): string {\n    return this.imageExtension\n  }\n\n  setImageExtension(imageExtension: string) {\n    this.imageExtension = imageExtension\n  }\n\n  getImagePath(): string {\n    return this.imagePath\n  }\n\n  setImagePath(imagePath: string) {\n    this.imagePath = imagePath\n  }\n\n  getImageSizes(): number[] {\n    return this.imageSizes\n  }\n\n  setImageSizes(imageSizes: number[]) {\n    this.imageSizes = imageSizes\n  }\n\n  getCalculator(): TCalculator {\n    return this.calculator\n  }\n\n  setCalculator(calculator: TCalculator) {\n    this.calculator = calculator\n  }\n\n  getBatchSizeIE(): number {\n    return this.batchSizeIE\n  }\n\n  setBatchSizeIE(batchSizeIE: number) {\n    this.batchSizeIE = batchSizeIE\n  }\n\n  getClusterClass(): string {\n    return this.clusterClass\n  }\n\n  setClusterClass(clusterClass: string) {\n    this.clusterClass = clusterClass\n  }\n\n  getMarkers(): MarkerExtended[] {\n    return this.markers\n  }\n\n  getTotalMarkers(): number {\n    return this.markers.length\n  }\n\n  getClusters(): Cluster[] {\n    return this.clusters\n  }\n\n  getTotalClusters(): number {\n    return this.clusters.length\n  }\n\n  addMarker(marker: MarkerExtended, optNoDraw: boolean) {\n    this.pushMarkerTo(marker)\n\n    if (!optNoDraw) {\n      this.redraw()\n    }\n  }\n\n  addMarkers(markers: MarkerExtended[], optNoDraw: boolean) {\n    for (const key in markers) {\n      if (markers.hasOwnProperty(key)) {\n        this.pushMarkerTo(markers[key])\n      }\n    }\n\n    if (!optNoDraw) {\n      this.redraw()\n    }\n  }\n\n  pushMarkerTo(marker: MarkerExtended) {\n    // If the marker is draggable add a listener so we can update the clusters on the dragend:\n    if (marker.getDraggable()) {\n      // eslint-disable-next-line @getify/proper-arrows/name, @getify/proper-arrows/this\n      google.maps.event.addListener(marker, 'dragend', () => {\n        if (this.ready) {\n          marker.isAdded = false\n\n          this.repaint()\n        }\n      })\n    }\n\n    marker.isAdded = false\n\n    this.markers.push(marker)\n  }\n\n  removeMarker_(marker: MarkerExtended): boolean {\n    let index = -1\n\n    if (this.markers.indexOf) {\n      index = this.markers.indexOf(marker)\n    } else {\n      for (let i = 0; i < this.markers.length; i++) {\n        if (marker === this.markers[i]) {\n          index = i\n\n          break\n        }\n      }\n    }\n\n    if (index === -1) {\n      // Marker is not in our list of markers, so do nothing:\n      return false\n    }\n\n    marker.setMap(null)\n\n    this.markers.splice(index, 1) // Remove the marker from the list of managed markers\n\n    return true\n  }\n\n  removeMarker(marker: MarkerExtended, optNoDraw: boolean): boolean {\n    const removed = this.removeMarker_(marker)\n\n    if (!optNoDraw && removed) {\n      this.repaint()\n    }\n\n    return removed\n  }\n\n  removeMarkers(markers: MarkerExtended[], optNoDraw: boolean): boolean {\n    let removed = false\n\n    for (let i = 0; i < markers.length; i++) {\n      removed = removed || this.removeMarker_(markers[i])\n    }\n\n    if (!optNoDraw && removed) {\n      this.repaint()\n    }\n\n    return removed\n  }\n\n  clearMarkers() {\n    this.resetViewport(true)\n\n    this.markers = []\n  }\n\n  repaint() {\n    const oldClusters = this.clusters.slice()\n\n    this.clusters = []\n\n    this.resetViewport(false)\n\n    this.redraw()\n\n    // Remove the old clusters.\n    // Do it in a timeout to prevent blinking effect.\n    setTimeout(function timeout() {\n      for (let i = 0; i < oldClusters.length; i++) {\n        oldClusters[i].remove()\n      }\n    }, 0)\n  }\n\n  getExtendedBounds(bounds: google.maps.LatLngBounds): google.maps.LatLngBounds {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    const projection = this.getProjection()\n    // Convert the points to pixels and the extend out by the grid size.\n    const trPix = projection.fromLatLngToDivPixel(\n      // Turn the bounds into latlng.\n      new google.maps.LatLng(bounds.getNorthEast().lat(), bounds.getNorthEast().lng())\n    )\n\n    trPix.x += this.gridSize\n    trPix.y -= this.gridSize\n\n    const blPix = projection.fromLatLngToDivPixel(\n      // Turn the bounds into latlng.\n      new google.maps.LatLng(bounds.getSouthWest().lat(), bounds.getSouthWest().lng())\n    )\n\n    blPix.x -= this.gridSize\n    blPix.y += this.gridSize\n\n    // Extend the bounds to contain the new bounds.\n    bounds.extend(\n      // Convert the pixel points back to LatLng nw\n      projection.fromDivPixelToLatLng(trPix)\n    )\n\n    bounds.extend(\n      // Convert the pixel points back to LatLng sw\n      projection.fromDivPixelToLatLng(blPix)\n    )\n\n    return bounds\n  }\n\n  redraw() {\n    // Redraws all the clusters.\n    this.createClusters(0)\n  }\n\n  resetViewport(optHide: boolean) {\n    // Remove all the clusters\n    for (let i = 0; i < this.clusters.length; i++) {\n      this.clusters[i].remove()\n    }\n\n    this.clusters = []\n\n    // Reset the markers to not be added and to be removed from the map.\n    for (let i = 0; i < this.markers.length; i++) {\n      const marker = this.markers[i]\n\n      marker.isAdded = false\n\n      if (optHide) {\n        marker.setMap(null)\n      }\n    }\n  }\n\n  distanceBetweenPoints(p1: google.maps.LatLng, p2: google.maps.LatLng): number {\n    const R = 6371 // Radius of the Earth in km\n\n    const dLat = ((p2.lat() - p1.lat()) * Math.PI) / 180\n    const dLon = ((p2.lng() - p1.lng()) * Math.PI) / 180\n\n    const a =\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos((p1.lat() * Math.PI) / 180) *\n        Math.cos((p2.lat() * Math.PI) / 180) *\n        Math.sin(dLon / 2) *\n        Math.sin(dLon / 2)\n\n    return R * (2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)))\n  }\n\n  isMarkerInBounds(marker: MarkerExtended, bounds: google.maps.LatLngBounds): boolean {\n    const position = marker.getPosition()\n\n    if (position) {\n      return bounds.contains(position)\n    }\n\n    return false\n  }\n\n  addToClosestCluster(marker: MarkerExtended) {\n    let cluster\n\n    let distance = 40000 // Some large number\n\n    let clusterToAddTo = null\n\n    for (let i = 0; i < this.clusters.length; i++) {\n      cluster = this.clusters[i]\n\n      const center = cluster.getCenter()\n\n      const position = marker.getPosition()\n\n      if (center && position) {\n        const d = this.distanceBetweenPoints(center, position)\n\n        if (d < distance) {\n          distance = d\n\n          clusterToAddTo = cluster\n        }\n      }\n    }\n\n    if (clusterToAddTo && clusterToAddTo.isMarkerInClusterBounds(marker)) {\n      clusterToAddTo.addMarker(marker)\n    } else {\n      cluster = new Cluster(this)\n\n      cluster.addMarker(marker)\n\n      this.clusters.push(cluster)\n    }\n  }\n\n  createClusters(iFirst: number) {\n    if (!this.ready) {\n      return\n    }\n\n    // Cancel previous batch processing if we're working on the first batch:\n    if (iFirst === 0) {\n      /**\n       * This event is fired when the <code>Clusterer</code> begins\n       *  clustering markers.\n       * @name Clusterer#clusteringbegin\n       * @param {Clusterer} mc The Clusterer whose markers are being clustered.\n       * @event\n       */\n      google.maps.event.trigger(this, 'clusteringbegin', this)\n\n      if (this.timerRefStatic !== null) {\n        window.clearTimeout(this.timerRefStatic)\n\n        delete this.timerRefStatic\n      }\n    }\n\n    // Get our current map view bounds.\n    // Create a new bounds object so we don't affect the map.\n    //\n    // See Comments 9 & 11 on Issue 3651 relating to this workaround for a Google Maps bug:\n    const mapBounds =\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      this.getMap().getZoom() > 3\n        ? new google.maps.LatLngBounds(\n            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n            // @ts-ignore\n            this.getMap()\n              .getBounds()\n              .getSouthWest(),\n            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n            // @ts-ignore\n            this.getMap()\n              .getBounds()\n              .getNorthEast()\n          )\n        : new google.maps.LatLngBounds(\n            new google.maps.LatLng(85.02070771743472, -178.48388434375),\n            new google.maps.LatLng(-85.08136444384544, 178.00048865625)\n          )\n\n    const bounds = this.getExtendedBounds(mapBounds)\n\n    const iLast = Math.min(iFirst + this.batchSize, this.markers.length)\n\n    for (let i = iFirst; i < iLast; i++) {\n      const marker = this.markers[i]\n\n      if (!marker.isAdded && this.isMarkerInBounds(marker, bounds)) {\n        if (!this.ignoreHidden || (this.ignoreHidden && marker.getVisible())) {\n          this.addToClosestCluster(marker)\n        }\n      }\n    }\n\n    if (iLast < this.markers.length) {\n      this.timerRefStatic = window.setTimeout(\n        // eslint-disable-next-line @getify/proper-arrows/this, @getify/proper-arrows/name\n        () => {\n          this.createClusters(iLast)\n        },\n        0\n      )\n    } else {\n      this.timerRefStatic = null\n\n      /**\n       * This event is fired when the <code>Clusterer</code> stops\n       *  clustering markers.\n       * @name Clusterer#clusteringend\n       * @param {Clusterer} mc The Clusterer whose markers are being clustered.\n       * @event\n       */\n      google.maps.event.trigger(this, 'clusteringend', this)\n\n      for (let i = 0; i < this.clusters.length; i++) {\n        this.clusters[i].updateIcon()\n      }\n    }\n  }\n\n  extend(obj1: any, obj2: any): any {\n    return function applyExtend(object: any) {\n      // eslint-disable-next-line guard-for-in\n      for (const property in object.prototype) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.prototype[property] = object.prototype[property]\n      }\n\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      return this\n    }.apply(obj1, [obj2])\n  }\n}\n","/* global google */\n/* eslint-disable filenames/match-regex */\nimport { InfoBoxOptions } from './types'\n\nexport class InfoBox {\n  content: string | Node\n  disableAutoPan: boolean\n  maxWidth: number\n  pixelOffset: google.maps.Size\n  position: google.maps.LatLng\n  zIndex: number | undefined | null\n  boxClass: string\n  boxStyle: {\n    [key: string]: any\n  }\n  closeBoxMargin: string\n  closeBoxURL: string\n  infoBoxClearance: google.maps.Size\n  isHidden: boolean\n  alignBottom: boolean\n  pane: string\n  enableEventPropagation: boolean\n  div: HTMLDivElement | null\n  closeListener: google.maps.MapsEventListener | null\n  moveListener: google.maps.MapsEventListener | null\n  mapListener: google.maps.MapsEventListener | null\n  contextListener: google.maps.MapsEventListener | null\n  eventListeners: google.maps.MapsEventListener[] | null\n  fixedWidthSet: boolean | null\n\n  constructor(options: InfoBoxOptions = {}) {\n    this.extend(InfoBox, google.maps.OverlayView)\n\n    // Standard options (in common with google.maps.InfoWindow):\n    this.content = options.content || ''\n    this.disableAutoPan = options.disableAutoPan || false\n    this.maxWidth = options.maxWidth || 0\n    this.pixelOffset = options.pixelOffset || new google.maps.Size(0, 0)\n    this.position = options.position || new google.maps.LatLng(0, 0)\n    this.zIndex = options.zIndex || null\n\n    // Additional options (unique to InfoBox):\n    this.boxClass = options.boxClass || 'infoBox'\n    this.boxStyle = options.boxStyle || {}\n    this.closeBoxMargin = options.closeBoxMargin || '2px'\n    this.closeBoxURL = options.closeBoxURL || 'http://www.google.com/intl/en_us/mapfiles/close.gif'\n    if (options.closeBoxURL === '') {\n      this.closeBoxURL = ''\n    }\n    this.infoBoxClearance = options.infoBoxClearance || new google.maps.Size(1, 1)\n\n    if (typeof options.visible === 'undefined') {\n      if (typeof options.isHidden === 'undefined') {\n        options.visible = true\n      } else {\n        options.visible = !options.isHidden\n      }\n    }\n    this.isHidden = !options.visible\n\n    this.alignBottom = options.alignBottom || false\n    this.pane = options.pane || 'floatPane'\n    this.enableEventPropagation = options.enableEventPropagation || false\n\n    this.div = null\n    this.closeListener = null\n    this.moveListener = null\n    this.mapListener = null\n    this.contextListener = null\n    this.eventListeners = null\n    this.fixedWidthSet = null\n  }\n\n  createInfoBoxDiv(): void {\n    // This handler prevents an event in the InfoBox from being passed on to the map.\n    function cancelHandler(event: Event) {\n      event.cancelBubble = true\n      if (event.stopPropagation) {\n        event.stopPropagation()\n      }\n    }\n\n    // This handler ignores the current event in the InfoBox and conditionally prevents\n    // the event from being passed on to the map. It is used for the contextmenu event.\n    // eslint-disable-next-line  @getify/proper-arrows/this\n    const ignoreHandler = (event: Event) => {\n      event.returnValue = false\n\n      if (event.preventDefault) {\n        event.preventDefault()\n      }\n\n      if (!this.enableEventPropagation) {\n        cancelHandler(event)\n      }\n    }\n\n    if (!this.div) {\n      this.div = document.createElement('div')\n      this.setBoxStyle()\n\n      if (typeof this.content === 'string') {\n        this.div.innerHTML = this.getCloseBoxImg() + this.content\n      } else {\n        this.div.innerHTML = this.getCloseBoxImg()\n        this.div.appendChild(this.content)\n      }\n\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      const panes = this.getPanes()\n      panes[this.pane].appendChild(this.div) // Add the InfoBox div to the DOM\n\n      this.addClickHandler()\n\n      if (this.div.style.width) {\n        this.fixedWidthSet = true\n      } else {\n        if (this.maxWidth !== 0 && this.div.offsetWidth > this.maxWidth) {\n          this.div.style.width = this.maxWidth + 'px'\n          this.fixedWidthSet = true\n        } else {\n          // The following code is needed to overcome problems with MSIE\n          const bw = this.getBoxWidths()\n          this.div.style.width = this.div.offsetWidth - bw.left - bw.right + 'px'\n          this.fixedWidthSet = false\n        }\n      }\n\n      this.panBox(this.disableAutoPan)\n\n      if (!this.enableEventPropagation) {\n        this.eventListeners = []\n\n        // Cancel event propagation.\n        // Note: mousemove not included (to resolve Issue 152)\n        const events = [\n          'mousedown',\n          'mouseover',\n          'mouseout',\n          'mouseup',\n          'click',\n          'dblclick',\n          'touchstart',\n          'touchend',\n          'touchmove',\n        ]\n\n        for (let i = 0; i < events.length; i++) {\n          this.eventListeners.push(\n            google.maps.event.addDomListener(this.div, events[i], cancelHandler)\n          )\n        }\n\n        // Workaround for Google bug that causes the cursor to change to a pointer\n        // when the mouse moves over a marker underneath InfoBox.\n        this.eventListeners.push(\n          google.maps.event.addDomListener(\n            this.div,\n            'mouseover',\n            // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n            () => {\n              if (this.div) {\n                this.div.style.cursor = 'default'\n              }\n            }\n          )\n        )\n      }\n\n      this.contextListener = google.maps.event.addDomListener(\n        this.div,\n        'contextmenu',\n        ignoreHandler\n      )\n\n      /**\n       * This event is fired when the DIV containing the InfoBox's content is attached to the DOM.\n       * @name InfoBox#domready\n       * @event\n       */\n      google.maps.event.trigger(this, 'domready')\n    }\n  }\n\n  getCloseBoxImg(): string {\n    let img = ''\n\n    if (this.closeBoxURL !== '') {\n      img = '<img alt=\"\"'\n      img += ' aria-hidden=\"true\"'\n      img += \" src='\" + this.closeBoxURL + \"'\"\n      img += ' align=right' // Do this because Opera chokes on style='float: right;'\n      img += \" style='\"\n      img += ' position: relative;' // Required by MSIE\n      img += ' cursor: pointer;'\n      img += ' margin: ' + this.closeBoxMargin + ';'\n      img += \"'>\"\n    }\n\n    return img\n  }\n\n  addClickHandler(): void {\n    if (this.div && this.div.firstChild && this.closeBoxURL !== '') {\n      const closeBox = this.div.firstChild\n      this.closeListener = google.maps.event.addDomListener(\n        closeBox,\n        'click',\n        this.getCloseClickHandler()\n      )\n    } else {\n      this.closeListener = null\n    }\n  }\n\n  getCloseClickHandler() {\n    // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n    return (event: Event) => {\n      // 1.0.3 fix: Always prevent propagation of a close box click to the map:\n      event.cancelBubble = true\n\n      if (event.stopPropagation) {\n        event.stopPropagation()\n      }\n\n      /**\n       * This event is fired when the InfoBox's close box is clicked.\n       * @name InfoBox#closeclick\n       * @event\n       */\n      google.maps.event.trigger(this, 'closeclick')\n\n      this.close()\n    }\n  }\n\n  panBox(disablePan?: boolean): void {\n    if (this.div && !disablePan) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      const map: google.maps.Map | google.maps.StreetViewPanorama | null | undefined = this.getMap()\n\n      // Only pan if attached to map, not panorama\n      if (map instanceof google.maps.Map) {\n        let xOffset = 0\n        let yOffset = 0\n\n        const bounds = map.getBounds()\n        if (bounds && !bounds.contains(this.position)) {\n          // Marker not in visible area of map, so set center\n          // of map to the marker position first.\n          map.setCenter(this.position)\n        }\n\n        const mapDiv = map.getDiv()\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        const mapWidth = mapDiv.offsetWidth\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        const mapHeight = mapDiv.offsetHeight\n        const iwOffsetX = this.pixelOffset.width\n        const iwOffsetY = this.pixelOffset.height\n        const iwWidth = this.div.offsetWidth\n        const iwHeight = this.div.offsetHeight\n        const padX = this.infoBoxClearance.width\n        const padY = this.infoBoxClearance.height\n\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        const projection: google.maps.MapCanvasProjection = this.getProjection()\n        const pixPosition = projection.fromLatLngToContainerPixel(this.position)\n\n        if (pixPosition.x < -iwOffsetX + padX) {\n          xOffset = pixPosition.x + iwOffsetX - padX\n        } else if (pixPosition.x + iwWidth + iwOffsetX + padX > mapWidth) {\n          xOffset = pixPosition.x + iwWidth + iwOffsetX + padX - mapWidth\n        }\n        if (this.alignBottom) {\n          if (pixPosition.y < -iwOffsetY + padY + iwHeight) {\n            yOffset = pixPosition.y + iwOffsetY - padY - iwHeight\n          } else if (pixPosition.y + iwOffsetY + padY > mapHeight) {\n            yOffset = pixPosition.y + iwOffsetY + padY - mapHeight\n          }\n        } else {\n          if (pixPosition.y < -iwOffsetY + padY) {\n            yOffset = pixPosition.y + iwOffsetY - padY\n          } else if (pixPosition.y + iwHeight + iwOffsetY + padY > mapHeight) {\n            yOffset = pixPosition.y + iwHeight + iwOffsetY + padY - mapHeight\n          }\n        }\n\n        if (!(xOffset === 0 && yOffset === 0)) {\n          // Move the map to the shifted center.\n          map.panBy(xOffset, yOffset)\n        }\n      }\n    }\n  }\n\n  setBoxStyle(): void {\n    if (this.div) {\n      // Apply style values from the style sheet defined in the boxClass parameter:\n      this.div.className = this.boxClass\n\n      // Clear existing inline style values:\n      this.div.style.cssText = ''\n\n      // Apply style values defined in the boxStyle parameter:\n      const boxStyle = this.boxStyle\n      for (const i in boxStyle) {\n        if (boxStyle.hasOwnProperty(i)) {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n          this.div.style[i] = boxStyle[i]\n        }\n      }\n\n      // Fix for iOS disappearing InfoBox problem\n      // See http://stackoverflow.com/questions/9229535/google-maps-markers-disappear-at-certain-zoom-level-only-on-iphone-ipad\n      this.div.style.webkitTransform = 'translateZ(0)'\n\n      // Fix up opacity style for benefit of MSIE\n      if (typeof this.div.style.opacity !== 'undefined' && this.div.style.opacity !== '') {\n        // See http://www.quirksmode.org/css/opacity.html\n        const opacity = parseFloat(this.div.style.opacity || '')\n\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.div.style.msFilter =\n          '\"progid:DXImageTransform.Microsoft.Alpha(Opacity=' + opacity * 100 + ')\"'\n        this.div.style.filter = 'alpha(opacity=' + opacity * 100 + ')'\n      }\n\n      // Apply required styles\n      this.div.style.position = 'absolute'\n      this.div.style.visibility = 'hidden'\n      if (this.zIndex !== null) {\n        this.div.style.zIndex = this.zIndex + ''\n      }\n      if (!this.div.style.overflow) {\n        this.div.style.overflow = 'auto'\n      }\n    }\n  }\n\n  getBoxWidths(): { bottom: number; left: number; right: number; top: number } {\n    const bw = { top: 0, bottom: 0, left: 0, right: 0 }\n\n    if (!this.div) {\n      return bw\n    }\n\n    if (document.defaultView && document.defaultView.getComputedStyle) {\n      const ownerDocument = this.div.ownerDocument\n      const computedStyle =\n        ownerDocument && ownerDocument.defaultView\n          ? ownerDocument.defaultView.getComputedStyle(this.div, '')\n          : null\n\n      if (computedStyle) {\n        // The computed styles are always in pixel units (good!)\n        bw.top = parseInt(computedStyle.borderTopWidth || '', 10) || 0\n        bw.bottom = parseInt(computedStyle.borderBottomWidth || '', 10) || 0\n        bw.left = parseInt(computedStyle.borderLeftWidth || '', 10) || 0\n        bw.right = parseInt(computedStyle.borderRightWidth || '', 10) || 0\n      }\n    } else if (\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      document.documentElement.currentStyle // MSIE\n    ) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      const currentStyle = this.div.currentStyle\n\n      if (currentStyle) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // The current styles may not be in pixel units, but assume they are (bad!)\n        bw.top = parseInt(currentStyle.borderTopWidth || '', 10) || 0\n        bw.bottom = parseInt(currentStyle.borderBottomWidth || '', 10) || 0\n        bw.left = parseInt(currentStyle.borderLeftWidth || '', 10) || 0\n        bw.right = parseInt(currentStyle.borderRightWidth || '', 10) || 0\n      }\n    }\n\n    return bw\n  }\n\n  onRemove(): void {\n    if (this.div && this.div.parentNode) {\n      this.div.parentNode.removeChild(this.div)\n      this.div = null\n    }\n  }\n\n  draw(): void {\n    this.createInfoBoxDiv()\n\n    if (this.div) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      const projection: google.maps.MapCanvasProjection = this.getProjection()\n      const pixPosition = projection.fromLatLngToDivPixel(this.position)\n\n      this.div.style.left = pixPosition.x + this.pixelOffset.width + 'px'\n\n      if (this.alignBottom) {\n        this.div.style.bottom = -(pixPosition.y + this.pixelOffset.height) + 'px'\n      } else {\n        this.div.style.top = pixPosition.y + this.pixelOffset.height + 'px'\n      }\n\n      if (this.isHidden) {\n        this.div.style.visibility = 'hidden'\n      } else {\n        this.div.style.visibility = 'visible'\n      }\n    }\n  }\n\n  setOptions(options: InfoBoxOptions = {}): void {\n    if (typeof options.boxClass !== 'undefined') {\n      // Must be first\n      this.boxClass = options.boxClass\n      this.setBoxStyle()\n    }\n    if (typeof options.boxStyle !== 'undefined') {\n      // Must be second\n      this.boxStyle = options.boxStyle\n      this.setBoxStyle()\n    }\n    if (typeof options.content !== 'undefined') {\n      this.setContent(options.content)\n    }\n    if (typeof options.disableAutoPan !== 'undefined') {\n      this.disableAutoPan = options.disableAutoPan\n    }\n    if (typeof options.maxWidth !== 'undefined') {\n      this.maxWidth = options.maxWidth\n    }\n    if (typeof options.pixelOffset !== 'undefined') {\n      this.pixelOffset = options.pixelOffset\n    }\n    if (typeof options.alignBottom !== 'undefined') {\n      this.alignBottom = options.alignBottom\n    }\n    if (typeof options.position !== 'undefined') {\n      this.setPosition(options.position)\n    }\n    if (typeof options.zIndex !== 'undefined') {\n      this.setZIndex(options.zIndex)\n    }\n    if (typeof options.closeBoxMargin !== 'undefined') {\n      this.closeBoxMargin = options.closeBoxMargin\n    }\n    if (typeof options.closeBoxURL !== 'undefined') {\n      this.closeBoxURL = options.closeBoxURL\n    }\n    if (typeof options.infoBoxClearance !== 'undefined') {\n      this.infoBoxClearance = options.infoBoxClearance\n    }\n    if (typeof options.isHidden !== 'undefined') {\n      this.isHidden = options.isHidden\n    }\n    if (typeof options.visible !== 'undefined') {\n      this.isHidden = !options.visible\n    }\n    if (typeof options.enableEventPropagation !== 'undefined') {\n      this.enableEventPropagation = options.enableEventPropagation\n    }\n\n    if (this.div) {\n      this.draw()\n    }\n  }\n\n  setContent(content: string | Node): void {\n    this.content = content\n\n    if (this.div) {\n      if (this.closeListener) {\n        google.maps.event.removeListener(this.closeListener)\n        this.closeListener = null\n      }\n\n      // Odd code required to make things work with MSIE.\n      if (!this.fixedWidthSet) {\n        this.div.style.width = ''\n      }\n\n      if (typeof content === 'string') {\n        this.div.innerHTML = this.getCloseBoxImg() + content\n      } else {\n        this.div.innerHTML = this.getCloseBoxImg()\n        this.div.appendChild(content)\n      }\n\n      // Perverse code required to make things work with MSIE.\n      // (Ensures the close box does, in fact, float to the right.)\n      if (!this.fixedWidthSet) {\n        this.div.style.width = this.div.offsetWidth + 'px'\n        if (typeof content === 'string') {\n          this.div.innerHTML = this.getCloseBoxImg() + content\n        } else {\n          this.div.innerHTML = this.getCloseBoxImg()\n          this.div.appendChild(content)\n        }\n      }\n\n      this.addClickHandler()\n    }\n\n    /**\n     * This event is fired when the content of the InfoBox changes.\n     * @name InfoBox#content_changed\n     * @event\n     */\n    google.maps.event.trigger(this, 'content_changed')\n  }\n\n  setPosition(latLng: google.maps.LatLng): void {\n    this.position = latLng\n\n    if (this.div) {\n      this.draw()\n    }\n\n    /**\n     * This event is fired when the position of the InfoBox changes.\n     * @name InfoBox#position_changed\n     * @event\n     */\n    google.maps.event.trigger(this, 'position_changed')\n  }\n\n  setVisible(isVisible: boolean): void {\n    this.isHidden = !isVisible\n    if (this.div) {\n      this.div.style.visibility = this.isHidden ? 'hidden' : 'visible'\n    }\n  }\n\n  setZIndex(index: number): void {\n    this.zIndex = index\n\n    if (this.div) {\n      this.div.style.zIndex = index + ''\n    }\n\n    /**\n     * This event is fired when the zIndex of the InfoBox changes.\n     * @name InfoBox#zindex_changed\n     * @event\n     */\n    google.maps.event.trigger(this, 'zindex_changed')\n  }\n\n  getContent(): string | Node {\n    return this.content\n  }\n\n  getPosition(): google.maps.LatLng {\n    return this.position\n  }\n\n  getZIndex(): number | null | undefined {\n    return this.zIndex\n  }\n\n  getVisible(): boolean {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    const map: google.maps.Map | google.maps.StreetViewPanorama | null | undefined = this.getMap()\n    let isVisible\n\n    if (typeof map === 'undefined' || map === null) {\n      isVisible = false\n    } else {\n      isVisible = !this.isHidden\n    }\n\n    return isVisible\n  }\n\n  show(): void {\n    this.isHidden = false\n    if (this.div) {\n      this.div.style.visibility = 'visible'\n    }\n  }\n\n  hide(): void {\n    this.isHidden = true\n    if (this.div) {\n      this.div.style.visibility = 'hidden'\n    }\n  }\n\n  open(\n    map: google.maps.Map | google.maps.StreetViewPanorama,\n    anchor?: google.maps.MVCObject\n  ): void {\n    if (anchor) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      this.position = anchor.getPosition()\n      this.moveListener = google.maps.event.addListener(\n        anchor,\n        'position_changed',\n        // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n        () => {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n          const position = anchor.getPosition()\n          this.setPosition(position)\n        }\n      )\n\n      this.mapListener = google.maps.event.addListener(\n        anchor,\n        'map_changed',\n        // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n        () => {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n          this.setMap(anchor.map)\n        }\n      )\n    }\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.setMap(map)\n\n    if (this.div) {\n      this.panBox()\n    }\n  }\n\n  close() {\n    if (this.closeListener) {\n      google.maps.event.removeListener(this.closeListener)\n      this.closeListener = null\n    }\n\n    if (this.eventListeners) {\n      for (let i = 0; i < this.eventListeners.length; i++) {\n        google.maps.event.removeListener(this.eventListeners[i])\n      }\n      this.eventListeners = null\n    }\n\n    if (this.moveListener) {\n      google.maps.event.removeListener(this.moveListener)\n      this.moveListener = null\n    }\n\n    if (this.mapListener) {\n      google.maps.event.removeListener(this.mapListener)\n      this.mapListener = null\n    }\n\n    if (this.contextListener) {\n      google.maps.event.removeListener(this.contextListener)\n      this.contextListener = null\n    }\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.setMap(null)\n  }\n\n  extend(obj1: any, obj2: any): any {\n    return function applyExtend(object: any) {\n      // eslint-disable-next-line guard-for-in\n      for (const property in object.prototype) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        if (!this.prototype.hasOwnProperty(property)) {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n          this.prototype[property] = object.prototype[property]\n        }\n      }\n\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      return this\n    }.apply(obj1, [obj2])\n  }\n}\n","import { useContext, createContext } from 'react'\nimport invariant from 'invariant'\n\nconst MapContext = createContext<google.maps.Map | null>(null)\n\nexport function useGoogleMap(): google.maps.Map | null {\n  invariant(!!useContext, 'useGoogleMap is React hook and requires React version 16.8+')\n\n  const map = useContext(MapContext)\n\n  invariant(!!map, 'useGoogleMap needs a GoogleMap available up in the tree')\n\n  return map\n}\n\nexport default MapContext\n","/* global google */\n/* eslint-disable filenames/match-regex */\nimport { reduce } from './reduce'\nimport { forEach } from './foreach'\n\nexport const applyUpdaterToNextProps = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  updaterMap: any,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  prevProps: any,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  nextProps: any,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  instance: any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): any => {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const map: any = {}\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const iter = (fn: any, key: string): void => {\n    const nextValue = nextProps[key]\n\n    if (nextValue !== prevProps[key]) {\n      map[key] = nextValue\n      fn(instance, nextValue)\n    }\n  }\n\n  forEach(updaterMap, iter)\n\n  return map\n}\n\nexport function registerEvents(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  props: any,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  instance: any,\n  eventMap: Record<string, string>\n): google.maps.MapsEventListener[] {\n  const registeredList = reduce(\n    eventMap,\n    function reducer(\n      acc: google.maps.MapsEventListener[],\n      googleEventName: string,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      onEventName: any\n    ): google.maps.MapsEventListener[] {\n      if (typeof props[onEventName] === 'function') {\n        acc.push(google.maps.event.addListener(instance, googleEventName, props[onEventName]))\n      }\n\n      return acc\n    },\n    []\n  )\n\n  return registeredList\n}\nfunction unregisterEvent(registered: google.maps.MapsEventListener): void {\n  google.maps.event.removeListener(registered)\n}\n\nexport function unregisterEvents(events: google.maps.MapsEventListener[] = []): void {\n  events.forEach(unregisterEvent)\n}\n\nexport function applyUpdatersToPropsAndRegisterEvents({\n  updaterMap,\n  eventMap,\n  prevProps,\n  nextProps,\n  instance,\n}: {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  updaterMap: any\n  eventMap: Record<string, string>\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  prevProps: any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  nextProps: any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  instance: any\n}): google.maps.MapsEventListener[] {\n  const registeredEvents = registerEvents(nextProps, instance, eventMap)\n  applyUpdaterToNextProps(updaterMap, prevProps, nextProps, instance)\n  return registeredEvents\n}\n","// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function forEach(obj: any, fn: any): any {\n  Object.keys(obj).forEach(function iterator(key) {\n    return fn(obj[key], key)\n  })\n}\n","// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const reduce = (obj: any, fn: any, acc: any): any => {\n  return Object.keys(obj).reduce(function reducer(newAcc, key) {\n    return fn(newAcc, obj[key], key)\n  }, acc)\n}\n","import * as React from 'react'\n\nimport MapContext from './map-context'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from './utils/helper'\n\nconst eventMap = {\n  onDblClick: 'dblclick',\n  onDragEnd: 'dragend',\n  onDragStart: 'dragstart',\n  onMapTypeIdChanged: 'maptypeid_changed',\n  onMouseMove: 'mousemove',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n  onMouseDown: 'mousedown',\n  onMouseUp: 'mouseup',\n  onRightClick: 'rightclick',\n  onTilesLoaded: 'tilesloaded',\n  onBoundsChanged: 'bounds_changed',\n  onCenterChanged: 'center_changed',\n  onClick: 'click',\n  onDrag: 'drag',\n  onHeadingChanged: 'heading_changed',\n  onIdle: 'idle',\n  onProjectionChanged: 'projection_changed',\n  onResize: 'resize',\n  onTiltChanged: 'tilt_changed',\n  onZoomChanged: 'zoom_changed',\n}\n\nconst updaterMap = {\n  extraMapTypes(map: google.maps.Map, extra: google.maps.MapType[]): void {\n    extra.forEach(function forEachExtra(it, i) {\n      map.mapTypes.set(String(i), it)\n    })\n  },\n  center(map: google.maps.Map, center: google.maps.LatLng | google.maps.LatLngLiteral): void {\n    map.setCenter(center)\n  },\n  clickableIcons(map: google.maps.Map, clickable: boolean): void {\n    map.setClickableIcons(clickable)\n  },\n  heading(map: google.maps.Map, heading: number): void {\n    map.setHeading(heading)\n  },\n  mapTypeId(map: google.maps.Map, mapTypeId: string): void {\n    map.setMapTypeId(mapTypeId)\n  },\n  options(map: google.maps.Map, options: google.maps.MapOptions): void {\n    map.setOptions(options)\n  },\n  streetView(map: google.maps.Map, streetView: google.maps.StreetViewPanorama): void {\n    map.setStreetView(streetView)\n  },\n  tilt(map: google.maps.Map, tilt: number): void {\n    map.setTilt(tilt)\n  },\n  zoom(map: google.maps.Map, zoom: number): void {\n    map.setZoom(zoom)\n  },\n}\n\ninterface GoogleMapState {\n  map: google.maps.Map | null\n}\n\nexport interface GoogleMapProps {\n  id?: string\n  mapContainerStyle?: React.CSSProperties\n  mapContainerClassName?: string\n  options?: google.maps.MapOptions\n  /** Additional map types to overlay. Overlay map types will display on top of the base map they are attached to, in the order in which they appear in the overlayMapTypes array (overlays with higher index values are displayed in front of overlays with lower index values). */\n  extraMapTypes?: google.maps.MapType[]\n  /** The initial Map center. */\n  center?: google.maps.LatLng | google.maps.LatLngLiteral\n  /** When false, map icons are not clickable. A map icon represents a point of interest, also known as a POI. By default map icons are clickable. */\n  clickableIcons?: boolean\n  /** The heading for aerial imagery in degrees measured clockwise from cardinal direction North. Headings are snapped to the nearest available angle for which imagery is available. */\n  heading?: number\n  /** The initial Map mapTypeId. Defaults to ROADMAP. */\n  mapTypeId?: string\n  /** A StreetViewPanorama to display when the Street View pegman is dropped on the map. If no panorama is specified, a default StreetViewPanorama will be displayed in the map's div when the pegman is dropped. */\n  streetView?: google.maps.StreetViewPanorama\n  /** Controls the automatic switching behavior for the angle of incidence of the map. The only allowed values are 0 and 45. The value 0 causes the map to always use a 0¬∞ overhead view regardless of the zoom level and viewport. The value 45 causes the tilt angle to automatically switch to 45 whenever 45¬∞ imagery is available for the current zoom level and viewport, and switch back to 0 whenever 45¬∞ imagery is not available (this is the default behavior). 45¬∞ imagery is only available for satellite and hybrid map types, within some locations, and at some zoom levels. Note: getTilt returns the current tilt angle, not the value specified by this option. Because getTilt and this option refer to different things, do not bind() the tilt property; doing so may yield unpredictable effects. */\n  tilt?: number\n  /** The initial Map zoom level. Required. Valid values: Integers between zero, and up to the supported maximum zoom level. */\n  zoom?: number\n  /** This event is fired when the user clicks on the map. An ApiMouseEvent with properties for the clicked location is returned unless a place icon was clicked, in which case an IconMouseEvent with a placeId is returned. IconMouseEvent and ApiMouseEvent are identical, except that IconMouseEvent has the placeId field. The event can always be treated as an ApiMouseEvent when the placeId is not important. The click event is not fired if a Marker or InfoWindow was clicked. */\n  onClick?: (e: google.maps.MouseEvent) => void\n  /** This event is fired when the user double-clicks on the map. Note that the click event will also fire, right before this one. */\n  onDblClick?: (e: google.maps.MouseEvent) => void\n  /** This event is repeatedly fired while the user drags the map. */\n  onDrag?: () => void\n  /** This event is fired when the user stops dragging the map. */\n  onDragEnd?: () => void\n  /** This event is fired when the user starts dragging the map. */\n  onDragStart?: () => void\n  /** This event is fired when the mapTypeId property changes. */\n  onMapTypeIdChanged?: () => void\n  /** This event is fired whenever the user's mouse moves over the map container. */\n  onMouseMove?: (e: google.maps.MouseEvent) => void\n  /** This event is fired when the user's mouse exits the map container. */\n  onMouseOut?: (e: google.maps.MouseEvent) => void\n  /** This event is fired when the user's mouse enters the map container. */\n  onMouseOver?: (e: google.maps.MouseEvent) => void\n  /** This event is fired when the DOM contextmenu event is fired on the map container. */\n  onRightClick?: (e: google.maps.MouseEvent) => void\n  /** This event is fired when the visible tiles have finished loading. */\n  onTilesLoaded?: () => void\n  /** This event is fired when the viewport bounds have changed. */\n  onBoundsChanged?: () => void\n  /** This event is fired when the map center property changes. */\n  onCenterChanged?: () => void\n  /** This event is fired when the map heading property changes. */\n  onHeadingChanged?: () => void\n  /** This event is fired when the map becomes idle after panning or zooming. */\n  onIdle?: () => void\n  /** This event is fired when the projection has changed. */\n  onProjectionChanged?: () => void\n  /** This event is fired when the map size has changed. */\n  onResize?: () => void\n  /** This event is fired when the map tilt property changes. */\n  onTiltChanged?: () => void\n  /** This event is fired when the map zoom property changes. */\n  onZoomChanged?: () => void\n  /** This callback is called when the map instance has loaded. It is called with the map instance. */\n  onLoad?: (map: google.maps.Map) => void | Promise<void>\n  /** This callback is called when the component unmounts. It is called with the map instance. */\n  onUnmount?: (map: google.maps.Map) => void | Promise<void>\n}\n\nexport class GoogleMap extends React.PureComponent<GoogleMapProps, GoogleMapState> {\n  state: GoogleMapState = {\n    map: null,\n  }\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  mapRef: Element | null = null\n\n  getInstance = (): google.maps.Map | null => {\n    if (this.mapRef === null) {\n      return null\n    }\n\n    return new google.maps.Map(this.mapRef, this.props.options)\n  }\n\n  panTo = (latLng: google.maps.LatLng | google.maps.LatLngLiteral): void => {\n    const map = this.getInstance()\n    if (map) {\n      map.panTo(latLng)\n    }\n  }\n\n  setMapCallback = (): void => {\n    if (this.state.map !== null) {\n      if (this.props.onLoad) {\n        this.props.onLoad(this.state.map)\n      }\n    }\n  }\n\n  componentDidMount(): void {\n    const map = this.getInstance()\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: map,\n    })\n\n    this.setState(function setMap() {\n      return {\n        map,\n      }\n    }, this.setMapCallback)\n  }\n\n  componentDidUpdate(prevProps: GoogleMapProps): void {\n    if (this.state.map !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.map,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.map !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.map)\n      }\n\n      unregisterEvents(this.registeredEvents)\n    }\n  }\n\n  getRef = (ref: HTMLDivElement | null): void => {\n    this.mapRef = ref\n  }\n\n  render(): React.ReactNode {\n    return (\n      <div\n        id={this.props.id}\n        ref={this.getRef}\n        style={this.props.mapContainerStyle}\n        className={this.props.mapContainerClassName}\n      >\n        <MapContext.Provider value={this.state.map}>\n          {this.state.map !== null ? this.props.children : <></>}\n        </MapContext.Provider>\n      </div>\n    )\n  }\n}\n\nexport default GoogleMap\n","export const isBrowser: boolean = typeof document !== 'undefined'\n","import { isBrowser } from './isbrowser'\n\ninterface WindowWithGoogleMap extends Window {\n  initMap?: () => void\n}\n\ninterface InjectScriptArg {\n  url: string\n  id: string\n  nonce?: string\n}\n\nexport const injectScript = ({ url, id, nonce }: InjectScriptArg): Promise<any> => {\n  if (!isBrowser) {\n    return Promise.reject(new Error('document is undefined'))\n  }\n\n  return new Promise(function injectScriptCallback(resolve, reject) {\n    const existingScript = document.getElementById(id) as HTMLScriptElement | undefined\n    const windowWithGoogleMap: WindowWithGoogleMap = window\n    if (existingScript) {\n      // Same script id/url: keep same script\n      const dataStateAttribute = existingScript.getAttribute('data-state')\n      if (existingScript.src === url && dataStateAttribute !== 'error') {\n        if (dataStateAttribute === 'ready') {\n          return resolve(id)\n        } else {\n          const originalInitMap = windowWithGoogleMap.initMap\n          const originalErrorCallback = existingScript.onerror\n\n          windowWithGoogleMap.initMap = function initMap(): void {\n            if (originalInitMap) {\n              originalInitMap()\n            }\n            resolve(id)\n          }\n\n          existingScript.onerror = function(err): void {\n            if (originalErrorCallback) {\n              originalErrorCallback(err)\n            }\n            reject(err)\n          }\n\n          return\n        }\n      }\n      // Same script id, but either\n      // 1. requested URL is different\n      // 2. script failed to load\n      else {\n        existingScript.remove()\n      }\n    }\n\n    const script = document.createElement('script')\n\n    script.type = 'text/javascript'\n    script.src = url\n    script.id = id\n    script.async = true\n    script.nonce = nonce\n    script.onerror = function onerror(err): void {\n      script.setAttribute('data-state', 'error')\n      reject(err)\n    }\n\n    windowWithGoogleMap.initMap = function onload(): void {\n      script.setAttribute('data-state', 'ready')\n      resolve(id)\n    }\n\n    document.head.appendChild(script)\n  }).catch(err => {\n    console.error('injectScript error: ', err)\n    throw err\n  })\n}\n","const isRobotoStyle = (element: HTMLElement): boolean => {\n  // roboto font download\n  if (\n    (element as HTMLLinkElement).href &&\n    (element as HTMLLinkElement).href.indexOf('https://fonts.googleapis.com/css?family=Roboto') ===\n      0\n  ) {\n    return true\n  }\n  // roboto style elements\n  if (\n    element.tagName.toLowerCase() === 'style' &&\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    element.styleSheet &&\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    element.styleSheet.cssText &&\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    element.styleSheet.cssText.replace('\\r\\n', '').indexOf('.gm-style') === 0\n  ) {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    element.styleSheet.cssText = ''\n    return true\n  }\n  // roboto style elements for other browsers\n  if (\n    element.tagName.toLowerCase() === 'style' &&\n    element.innerHTML &&\n    element.innerHTML.replace('\\r\\n', '').indexOf('.gm-style') === 0\n  ) {\n    element.innerHTML = ''\n    return true\n  }\n  // when google tries to add empty style\n  if (\n    element.tagName.toLowerCase() === 'style' &&\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    !element.styleSheet &&\n    !element.innerHTML\n  ) {\n    return true\n  }\n\n  return false\n}\n\n// Preventing the Google Maps library from downloading an extra font\nexport const preventGoogleFonts = (): void => {\n  // we override these methods only for one particular head element\n  // default methods for other elements are not affected\n  const head = document.getElementsByTagName('head')[0]\n\n  const trueInsertBefore = head.insertBefore.bind(head)\n\n  // TODO: adding return before reflect solves the TS issue\n  // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n  // @ts-ignore\n  head.insertBefore = function insertBefore(\n    newElement: HTMLElement,\n    referenceElement: HTMLElement\n  ): void {\n    if (!isRobotoStyle(newElement)) {\n      Reflect.apply(trueInsertBefore, head, [newElement, referenceElement])\n    }\n  }\n\n  const trueAppend = head.appendChild.bind(head)\n\n  // TODO: adding return before reflect solves the TS issue\n  // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n  // @ts-ignore\n  head.appendChild = function appendChild(textNode: HTMLElement): void {\n    if (!isRobotoStyle(textNode)) {\n      Reflect.apply(trueAppend, head, [textNode])\n    }\n  }\n}\n","import invariant from 'invariant'\n\nexport interface LoadScriptUrlOptions {\n  googleMapsApiKey?: string\n  googleMapsClientId?: string\n  version?: string\n  language?: string\n  region?: string\n  libraries?: string[]\n  channel?: string\n}\n\nexport function makeLoadScriptUrl({\n  googleMapsApiKey,\n  googleMapsClientId,\n  version = 'weekly',\n  language,\n  region,\n  libraries,\n  channel,\n}: LoadScriptUrlOptions): string {\n  const params = []\n\n  invariant(\n    (googleMapsApiKey && googleMapsClientId) || !(googleMapsApiKey && googleMapsClientId),\n    'You need to specify either googleMapsApiKey or googleMapsClientId for @react-google-maps/api load script to work. You cannot use both at the same time.'\n  )\n\n  if (googleMapsApiKey) {\n    params.push(`key=${googleMapsApiKey}`)\n  } else if (googleMapsClientId) {\n    params.push(`client=${googleMapsClientId}`)\n  }\n\n  if (version) {\n    params.push(`v=${version}`)\n  }\n\n  if (language) {\n    params.push(`language=${language}`)\n  }\n\n  if (region) {\n    params.push(`region=${region}`)\n  }\n\n  if (libraries && libraries.length) {\n    params.push(`libraries=${libraries.sort().join(',')}`)\n  }\n\n  if (channel) {\n    params.push(`channel=${channel}`)\n  }\n\n  params.push('callback=initMap')\n\n  return `https://maps.googleapis.com/maps/api/js?${params.join('&')}`\n}\n","import * as React from 'react'\nimport invariant from 'invariant'\n\nimport { injectScript } from './utils/injectscript'\nimport { preventGoogleFonts } from './utils/prevent-google-fonts'\n\nimport { isBrowser } from './utils/isbrowser'\nimport { LoadScriptUrlOptions, makeLoadScriptUrl } from './utils/make-load-script-url'\n\nlet cleaningUp = false\n\ninterface LoadScriptState {\n  loaded: boolean\n}\n\nexport interface LoadScriptProps extends LoadScriptUrlOptions {\n  id: string\n  nonce?: string\n  loadingElement?: React.ReactNode\n  onLoad?: () => void\n  onError?: (error: Error) => void\n  onUnmount?: () => void\n  preventGoogleFontsLoading?: boolean\n}\n\nexport function DefaultLoadingElement(): JSX.Element {\n  return <div>{`Loading...`}</div>\n}\n\nexport const defaultLoadScriptProps = {\n  id: 'script-loader',\n  version: 'weekly',\n}\n\nclass LoadScript extends React.PureComponent<LoadScriptProps, LoadScriptState> {\n  public static defaultProps = defaultLoadScriptProps\n\n  check: React.RefObject<HTMLDivElement> = React.createRef()\n\n  state = {\n    loaded: false,\n  }\n\n  cleanupCallback = (): void => {\n    delete window.google.maps\n\n    this.injectScript()\n  }\n\n  componentDidMount(): void {\n    if (isBrowser) {\n      if (window.google && window.google.maps && !cleaningUp) {\n        console.error('google api is already presented')\n\n        return\n      }\n\n      this.isCleaningUp()\n        .then(this.injectScript)\n        .catch(function error(err) {\n          console.error('Error at injecting script after cleaning up: ', err)\n        })\n    }\n  }\n\n  componentDidUpdate(prevProps: LoadScriptProps): void {\n    if (this.props.libraries !== prevProps.libraries) {\n      console.warn(\n        'Performance warning! LoadScript has been reloaded unintentionally! You should not pass `libraries` prop as new array. Please keep an array of libraries as static class property for Components and PureComponents, or just a const variable outside of component, or somewhere in config files or ENV variables'\n      )\n    }\n\n    if (isBrowser && prevProps.language !== this.props.language) {\n      this.cleanup()\n      // TODO: refactor to use gDSFP maybe... wait for hooks refactoring.\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState(function setLoaded() {\n        return {\n          loaded: false,\n        }\n      }, this.cleanupCallback)\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (isBrowser) {\n      this.cleanup()\n\n      const timeoutCallback = (): void => {\n        if (!this.check.current) {\n          delete window.google\n          cleaningUp = false\n        }\n      }\n\n      window.setTimeout(timeoutCallback, 1)\n\n      if (this.props.onUnmount) {\n        this.props.onUnmount()\n      }\n    }\n  }\n\n  isCleaningUp = async (): Promise<void> => {\n    function promiseCallback(resolve: () => void): void {\n      if (!cleaningUp) {\n        resolve()\n      } else {\n        if (isBrowser) {\n          const timer = window.setInterval(function interval() {\n            if (!cleaningUp) {\n              window.clearInterval(timer)\n\n              resolve()\n            }\n          }, 1)\n        }\n      }\n\n      return\n    }\n\n    return new Promise(promiseCallback)\n  }\n\n  cleanup = (): void => {\n    cleaningUp = true\n    const script = document.getElementById(this.props.id)\n\n    if (script && script.parentNode) {\n      script.parentNode.removeChild(script)\n    }\n\n    Array.prototype.slice\n      .call(document.getElementsByTagName('script'))\n      .filter(function filter(script: HTMLScriptElement): boolean {\n        return typeof script.src === 'string' && script.src.includes('maps.googleapis')\n      })\n      .forEach(function forEach(script: HTMLScriptElement): void {\n        if (script.parentNode) {\n          script.parentNode.removeChild(script)\n        }\n      })\n\n    Array.prototype.slice\n      .call(document.getElementsByTagName('link'))\n      .filter(function filter(link: HTMLLinkElement): boolean {\n        return (\n          link.href === 'https://fonts.googleapis.com/css?family=Roboto:300,400,500,700|Google+Sans'\n        )\n      })\n      .forEach(function forEach(link: HTMLLinkElement) {\n        if (link.parentNode) {\n          link.parentNode.removeChild(link)\n        }\n      })\n\n    Array.prototype.slice\n      .call(document.getElementsByTagName('style'))\n      .filter(function filter(style: HTMLStyleElement): boolean {\n        return (\n          style.innerText !== undefined &&\n          style.innerText.length > 0 &&\n          style.innerText.includes('.gm-')\n        )\n      })\n      .forEach(function forEach(style: HTMLStyleElement) {\n        if (style.parentNode) {\n          style.parentNode.removeChild(style)\n        }\n      })\n  }\n\n  injectScript = (): void => {\n    if (this.props.preventGoogleFontsLoading) {\n      preventGoogleFonts()\n    }\n\n    invariant(!!this.props.id, 'LoadScript requires \"id\" prop to be a string: %s', this.props.id)\n\n    const injectScriptOptions = {\n      id: this.props.id,\n      nonce: this.props.nonce,\n      url: makeLoadScriptUrl(this.props),\n    }\n\n    injectScript(injectScriptOptions)\n      .then(() => {\n        if (this.props.onLoad) {\n          this.props.onLoad()\n        }\n\n        this.setState(function setLoaded() {\n          return {\n            loaded: true,\n          }\n        })\n\n        return\n      })\n      .catch(err => {\n        if (this.props.onError) {\n          this.props.onError(err)\n        }\n\n        console.error(`\n          There has been an Error with loading Google Maps API script, please check that you provided correct google API key (${this\n            .props.googleMapsApiKey || '-'}) or Client ID (${this.props.googleMapsClientId ||\n            '-'}) to <LoadScript />\n          Otherwise it is a Network issue.\n        `)\n      })\n  }\n\n  render(): React.ReactNode {\n    return (\n      <>\n        <div ref={this.check} />\n\n        {this.state.loaded\n          ? this.props.children\n          : this.props.loadingElement || <DefaultLoadingElement />}\n      </>\n    )\n  }\n}\n\nexport default LoadScript\n","/* eslint-disable filenames/match-regex */\nimport * as React from 'react'\nimport invariant from 'invariant'\n\nimport { isBrowser } from './utils/isbrowser'\nimport { injectScript } from './utils/injectscript'\nimport { preventGoogleFonts } from './utils/prevent-google-fonts'\nimport { makeLoadScriptUrl, LoadScriptUrlOptions } from './utils/make-load-script-url'\n\nimport { defaultLoadScriptProps } from './LoadScript'\n\nexport interface UseLoadScriptOptions extends LoadScriptUrlOptions {\n  id?: string\n  nonce?: string\n  preventGoogleFontsLoading?: boolean\n}\n\nlet previouslyLoadedUrl: string\n\nexport function useLoadScript({\n  id = defaultLoadScriptProps.id,\n  version = defaultLoadScriptProps.version,\n  nonce,\n  googleMapsApiKey,\n  googleMapsClientId,\n  language,\n  region,\n  libraries,\n  preventGoogleFontsLoading,\n  channel,\n}: UseLoadScriptOptions): {\n  isLoaded: boolean\n  loadError: Error | undefined\n  url: string\n} {\n  const isMounted = React.useRef(false)\n  const [isLoaded, setLoaded] = React.useState(false)\n  const [loadError, setLoadError] = React.useState<Error | undefined>(undefined)\n\n  React.useEffect(function trackMountedState() {\n    isMounted.current = true\n    return (): void => {\n      isMounted.current = false\n    }\n  }, [])\n\n  React.useEffect(\n    function applyPreventGoogleFonts() {\n      if (isBrowser && preventGoogleFontsLoading) {\n        preventGoogleFonts()\n      }\n    },\n    [preventGoogleFontsLoading]\n  )\n\n  React.useEffect(\n    function validateLoadedState() {\n      if (isLoaded) {\n        invariant(\n          !!window.google,\n          'useLoadScript was marked as loaded, but window.google is not present. Something went wrong.'\n        )\n      }\n    },\n    [isLoaded]\n  )\n\n  const url = makeLoadScriptUrl({\n    version,\n    googleMapsApiKey,\n    googleMapsClientId,\n    language,\n    region,\n    libraries,\n    channel,\n  })\n\n  React.useEffect(\n    function loadScriptAndModifyLoadedState() {\n      if (!isBrowser) {\n        return\n      }\n\n      function setLoadedIfMounted(): void {\n        if (isMounted.current) {\n          setLoaded(true)\n          previouslyLoadedUrl = url\n        }\n      }\n\n      if (window.google && window.google.maps && previouslyLoadedUrl === url) {\n        setLoadedIfMounted()\n        return\n      }\n\n      injectScript({ id, url, nonce })\n        .then(setLoadedIfMounted)\n        .catch(function handleInjectError(err) {\n          if (isMounted.current) {\n            setLoadError(err)\n          }\n          console.warn(`\n        There has been an Error with loading Google Maps API script, please check that you provided correct google API key (${googleMapsApiKey ||\n          '-'}) or Client ID (${googleMapsClientId || '-'})\n        Otherwise it is a Network issue.\n      `)\n          console.error(err)\n        })\n    },\n    [id, url, nonce]\n  )\n\n  const prevLibraries = React.useRef<undefined | string[]>()\n\n  React.useEffect(\n    function checkPerformance() {\n      if (prevLibraries.current && libraries !== prevLibraries.current) {\n        console.warn(\n          'Performance warning! LoadScript has been reloaded unintentionally! You should not pass `libraries` prop as new array. Please keep an array of libraries as static class property for Components and PureComponents, or just a const variable outside of component, or somewhere in config files or ENV variables'\n        )\n      }\n      prevLibraries.current = libraries\n    },\n    [libraries]\n  )\n\n  return { isLoaded, loadError, url }\n}\n","import * as React from 'react'\n\nimport { DefaultLoadingElement } from './LoadScript'\nimport { useLoadScript, UseLoadScriptOptions } from './useLoadScript'\n\nexport interface LoadScriptNextProps extends UseLoadScriptOptions {\n  loadingElement?: React.ReactElement\n  onLoad?: () => void\n  onError?: (error: Error) => void\n  onUnmount?: () => void\n  children: React.ReactElement\n}\n\nconst defaultLoadingElement = <DefaultLoadingElement />\n\nfunction LoadScriptNext({\n  loadingElement,\n  onLoad,\n  onError,\n  onUnmount,\n  children,\n  ...hookOptions\n}: LoadScriptNextProps): JSX.Element {\n  const { isLoaded, loadError } = useLoadScript(hookOptions)\n\n  React.useEffect(\n    function handleOnLoad() {\n      if (isLoaded && typeof onLoad === 'function') {\n        onLoad()\n      }\n    },\n    [isLoaded, onLoad]\n  )\n\n  React.useEffect(\n    function handleOnError() {\n      if (loadError && typeof onError === 'function') {\n        onError(loadError)\n      }\n    },\n    [loadError, onError]\n  )\n\n  React.useEffect(\n    function handleOnUnmount() {\n      return () => {\n        if (onUnmount) {\n          onUnmount()\n        }\n      }\n    },\n    [onUnmount]\n  )\n\n  return isLoaded ? children : loadingElement || defaultLoadingElement\n}\n\nexport default React.memo(LoadScriptNext)\n","import { PureComponent } from 'react'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\nimport MapContext from '../../map-context'\n\nconst eventMap = {}\n\nconst updaterMap = {\n  options(instance: google.maps.TrafficLayer, options: google.maps.TrafficLayerOptions): void {\n    instance.setOptions(options)\n  },\n}\n\ninterface TrafficLayerState {\n  trafficLayer: google.maps.TrafficLayer | null\n}\n\nexport interface TrafficLayerProps {\n  options?: google.maps.TrafficLayerOptions\n  /** This callback is called when the trafficLayer instance has loaded. It is called with the trafficLayer instance. */\n  onLoad?: (trafficLayer: google.maps.TrafficLayer) => void\n  /** This callback is called when the component unmounts. It is called with the trafficLayer instance. */\n  onUnmount?: (trafficLayer: google.maps.TrafficLayer) => void\n}\n\nexport class TrafficLayer extends PureComponent<TrafficLayerProps, TrafficLayerState> {\n  static contextType = MapContext\n\n  state = {\n    trafficLayer: null,\n  }\n\n  setTrafficLayerCallback = () => {\n    if (this.state.trafficLayer !== null) {\n      if (this.props.onLoad) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.props.onLoad(this.state.trafficLayer)\n      }\n    }\n  }\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  componentDidMount(): void {\n    const trafficLayer = new google.maps.TrafficLayer({\n      ...(this.props.options || {}),\n      map: this.context,\n    })\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: trafficLayer,\n    })\n\n    this.setState(function setTrafficLayer() {\n      return {\n        trafficLayer,\n      }\n    }, this.setTrafficLayerCallback)\n  }\n\n  componentDidUpdate(prevProps: TrafficLayerProps): void {\n    if (this.state.trafficLayer !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.trafficLayer,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.trafficLayer !== null) {\n      if (this.props.onUnmount) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.props.onUnmount(this.state.trafficLayer)\n      }\n\n      unregisterEvents(this.registeredEvents)\n\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      this.state.trafficLayer.setMap(null)\n    }\n  }\n\n  render() {\n    return null\n  }\n}\n\nexport default TrafficLayer\n","import * as React from 'react'\n\nimport MapContext from '../../map-context'\n\ninterface BicyclingLayerState {\n  bicyclingLayer: google.maps.BicyclingLayer | null\n}\n\nexport interface BicyclingLayerProps {\n  /** This callback is called when the bicyclingLayer instance has loaded. It is called with the bicyclingLayer instance. */\n  onLoad?: (bicyclingLayer: google.maps.BicyclingLayer) => void\n  /** This callback is called when the component unmounts. It is called with the bicyclingLayer instance. */\n  onUnmount?: (bicyclingLayer: google.maps.BicyclingLayer) => void\n}\n\nexport class BicyclingLayer extends React.PureComponent<BicyclingLayerProps, BicyclingLayerState> {\n  static contextType = MapContext\n\n  state = {\n    bicyclingLayer: null,\n  }\n\n  setBicyclingLayerCallback = (): void => {\n    if (this.state.bicyclingLayer !== null) {\n      // TODO: how is this possibly null if we're doing a null check\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      this.state.bicyclingLayer.setMap(this.context)\n\n      if (this.props.onLoad) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.props.onLoad(this.state.bicyclingLayer)\n      }\n    }\n  }\n\n  componentDidMount(): void {\n    const bicyclingLayer = new google.maps.BicyclingLayer()\n\n    this.setState(function setBicyclingLayer() {\n      return {\n        bicyclingLayer,\n      }\n    }, this.setBicyclingLayerCallback)\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.bicyclingLayer !== null) {\n      if (this.props.onUnmount) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.props.onUnmount(this.state.bicyclingLayer)\n      }\n\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      this.state.bicyclingLayer.setMap(null)\n    }\n  }\n\n  render(): React.ReactNode {\n    return null\n  }\n}\n\nexport default BicyclingLayer\n","import * as React from 'react'\n\nimport MapContext from '../../map-context'\n\ninterface TransitLayerState {\n  transitLayer: google.maps.TransitLayer | null\n}\n\nexport interface TransitLayerProps {\n  /** This callback is called when the transitLayer instance has loaded. It is called with the transitLayer instance. */\n  onLoad?: (transitLayer: google.maps.TransitLayer) => void\n  /** This callback is called when the component unmounts. It is called with the transitLayer instance. */\n  onUnmount?: (transitLayer: google.maps.TransitLayer) => void\n}\n\nexport class TransitLayer extends React.PureComponent<TransitLayerProps, TransitLayerState> {\n  static contextType = MapContext\n\n  state = {\n    transitLayer: null,\n  }\n\n  setTransitLayerCallback = (): void => {\n    if (this.state.transitLayer !== null) {\n      // TODO: how is this possibly null if we're doing a null check\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      this.state.transitLayer.setMap(this.context)\n\n      if (this.props.onLoad) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.props.onLoad(this.state.transitLayer)\n      }\n    }\n  }\n\n  componentDidMount(): void {\n    const transitLayer = new google.maps.TransitLayer()\n\n    this.setState(function setTransitLayer() {\n      return {\n        transitLayer,\n      }\n    }, this.setTransitLayerCallback)\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.transitLayer !== null) {\n      if (this.props.onUnmount) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.props.onUnmount(this.state.transitLayer)\n      }\n\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      this.state.transitLayer.setMap(null)\n    }\n  }\n\n  render(): React.ReactNode {\n    return null\n  }\n}\n\nexport default TransitLayer\n","/* globals google */\nimport * as React from 'react'\n\nimport invariant from 'invariant'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\n\nimport MapContext from '../../map-context'\n\nconst eventMap = {\n  onCircleComplete: 'circlecomplete',\n  onMarkerComplete: 'markercomplete',\n  onOverlayComplete: 'overlaycomplete',\n  onPolygonComplete: 'polygoncomplete',\n  onPolylineComplete: 'polylinecomplete',\n  onRectangleComplete: 'rectanglecomplete',\n}\n\nconst updaterMap = {\n  drawingMode(\n    instance: google.maps.drawing.DrawingManager,\n    drawingMode: google.maps.drawing.OverlayType | null\n  ): void {\n    instance.setDrawingMode(drawingMode)\n  },\n  options(\n    instance: google.maps.drawing.DrawingManager,\n    options: google.maps.drawing.DrawingManagerOptions\n  ): void {\n    instance.setOptions(options)\n  },\n}\n\ninterface DrawingManagerState {\n  drawingManager: google.maps.drawing.DrawingManager | null\n}\n\nexport interface DrawingManagerProps {\n  options?: google.maps.drawing.DrawingManagerOptions\n  /** Changes the DrawingManager's drawing mode, which defines the type of overlay to be added on the map. Accepted values are 'marker', 'polygon', 'polyline', 'rectangle', 'circle', or null. A drawing mode of null means that the user can interact with the map as normal, and clicks do not draw anything. */\n  drawingMode?: google.maps.drawing.OverlayType | null\n  /** This event is fired when the user has finished drawing a circle. */\n  onCircleComplete?: (circle: google.maps.Circle) => void\n  /** This event is fired when the user has finished drawing a marker. */\n  onMarkerComplete?: (marker: google.maps.Marker) => void\n  /** This event is fired when the user has finished drawing an overlay of any type. */\n  onOverlayComplete?: (e: google.maps.drawing.OverlayCompleteEvent) => void\n  /** This event is fired when the user has finished drawing a polygon. */\n  onPolygonComplete?: (polygon: google.maps.Polygon) => void\n  /** This event is fired when the user has finished drawing a polyline. */\n  onPolylineComplete?: (polyline: google.maps.Polyline) => void\n  /** This event is fired when the user has finished drawing a rectangle. */\n  onRectangleComplete?: (rectangle: google.maps.Rectangle) => void\n  /** This callback is called when the drawingManager instance has loaded. It is called with the drawingManager instance. */\n  onLoad?: (drawingManager: google.maps.drawing.DrawingManager) => void\n  /** This callback is called when the component unmounts. It is called with the drawingManager instance. */\n  onUnmount?: (drawingManager: google.maps.drawing.DrawingManager) => void\n}\n\nexport class DrawingManager extends React.PureComponent<DrawingManagerProps, DrawingManagerState> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  state: DrawingManagerState = {\n    drawingManager: null,\n  }\n\n  constructor(props: DrawingManagerProps) {\n    super(props)\n\n    invariant(\n      !!google.maps.drawing,\n      `Did you include prop libraries={['drawing']} in the URL? %s`,\n      google.maps.drawing\n    )\n  }\n\n  setDrawingManagerCallback = (): void => {\n    if (this.state.drawingManager !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.drawingManager)\n    }\n  }\n\n  componentDidMount(): void {\n    const drawingManager = new google.maps.drawing.DrawingManager({\n      ...(this.props.options || {}),\n      map: this.context,\n    })\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: drawingManager,\n    })\n\n    this.setState(function setDrawingManager() {\n      return {\n        drawingManager,\n      }\n    }, this.setDrawingManagerCallback)\n  }\n\n  componentDidUpdate(prevProps: DrawingManagerProps): void {\n    if (this.state.drawingManager !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.drawingManager,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.drawingManager !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.drawingManager)\n      }\n\n      unregisterEvents(this.registeredEvents)\n\n      this.state.drawingManager.setMap(null)\n    }\n  }\n\n  render(): JSX.Element {\n    return <></>\n  }\n}\n\nexport default DrawingManager\n","import * as React from 'react'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\n\nimport MapContext from '../../map-context'\nimport { HasMarkerAnchor } from '../../types'\n\nimport { Clusterer } from '@react-google-maps/marker-clusterer'\nimport { ReactNode } from 'react'\n\nconst eventMap = {\n  onAnimationChanged: 'animation_changed',\n  onClick: 'click',\n  onClickableChanged: 'clickable_changed',\n  onCursorChanged: 'cursor_changed',\n  onDblClick: 'dblclick',\n  onDrag: 'drag',\n  onDragEnd: 'dragend',\n  onDraggableChanged: 'draggable_changed',\n  onDragStart: 'dragstart',\n  onFlatChanged: 'flat_changed',\n  onIconChanged: 'icon_changed',\n  onMouseDown: 'mousedown',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n  onMouseUp: 'mouseup',\n  onPositionChanged: 'position_changed',\n  onRightClick: 'rightclick',\n  onShapeChanged: 'shape_changed',\n  onTitleChanged: 'title_changed',\n  onVisibleChanged: 'visible_changed',\n  onZindexChanged: 'zindex_changed',\n}\n\nconst updaterMap = {\n  animation(instance: google.maps.Marker, animation: google.maps.Animation): void {\n    instance.setAnimation(animation)\n  },\n  clickable(instance: google.maps.Marker, clickable: boolean): void {\n    instance.setClickable(clickable)\n  },\n  cursor(instance: google.maps.Marker, cursor: string): void {\n    instance.setCursor(cursor)\n  },\n  draggable(instance: google.maps.Marker, draggable: boolean): void {\n    instance.setDraggable(draggable)\n  },\n  icon(instance: google.maps.Marker, icon: string | google.maps.Icon | google.maps.Symbol): void {\n    instance.setIcon(icon)\n  },\n  label(instance: google.maps.Marker, label: string | google.maps.MarkerLabel): void {\n    instance.setLabel(label)\n  },\n  map(instance: google.maps.Marker, map: google.maps.Map): void {\n    instance.setMap(map)\n  },\n  opacity(instance: google.maps.Marker, opacity: number): void {\n    instance.setOpacity(opacity)\n  },\n  options(instance: google.maps.Marker, options: google.maps.MarkerOptions): void {\n    instance.setOptions(options)\n  },\n  position(\n    instance: google.maps.Marker,\n    position: google.maps.LatLng | google.maps.LatLngLiteral\n  ): void {\n    instance.setPosition(position)\n  },\n  shape(instance: google.maps.Marker, shape: google.maps.MarkerShape): void {\n    instance.setShape(shape)\n  },\n  title(instance: google.maps.Marker, title: string): void {\n    instance.setTitle(title)\n  },\n  visible(instance: google.maps.Marker, visible: boolean): void {\n    instance.setVisible(visible)\n  },\n  zIndex(instance: google.maps.Marker, zIndex: number): void {\n    instance.setZIndex(zIndex)\n  },\n}\n\ninterface MarkerState {\n  marker: google.maps.Marker | null\n}\n\nexport interface MarkerProps {\n  options?: google.maps.MarkerOptions\n  /** Start an animation. Any ongoing animation will be cancelled. Currently supported animations are: BOUNCE, DROP. Passing in null will cause any animation to stop. */\n  animation?: google.maps.Animation\n  /** If true, the marker receives mouse and touch events. Default value is true. */\n  clickable?: boolean\n  /** Mouse cursor to show on hover */\n  cursor?: string\n  /** If true, the marker can be dragged. Default value is false. */\n  draggable?: boolean\n  /** Icon for the foreground. If a string is provided, it is treated as though it were an Icon with the string as url. */\n  icon?: string | google.maps.Icon | google.maps.Symbol\n  /** Adds a label to the marker. The label can either be a string, or a MarkerLabel object. */\n  label?: string | google.maps.MarkerLabel\n  /** The marker's opacity between 0.0 and 1.0. */\n  opacity?: number\n\n  // required\n  /** Marker position. */\n  position: google.maps.LatLng | google.maps.LatLngLiteral\n  /** Image map region definition used for drag/click. */\n  shape?: google.maps.MarkerShape\n  /** Rollover text */\n  title?: string\n  /** If true, the marker is visible */\n  visible?: boolean\n  /** All markers are displayed on the map in order of their zIndex, with higher values displaying in front of markers with lower values. By default, markers are displayed according to their vertical position on screen, with lower markers appearing in front of markers further up the screen. */\n  zIndex?: number\n  /** Render prop that handles clustering markers */\n  clusterer?: Clusterer\n  /** Clusters are redrawn when a Marker is added unless noClustererRedraw? is set to true. */\n  noClustererRedraw?: boolean\n  /** This event is fired when the marker icon was clicked. */\n  onClick?: (e: google.maps.MouseEvent) => void\n  /** This event is fired when the marker's clickable property changes. */\n  onClickableChanged?: () => void\n  /** This event is fired when the marker's cursor property changes. */\n  onCursorChanged?: () => void\n  /** This event is fired when the marker's animation property changes. */\n  onAnimationChanged?: () => void\n  /** This event is fired when the marker icon was double clicked. */\n  onDblClick?: (e: google.maps.MouseEvent) => void\n  /** This event is repeatedly fired while the user drags the marker. */\n  onDrag?: (e: google.maps.MouseEvent) => void\n  /** This event is fired when the user stops dragging the marker. */\n  onDragEnd?: (e: google.maps.MouseEvent) => void\n  /** This event is fired when the marker's draggable property changes. */\n  onDraggableChanged?: () => void\n  /** This event is fired when the user starts dragging the marker. */\n  onDragStart?: (e: google.maps.MouseEvent) => void\n  /** This event is fired when the marker's flat property changes. */\n  onFlatChanged?: () => void\n  /** This event is fired when the marker icon property changes. */\n  onIconChanged?: () => void\n  /** This event is fired for a mousedown on the marker. */\n  onMouseDown?: (e: google.maps.MouseEvent) => void\n  /** This event is fired when the mouse leaves the area of the marker icon. */\n  onMouseOut?: (e: google.maps.MouseEvent) => void\n  /** This event is fired when the mouse enters the area of the marker icon. */\n  onMouseOver?: (e: google.maps.MouseEvent) => void\n  /** This event is fired for a mouseup on the marker. */\n  onMouseUp?: (e: google.maps.MouseEvent) => void\n  /** This event is fired when the marker position property changes. */\n  onPositionChanged?: () => void\n  /** This event is fired for a rightclick on the marker. */\n  onRightClick?: (e: google.maps.MouseEvent) => void\n  /** This event is fired when the marker's shape property changes. */\n  onShapeChanged?: () => void\n  /** This event is fired when the marker title property changes. */\n  onTitleChanged?: () => void\n  /** This event is fired when the marker's visible property changes. */\n  onVisibleChanged?: () => void\n  /** This event is fired when the marker's zIndex property changes. */\n  onZindexChanged?: () => void\n  /** This callback is called when the marker instance has loaded. It is called with the marker instance. */\n  onLoad?: (marker: google.maps.Marker) => void\n  /** This callback is called when the component unmounts. It is called with the marker instance. */\n  onUnmount?: (marker: google.maps.Marker) => void\n}\n\nexport class Marker extends React.PureComponent<MarkerProps, MarkerState> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  state: MarkerState = {\n    marker: null,\n  }\n\n  setMarkerCallback = (): void => {\n    if (this.state.marker !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.marker)\n    }\n  }\n\n  componentDidMount(): void {\n    const markerOptions = {\n      ...(this.props.options || {}),\n      ...(this.props.clusterer ? {} : { map: this.context }),\n      position: this.props.position,\n    }\n\n    const marker = new google.maps.Marker(markerOptions)\n\n    if (this.props.clusterer) {\n      this.props.clusterer.addMarker(\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        marker,\n        !!this.props.noClustererRedraw\n      )\n    } else {\n      marker.setMap(this.context)\n    }\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: marker,\n    })\n\n    this.setState(function setMarker() {\n      return {\n        marker,\n      }\n    }, this.setMarkerCallback)\n  }\n\n  componentDidUpdate(prevProps: MarkerProps): void {\n    if (this.state.marker !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.marker,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.marker !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.marker)\n      }\n\n      unregisterEvents(this.registeredEvents)\n\n      if (this.props.clusterer) {\n        this.props.clusterer.removeMarker(\n          // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n          this.state.marker,\n          !!this.props.noClustererRedraw\n        )\n      } else {\n        this.state.marker && this.state.marker.setMap(null)\n      }\n    }\n  }\n\n  render(): React.ReactNode {\n    let children: ReactNode | null = null\n    if(this.props.children) {\n      children = React.Children.map(this.props.children, child => {\n        if(!React.isValidElement<HasMarkerAnchor>(child)) {\n          return child;\n        }\n\n        let elementChild: React.ReactElement<HasMarkerAnchor> = child;\n        return React.cloneElement(elementChild, {anchor: this.state.marker});\n      })\n    }\n    return children || null\n  }\n}\n\nexport default Marker\n","/* eslint-disable filenames/match-exported */\nimport * as React from 'react'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\n\nimport MapContext from '../../map-context'\n\nimport {\n  Clusterer,\n  ClusterIconStyle,\n  Cluster,\n  ClustererOptions,\n  TCalculator,\n} from '@react-google-maps/marker-clusterer'\n\nconst eventMap = {\n  onClick: 'click',\n  onClusteringBegin: 'clusteringbegin',\n  onClusteringEnd: 'clusteringend',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n}\n\nconst updaterMap = {\n  averageCenter(instance: Clusterer, averageCenter: boolean): void {\n    instance.setAverageCenter(averageCenter)\n  },\n\n  batchSizeIE(instance: Clusterer, batchSizeIE: number): void {\n    instance.setBatchSizeIE(batchSizeIE)\n  },\n\n  calculator(instance: Clusterer, calculator: any): void {\n    instance.setCalculator(calculator)\n  },\n\n  clusterClass(instance: Clusterer, clusterClass: string): void {\n    instance.setClusterClass(clusterClass)\n  },\n\n  enableRetinaIcons(instance: Clusterer, enableRetinaIcons: boolean): void {\n    instance.setEnableRetinaIcons(enableRetinaIcons)\n  },\n\n  gridSize(instance: Clusterer, gridSize: number): void {\n    instance.setGridSize(gridSize)\n  },\n\n  ignoreHidden(instance: Clusterer, ignoreHidden: boolean): void {\n    instance.setIgnoreHidden(ignoreHidden)\n  },\n\n  imageExtension(instance: Clusterer, imageExtension: string): void {\n    instance.setImageExtension(imageExtension)\n  },\n\n  imagePath(instance: Clusterer, imagePath: string): void {\n    instance.setImagePath(imagePath)\n  },\n\n  imageSizes(instance: Clusterer, imageSizes: number[]): void {\n    instance.setImageSizes(imageSizes)\n  },\n\n  maxZoom(instance: Clusterer, maxZoom: number): void {\n    instance.setMaxZoom(maxZoom)\n  },\n\n  minimumClusterSize(instance: Clusterer, minimumClusterSize: number): void {\n    instance.setMinimumClusterSize(minimumClusterSize)\n  },\n\n  styles(instance: Clusterer, styles: ClusterIconStyle[]): void {\n    instance.setStyles(styles)\n  },\n\n  title(instance: Clusterer, title: string): void {\n    instance.setTitle(title)\n  },\n\n  zoomOnClick(instance: Clusterer, zoomOnClick: boolean): void {\n    instance.setZoomOnClick(zoomOnClick)\n  },\n}\n\ninterface ClustererState {\n  markerClusterer: Clusterer | null\n}\n\nexport interface ClustererProps {\n  // required\n  children: (markerClusterer: Clusterer) => React.ReactNode\n\n  options?: ClustererOptions // TODO: it could be undefined\n  /** Whether the position of a cluster marker should be the average position of all markers in the cluster. If set to false, the cluster marker is positioned at the location of the first marker added to the cluster. The default value is false. */\n  averageCenter?: boolean\n  /** When Internet Explorer is being used, markers are processed in several batches with a small delay inserted between each batch in an attempt to avoid Javascript timeout errors. Set this property to the number of markers to be processed in a single batch; select as high a number as you can without causing a timeout error in the browser. This number might need to be as low as 100 if 15,000 markers are being managed, for example. The default value is MarkerClusterer.BATCH_SIZE_IE. */\n  batchSizeIE?: number\n  /** The function used to determine the text to be displayed on a cluster marker and the index indicating which style to use for the cluster marker. The input parameters for the function are (1) the array of markers represented by a cluster marker and (2) the number of cluster icon styles. It returns a ClusterIconInfo object. The default calculator returns a text property which is the number of markers in the cluster and an index property which is one higher than the lowest integer such that 10^i exceeds the number of markers in the cluster, or the size of the styles array, whichever is less. The styles array element used has an index of index minus 1. For example, the default calculator returns a text value of \"125\" and an index of 3 for a cluster icon representing 125 markers so the element used in the styles array is 2. A calculator may also return a title property that contains the text of the tooltip to be used for the cluster marker. If title is not defined, the tooltip is set to the value of the title property for the MarkerClusterer. The default value is MarkerClusterer.CALCULATOR. */\n  calculator?: TCalculator\n  /** The name of the CSS class defining general styles for the cluster markers. Use this class to define CSS styles that are not set up by the code that processes the styles array. The default value is \"cluster\". */\n  clusterClass?: string\n  /** Whether to allow the use of cluster icons that have sizes that are some multiple (typically double) of their actual display size. Icons such as these look better when viewed on high-resolution monitors such as Apple's Retina displays. Note: if this property is true, sprites cannot be used as cluster icons. The default value is false. */\n  enableRetinaIcons?: boolean\n  /** The grid size of a cluster in pixels. The grid is a square. The default value is 60. */\n  gridSize?: number\n  /** Whether to ignore hidden markers in clusters. You may want to set this to true to ensure that hidden markers are not included in the marker count that appears on a cluster marker (this count is the value of the text property of the result returned by the default calculator). If set to true and you change the visibility of a marker being clustered, be sure to also call MarkerClusterer.repaint(). The default value is false. */\n  ignoreHidden?: boolean\n  /** The extension name for the cluster icon image files (e.g., \"png\" or \"jpg\"). The default value is MarkerClusterer.IMAGE_EXTENSION. */\n  imageExtension?: string\n  /** The full URL of the root name of the group of image files to use for cluster icons. The complete file name is of the form imagePath.imageExtension where n is the image file number (1, 2, etc.). The default value is MarkerClusterer.IMAGE_PATH. */\n  imagePath?: string\n  /** An array of numbers containing the widths of the group of imagePath.imageExtension image files. (The images are assumed to be square.) The default value is MarkerClusterer.IMAGE_SIZES. */\n  imageSizes?: number[]\n  /** The maximum zoom level at which clustering is enabled or null if clustering is to be enabled at all zoom levels. The default value is null. */\n  maxZoom?: number\n  /** The minimum number of markers needed in a cluster before the markers are hidden and a cluster marker appears. The default value is 2. */\n  minimumClusterSize?: number\n  /** An array of ClusterIconStyle elements defining the styles of the cluster markers to be used. The element to be used to style a given cluster marker is determined by the function defined by the calculator property. The default is an array of ClusterIconStyle elements whose properties are derived from the values for imagePath, imageExtension, and imageSizes. */\n  styles?: ClusterIconStyle[]\n  /** The tooltip to display when the mouse moves over a cluster marker. (Alternatively, you can use a custom calculator function to specify a different tooltip for each cluster marker.) The default value is \"\". */\n  title?: string\n  /** Whether to zoom the map when a cluster marker is clicked. You may want to set this to false if you have installed a handler for the click event and it deals with zooming on its own. The default value is true. */\n  zoomOnClick?: boolean\n  /** This event is fired when a cluster marker is clicked. */\n  onClick?: (cluster: Cluster) => void\n  /** This event is fired when the MarkerClusterer begins clustering markers. */\n  onClusteringBegin?: (markerClusterer: Clusterer) => void\n  /** This event is fired when the MarkerClusterer stops clustering markers. */\n  onClusteringEnd?: (markerClusterer: Clusterer) => void\n  /** \tThis event is fired when the mouse moves over a cluster marker. */\n  onMouseOver?: (cluster: Cluster) => void\n  /** This event is fired when the mouse moves out of a cluster marker. */\n  onMouseOut?: (cluster: Cluster) => void\n  /** This callback is called when the markerClusterer instance has loaded. It is called with the markerClusterer instance. */\n  onLoad?: (markerClusterer: Clusterer) => void\n  /** This callback is called when the component unmounts. It is called with the markerClusterer instance. */\n  onUnmount?: (markerClusterer: Clusterer) => void\n}\n\nexport class ClustererComponent extends React.PureComponent<ClustererProps, ClustererState> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  state: ClustererState = {\n    markerClusterer: null,\n  }\n\n  setClustererCallback = (): void => {\n    if (this.state.markerClusterer !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.markerClusterer)\n    }\n  }\n\n  componentDidMount(): void {\n    if (this.context) {\n      const markerClusterer = new Clusterer(this.context, [], this.props.options)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps: {},\n        nextProps: this.props,\n        instance: markerClusterer,\n      })\n\n      this.setState(function setClusterer(): ClustererState {\n        return {\n          markerClusterer,\n        }\n      }, this.setClustererCallback)\n    }\n  }\n\n  componentDidUpdate(prevProps: ClustererProps): void {\n    if (this.state.markerClusterer) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.markerClusterer,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.markerClusterer !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.markerClusterer)\n      }\n\n      unregisterEvents(this.registeredEvents)\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      this.state.markerClusterer.setMap(null)\n    }\n  }\n\n  render(): React.ReactNode {\n    return this.state.markerClusterer !== null\n      ? this.props.children(this.state.markerClusterer)\n      : null\n  }\n}\n\nexport default ClustererComponent\n","/* global google */\n/* eslint-disable filenames/match-exported */\nimport * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport invariant from 'invariant'\nimport {\n  InfoBox as GoogleMapsInfoBox,\n  InfoBoxOptions as GoogleMapsInfoBoxOptions,\n} from '@react-google-maps/infobox'\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\nimport MapContext from '../../map-context'\n\nconst eventMap = {\n  onCloseClick: 'closeclick',\n  onContentChanged: 'content_changed',\n  onDomReady: 'domready',\n  onPositionChanged: 'position_changed',\n  onZindexChanged: 'zindex_changed',\n}\n\nconst updaterMap = {\n  options(instance: GoogleMapsInfoBox, options: GoogleMapsInfoBoxOptions): void {\n    instance.setOptions(options)\n  },\n  position(\n    instance: GoogleMapsInfoBox,\n    position: google.maps.LatLng | google.maps.LatLngLiteral\n  ): void {\n    if (position instanceof google.maps.LatLng) {\n      instance.setPosition(position)\n    } else {\n      instance.setPosition(new google.maps.LatLng(position.lat, position.lng))\n    }\n  },\n  visible(instance: GoogleMapsInfoBox, visible: boolean): void {\n    instance.setVisible(visible)\n  },\n  zIndex(instance: GoogleMapsInfoBox, zIndex: number): void {\n    instance.setZIndex(zIndex)\n  },\n}\n\ntype InfoBoxOptions = Omit<GoogleMapsInfoBoxOptions, 'position'> & {\n  position?: google.maps.LatLng | google.maps.LatLngLiteral\n}\n\ninterface InfoBoxState {\n  infoBox: GoogleMapsInfoBox | null\n}\n\nexport interface InfoBoxProps {\n  /** Can be any MVCObject that exposes a LatLng position property and optionally a Point anchorPoint property for calculating the pixelOffset. The anchorPoint is the offset from the anchor's position to the tip of the InfoBox. */\n  anchor?: google.maps.MVCObject\n  options?: InfoBoxOptions\n  /** The LatLng at which to display this InfoBox. If the InfoBox is opened with an anchor, the anchor's position will be used instead. */\n  position?: google.maps.LatLng | google.maps.LatLngLiteral\n  /** All InfoBoxes are displayed on the map in order of their zIndex, with higher values displaying in front of InfoBoxes with lower values. By default, InfoBoxes are displayed according to their latitude, with InfoBoxes of lower latitudes appearing in front of InfoBoxes at higher latitudes. InfoBoxes are always displayed in front of markers. */\n  zIndex?: number\n  /** This event is fired when the close button was clicked. */\n  onCloseClick?: () => void\n  /** This event is fired when the <div> containing the InfoBox's content is attached to the DOM. You may wish to monitor this event if you are building out your info window content dynamically. */\n  onDomReady?: () => void\n  /** This event is fired when the content property changes. */\n  onContentChanged?: () => void\n  /** This event is fired when the position property changes. */\n  onPositionChanged?: () => void\n  /** This event is fired when the InfoBox's zIndex changes. */\n  onZindexChanged?: () => void\n  /** This callback is called when the infoBox instance has loaded. It is called with the infoBox instance. */\n  onLoad?: (infoBox: GoogleMapsInfoBox) => void\n  /** This callback is called when the component unmounts. It is called with the infoBox instance. */\n  onUnmount?: (infoBox: GoogleMapsInfoBox) => void\n}\n\nexport class InfoBoxComponent extends React.PureComponent<InfoBoxProps, InfoBoxState> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n  containerElement: HTMLElement | null = null\n\n  state: InfoBoxState = {\n    infoBox: null,\n  }\n\n  open = (infoBox: GoogleMapsInfoBox, anchor?: google.maps.MVCObject): void => {\n    if (anchor) {\n      infoBox.open(this.context, anchor)\n    } else if (infoBox.getPosition()) {\n      infoBox.open(this.context)\n    } else {\n      invariant(false, 'You must provide either an anchor or a position prop for <InfoBox>.')\n    }\n  }\n\n  setInfoBoxCallback = (): void => {\n    const { anchor, onLoad } = this.props\n    const { infoBox } = this.state\n\n    if (infoBox !== null && this.containerElement !== null) {\n      infoBox.setContent(this.containerElement)\n      this.open(infoBox, anchor)\n\n      if (onLoad) {\n        onLoad(infoBox)\n      }\n    }\n  }\n\n  componentDidMount(): void {\n    const { options } = this.props\n    const { position, ...infoBoxOptions }: InfoBoxOptions = options || {}\n\n    let positionLatLng: google.maps.LatLng | undefined\n    if (position && !(position instanceof google.maps.LatLng)) {\n      positionLatLng = new google.maps.LatLng(position.lat, position.lng)\n    }\n\n    const infoBox = new GoogleMapsInfoBox({\n      ...infoBoxOptions,\n      ...(positionLatLng ? { position: positionLatLng } : {}),\n    })\n\n    this.containerElement = document.createElement('div')\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: infoBox,\n    })\n\n    this.setState({ infoBox }, this.setInfoBoxCallback)\n  }\n\n  componentDidUpdate(prevProps: InfoBoxProps): void {\n    const { infoBox } = this.state\n\n    if (infoBox !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: infoBox,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    const { onUnmount } = this.props\n    const { infoBox } = this.state\n\n    if (infoBox !== null) {\n      if (onUnmount) {\n        onUnmount(infoBox)\n      }\n\n      unregisterEvents(this.registeredEvents)\n      infoBox.close()\n    }\n  }\n\n  render(): React.ReactPortal | null {\n    if (!this.containerElement) {\n      return null\n    }\n\n    return ReactDOM.createPortal(React.Children.only(this.props.children), this.containerElement)\n  }\n}\n\nexport default InfoBoxComponent\n","/* global google */\nimport * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\n\nimport MapContext from '../../map-context'\nimport invariant from 'invariant'\n\nconst eventMap = {\n  onCloseClick: 'closeclick',\n  onContentChanged: 'content_changed',\n  onDomReady: 'domready',\n  onPositionChanged: 'position_changed',\n  onZindexChanged: 'zindex_changed',\n}\n\nconst updaterMap = {\n  options(instance: google.maps.InfoWindow, options: google.maps.InfoWindowOptions): void {\n    instance.setOptions(options)\n  },\n  position(\n    instance: google.maps.InfoWindow,\n    position: google.maps.LatLng | google.maps.LatLngLiteral\n  ): void {\n    instance.setPosition(position)\n  },\n  zIndex(instance: google.maps.InfoWindow, zIndex: number): void {\n    instance.setZIndex(zIndex)\n  },\n}\n\ninterface InfoWindowState {\n  infoWindow: google.maps.InfoWindow | null\n}\n\nexport interface InfoWindowProps {\n  /** Can be any MVCObject that exposes a LatLng position property and optionally a Point anchorPoint property for calculating the pixelOffset. The anchorPoint is the offset from the anchor's position to the tip of the InfoWindow. */\n  anchor?: google.maps.MVCObject\n  options?: google.maps.InfoWindowOptions\n  /** The LatLng at which to display this InfoWindow. If the InfoWindow is opened with an anchor, the anchor's position will be used instead. */\n  position?: google.maps.LatLng | google.maps.LatLngLiteral\n  /** All InfoWindows are displayed on the map in order of their zIndex, with higher values displaying in front of InfoWindows with lower values. By default, InfoWindows are displayed according to their latitude, with InfoWindows of lower latitudes appearing in front of InfoWindows at higher latitudes. InfoWindows are always displayed in front of markers. */\n  zIndex?: number\n  /** This event is fired when the close button was clicked. */\n  onCloseClick?: () => void\n  /** This event is fired when the <div> containing the InfoWindow's content is attached to the DOM. You may wish to monitor this event if you are building out your info window content dynamically. */\n  onDomReady?: () => void\n  /** This event is fired when the content property changes. */\n  onContentChanged?: () => void\n  /** This event is fired when the position property changes. */\n  onPositionChanged?: () => void\n  /** This event is fired when the InfoWindow's zIndex changes. */\n  onZindexChanged?: () => void\n  /** This callback is called when the infoWindow instance has loaded. It is called with the infoWindow instance. */\n  onLoad?: (infoWindow: google.maps.InfoWindow) => void\n  /** This callback is called when the component unmounts. It is called with the infoWindow instance. */\n  onUnmount?: (infoWindow: google.maps.InfoWindow) => void\n}\n\nexport class InfoWindow extends React.PureComponent<InfoWindowProps, InfoWindowState> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n  containerElement: HTMLElement | null = null\n\n  state: InfoWindowState = {\n    infoWindow: null,\n  }\n\n  open = (infoWindow: google.maps.InfoWindow, anchor?: google.maps.MVCObject): void => {\n    if (anchor) {\n      infoWindow.open(this.context, anchor)\n    } else if (infoWindow.getPosition()) {\n      infoWindow.open(this.context)\n    } else {\n      invariant(\n        false,\n        `You must provide either an anchor (typically render it inside a <Marker>) or a position props for <InfoWindow>.`\n      )\n    }\n  }\n\n  setInfoWindowCallback = (): void => {\n    if (this.state.infoWindow !== null && this.containerElement !== null) {\n      this.state.infoWindow.setContent(this.containerElement)\n\n      this.open(this.state.infoWindow, this.props.anchor)\n\n      if (this.props.onLoad) {\n        this.props.onLoad(this.state.infoWindow)\n      }\n    }\n  }\n\n  componentDidMount(): void {\n    const infoWindow = new google.maps.InfoWindow({\n      ...(this.props.options || {}),\n    })\n\n    this.containerElement = document.createElement('div')\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: infoWindow,\n    })\n\n    this.setState(function setInfoWindow() {\n      return {\n        infoWindow,\n      }\n    }, this.setInfoWindowCallback)\n  }\n\n  componentDidUpdate(prevProps: InfoWindowProps): void {\n    if (this.state.infoWindow !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.infoWindow,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.infoWindow !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.state.infoWindow.close()\n    }\n  }\n\n  render(): React.ReactPortal | React.ReactNode {\n    return this.containerElement ? (\n      ReactDOM.createPortal(React.Children.only(this.props.children), this.containerElement)\n    ) : (\n      <></>\n    )\n  }\n}\n\nexport default InfoWindow\n","import * as React from 'react'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\n\nimport MapContext from '../../map-context'\n\nconst eventMap = {\n  onClick: 'click',\n  onDblClick: 'dblclick',\n  onDrag: 'drag',\n  onDragEnd: 'dragend',\n  onDragStart: 'dragstart',\n  onMouseDown: 'mousedown',\n  onMouseMove: 'mousemove',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n  onMouseUp: 'mouseup',\n  onRightClick: 'rightclick',\n}\n\nconst updaterMap = {\n  draggable(instance: google.maps.Polyline, draggable: boolean): void {\n    instance.setDraggable(draggable)\n  },\n  editable(instance: google.maps.Polyline, editable: boolean): void {\n    instance.setEditable(editable)\n  },\n  map(instance: google.maps.Polyline, map: google.maps.Map): void {\n    instance.setMap(map)\n  },\n  options(instance: google.maps.Polyline, options: google.maps.PolylineOptions): void {\n    instance.setOptions(options)\n  },\n  path(\n    instance: google.maps.Polyline,\n    path:\n      | google.maps.MVCArray<google.maps.LatLng>\n      | google.maps.LatLng[]\n      | google.maps.LatLngLiteral[]\n  ): void {\n    instance.setPath(path)\n  },\n  visible(instance: google.maps.Polyline, visible: boolean): void {\n    instance.setVisible(visible)\n  },\n}\n\ninterface PolylineState {\n  polyline: google.maps.Polyline | null\n}\n\nexport interface PolylineProps {\n  options?: google.maps.PolylineOptions\n  /** If set to true, the user can drag this shape over the map. The geodesic property defines the mode of dragging. */\n  draggable?: boolean\n  /** If set to true, the user can edit this shape by dragging the control points shown at the vertices and on each segment. */\n  editable?: boolean\n  /** Hides this poly if set to false. */\n  visible?: boolean\n  /** Sets the path. The ordered sequence of coordinates of the Polyline. This path may be specified using either a simple array of LatLngs, or an MVCArray of LatLngs. Note that if you pass a simple array, it will be converted to an MVCArray Inserting or removing LatLngs in the MVCArray will automatically update the polyline on the map. */\n  path?:\n    | google.maps.MVCArray<google.maps.LatLng>\n    | google.maps.LatLng[]\n    | google.maps.LatLngLiteral[]\n  /** This event is fired when the DOM dblclick event is fired on the Polyline. */\n  onDblClick?: (e: google.maps.MouseEvent) => void\n  /** This event is fired when the user stops dragging the polyline. */\n  onDragEnd?: (e: google.maps.MouseEvent) => void\n  /** This event is fired when the user starts dragging the polyline. */\n  onDragStart?: (e: google.maps.MouseEvent) => void\n  /** This event is fired when the DOM mousedown event is fired on the Polyline. */\n  onMouseDown?: (e: google.maps.MouseEvent) => void\n  /** This event is fired when the DOM mousemove event is fired on the Polyline. */\n  onMouseMove?: (e: google.maps.MouseEvent) => void\n  /** This event is fired on Polyline mouseout. */\n  onMouseOut?: (e: google.maps.MouseEvent) => void\n  /** This event is fired on Polyline mouseover. */\n  onMouseOver?: (e: google.maps.MouseEvent) => void\n  /** This event is fired when the DOM mouseup event is fired on the Polyline. */\n  onMouseUp?: (e: google.maps.MouseEvent) => void\n  /** This event is fired when the Polyline is right-clicked on. */\n  onRightClick?: (e: google.maps.MouseEvent) => void\n  /** This event is fired when the DOM click event is fired on the Polyline. */\n  onClick?: (e: google.maps.MouseEvent) => void\n  /** This event is repeatedly fired while the user drags the polyline. */\n  onDrag?: (e: google.maps.MouseEvent) => void\n  /** This callback is called when the polyline instance has loaded. It is called with the polyline instance. */\n  onLoad?: (polyline: google.maps.Polyline) => void\n  /** This callback is called when the component unmounts. It is called with the polyline instance. */\n  onUnmount?: (polyline: google.maps.Polyline) => void\n}\n\nexport class Polyline extends React.PureComponent<PolylineProps, PolylineState> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  state: PolylineState = {\n    polyline: null,\n  }\n\n  setPolylineCallback = (): void => {\n    if (this.state.polyline !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.polyline)\n    }\n  }\n\n  componentDidMount(): void {\n    const polyline = new google.maps.Polyline({\n      ...(this.props.options || {}),\n      map: this.context,\n    })\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: polyline,\n    })\n\n    this.setState(function setPolyline() {\n      return {\n        polyline,\n      }\n    }, this.setPolylineCallback)\n  }\n\n  componentDidUpdate(prevProps: PolylineProps): void {\n    if (this.state.polyline !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.polyline,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.polyline !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.polyline)\n      }\n\n      unregisterEvents(this.registeredEvents)\n\n      this.state.polyline.setMap(null)\n    }\n  }\n\n  render(): React.ReactNode {\n    return <></>\n  }\n}\n\nexport default Polyline\n","/* global google */\nimport * as React from 'react'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\n\nimport MapContext from '../../map-context'\n\nconst eventMap = {\n  onClick: 'click',\n  onDblClick: 'dblclick',\n  onDrag: 'drag',\n  onDragEnd: 'dragend',\n  onDragStart: 'dragstart',\n  onMouseDown: 'mousedown',\n  onMouseMove: 'mousemove',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n  onMouseUp: 'mouseup',\n  onRightClick: 'rightclick',\n}\n\nconst updaterMap = {\n  draggable(instance: google.maps.Polygon, draggable: boolean): void {\n    instance.setDraggable(draggable)\n  },\n  editable(instance: google.maps.Polygon, editable: boolean): void {\n    instance.setEditable(editable)\n  },\n  map(instance: google.maps.Polygon, map: google.maps.Map): void {\n    instance.setMap(map)\n  },\n  options(instance: google.maps.Polygon, options: google.maps.PolygonOptions): void {\n    instance.setOptions(options)\n  },\n  path(\n    instance: google.maps.Polygon,\n    path:\n      | google.maps.MVCArray<google.maps.LatLng>\n      | google.maps.LatLng[]\n      | google.maps.LatLngLiteral[]\n  ): void {\n    instance.setPath(path)\n  },\n\n  paths(\n    instance: google.maps.Polygon,\n    paths:\n      | google.maps.MVCArray<google.maps.LatLng>\n      | google.maps.MVCArray<google.maps.MVCArray<google.maps.LatLng>>\n      | google.maps.LatLng[]\n      | google.maps.LatLng[][]\n      | google.maps.LatLngLiteral[]\n      | google.maps.LatLngLiteral[][]\n  ): void {\n    instance.setPaths(paths)\n  },\n\n  visible(instance: google.maps.Polygon, visible: boolean): void {\n    instance.setVisible(visible)\n  },\n}\n\ninterface PolygonState {\n  polygon: google.maps.Polygon | null\n}\n\nexport interface PolygonProps {\n  options?: google.maps.PolygonOptions\n  /** If set to true, the user can drag this shape over the map. The geodesic property defines the mode of dragging. */\n  draggable?: boolean\n  /** If set to true, the user can edit this shape by dragging the control points shown at the vertices and on each segment. */\n  editable?: boolean\n  /** Hides this poly if set to false. */\n  visible?: boolean\n  /** Sets the first path. See Paths for more details. */\n  path?:\n    | google.maps.MVCArray<google.maps.LatLng>\n    | google.maps.LatLng[]\n    | google.maps.LatLngLiteral[]\n  /** Sets the path for this polygon. The ordered sequence of coordinates that designates a closed loop. Unlike polylines, a polygon may consist of one or more paths. As a result, the paths property may specify one or more arrays of LatLng coordinates. Paths are closed automatically; do not repeat the first vertex of the path as the last vertex. Simple polygons may be defined using a single array of LatLngs. More complex polygons may specify an array of arrays. Any simple arrays are converted into MVCArrays. Inserting or removing LatLngs from the MVCArray will automatically update the polygon on the map. */\n  paths?:\n    | google.maps.MVCArray<google.maps.LatLng>\n    | google.maps.MVCArray<google.maps.MVCArray<google.maps.LatLng>>\n    | google.maps.LatLng[]\n    | google.maps.LatLng[][]\n    | google.maps.LatLngLiteral[]\n    | google.maps.LatLngLiteral[][]\n  /** This event is fired when the DOM dblclick event is fired on the Polygon. */\n  onDblClick?: (e: google.maps.MouseEvent) => void\n  /** This event is fired when the user stops dragging the polygon. */\n  onDragEnd?: (e: google.maps.MouseEvent) => void\n  /** This event is fired when the user starts dragging the polygon. */\n  onDragStart?: (e: google.maps.MouseEvent) => void\n  /** This event is fired when the DOM mousedown event is fired on the Polygon. */\n  onMouseDown?: (e: google.maps.MouseEvent) => void\n  /** This event is fired when the DOM mousemove event is fired on the Polygon. */\n  onMouseMove?: (e: google.maps.MouseEvent) => void\n  /** This event is fired on Polygon mouseout. */\n  onMouseOut?: (e: google.maps.MouseEvent) => void\n  /** This event is fired on Polygon mouseover. */\n  onMouseOver?: (e: google.maps.MouseEvent) => void\n  /** This event is fired when the DOM mouseup event is fired on the Polygon. */\n  onMouseUp?: (e: google.maps.MouseEvent) => void\n  /** This event is fired when the Polygon is right-clicked on. */\n  onRightClick?: (e: google.maps.MouseEvent) => void\n  /** This event is fired when the DOM click event is fired on the Polygon. */\n  onClick?: (e: google.maps.MouseEvent) => void\n  /** This event is repeatedly fired while the user drags the polygon. */\n  onDrag?: (e: google.maps.MouseEvent) => void\n  /** This callback is called when the polygon instance has loaded. It is called with the polygon instance. */\n  onLoad?: (polygon: google.maps.Polygon) => void\n  /** This callback is called when the component unmounts. It is called with the polygon instance. */\n  onUnmount?: (polygon: google.maps.Polygon) => void\n}\n\nexport class Polygon extends React.PureComponent<PolygonProps, PolygonState> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  state: PolygonState = {\n    polygon: null,\n  }\n\n  setPolygonCallback = (): void => {\n    if (this.state.polygon !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.polygon)\n    }\n  }\n\n  componentDidMount(): void {\n    const polygon = new google.maps.Polygon({\n      ...(this.props.options || {}),\n      map: this.context,\n    })\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: polygon,\n    })\n\n    this.setState(function setPolygon() {\n      return {\n        polygon,\n      }\n    }, this.setPolygonCallback)\n  }\n\n  componentDidUpdate(prevProps: PolygonProps): void {\n    if (this.state.polygon !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.polygon,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.polygon !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.polygon)\n      }\n\n      unregisterEvents(this.registeredEvents)\n\n      this.state.polygon && this.state.polygon.setMap(null)\n    }\n  }\n\n  render(): React.ReactNode {\n    return null\n  }\n}\n\nexport default Polygon\n","import * as React from 'react'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\nimport MapContext from '../../map-context'\n\nconst eventMap = {\n  onBoundsChanged: 'bounds_changed',\n  onClick: 'click',\n  onDblClick: 'dblclick',\n  onDrag: 'drag',\n  onDragEnd: 'dragend',\n  onDragStart: 'dragstart',\n  onMouseDown: 'mousedown',\n  onMouseMove: 'mousemove',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n  onMouseUp: 'mouseup',\n  onRightClick: 'rightclick',\n}\n\nconst updaterMap = {\n  bounds(\n    instance: google.maps.Rectangle,\n    bounds: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral\n  ): void {\n    instance.setBounds(bounds)\n  },\n  draggable(instance: google.maps.Rectangle, draggable: boolean): void {\n    instance.setDraggable(draggable)\n  },\n  editable(instance: google.maps.Rectangle, editable: boolean): void {\n    instance.setEditable(editable)\n  },\n  map(instance: google.maps.Rectangle, map: google.maps.Map): void {\n    instance.setMap(map)\n  },\n  options(instance: google.maps.Rectangle, options: google.maps.RectangleOptions): void {\n    instance.setOptions(options)\n  },\n  visible(instance: google.maps.Rectangle, visible: boolean): void {\n    instance.setVisible(visible)\n  },\n}\n\ninterface RectangleState {\n  rectangle: google.maps.Rectangle | null\n}\n\nexport interface RectangleProps {\n  options?: google.maps.RectangleOptions\n  /** Sets the bounds of this rectangle. */\n  bounds?: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral\n  /** If set to true, the user can drag this rectangle over the map. */\n  draggable?: boolean\n  /** If set to true, the user can edit this rectangle by dragging the control points shown at the corners and on each edge. */\n  editable?: boolean\n  /** Hides this rectangle if set to false. */\n  visible?: boolean\n  /** Indicates whether this Rectangle handles mouse events. Defaults to true. */\n  clickable?: boolean\n  /** This event is fired when the DOM dblclick event is fired on the rectangle. */\n  onDblClick?: (e: google.maps.MouseEvent) => void\n  /** This event is fired when the user stops dragging the rectangle. */\n  onDragEnd?: (e: google.maps.MouseEvent) => void\n  /** This event is fired when the user starts dragging the rectangle. */\n  onDragStart?: (e: google.maps.MouseEvent) => void\n  /** This event is fired when the DOM mousedown event is fired on the rectangle. */\n  onMouseDown?: (e: google.maps.MouseEvent) => void\n  /** This event is fired when the DOM mousemove event is fired on the rectangle. */\n  onMouseMove?: (e: google.maps.MouseEvent) => void\n  /** This event is fired on rectangle mouseout. */\n  onMouseOut?: (e: google.maps.MouseEvent) => void\n  /** This event is fired on rectangle mouseover. */\n  onMouseOver?: (e: google.maps.MouseEvent) => void\n  /** This event is fired when the DOM mouseup event is fired on the rectangle. */\n  onMouseUp?: (e: google.maps.MouseEvent) => void\n  /** This event is fired when the rectangle is right-clicked on. */\n  onRightClick?: (e: google.maps.MouseEvent) => void\n  /** This event is fired when the DOM click event is fired on the rectangle. */\n  onClick?: (e: google.maps.MouseEvent) => void\n  /** This event is repeatedly fired while the user drags the rectangle. */\n  onDrag?: (e: google.maps.MouseEvent) => void\n  /** This event is fired when the rectangle's bounds are changed. */\n  onBoundsChanged?: () => void\n  /** This callback is called when the rectangle instance has loaded. It is called with the rectangle instance. */\n  onLoad?: (rectangle: google.maps.Rectangle) => void\n  /** This callback is called when the component unmounts. It is called with the rectangle instance. */\n  onUnmount?: (rectangle: google.maps.Rectangle) => void\n}\n\nexport class Rectangle extends React.PureComponent<RectangleProps, RectangleState> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  state: RectangleState = {\n    rectangle: null,\n  }\n\n  setRectangleCallback = (): void => {\n    if (this.state.rectangle !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.rectangle)\n    }\n  }\n\n  componentDidMount(): void {\n    const rectangle = new google.maps.Rectangle({\n      ...(this.props.options || {}),\n      map: this.context,\n    })\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: rectangle,\n    })\n\n    this.setState(function setRectangle() {\n      return {\n        rectangle,\n      }\n    }, this.setRectangleCallback)\n  }\n\n  componentDidUpdate(prevProps: RectangleProps): void {\n    if (this.state.rectangle !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.rectangle,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.rectangle !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.rectangle)\n      }\n\n      unregisterEvents(this.registeredEvents)\n\n      this.state.rectangle.setMap(null)\n    }\n  }\n\n  render(): React.ReactNode {\n    return <></>\n  }\n}\n\nexport default Rectangle\n","import * as React from 'react'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\n\nimport MapContext from '../../map-context'\n\nconst eventMap = {\n  onCenterChanged: 'center_changed',\n  onClick: 'click',\n  onDblClick: 'dblclick',\n  onDrag: 'drag',\n  onDragEnd: 'dragend',\n  onDragStart: 'dragstart',\n  onMouseDown: 'mousedown',\n  onMouseMove: 'mousemove',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n  onMouseUp: 'mouseup',\n  onRadiusChanged: 'radius_changed',\n  onRightClick: 'rightclick',\n}\n\nconst updaterMap = {\n  center(instance: google.maps.Circle, center: google.maps.LatLng): void {\n    instance.setCenter(center)\n  },\n  draggable(instance: google.maps.Circle, draggable: boolean): void {\n    instance.setDraggable(draggable)\n  },\n  editable(instance: google.maps.Circle, editable: boolean): void {\n    instance.setEditable(editable)\n  },\n  map(instance: google.maps.Circle, map: google.maps.Map): void {\n    instance.setMap(map)\n  },\n  options(instance: google.maps.Circle, options: google.maps.CircleOptions): void {\n    instance.setOptions(options)\n  },\n  radius(instance: google.maps.Circle, radius: number): void {\n    instance.setRadius(radius)\n  },\n  visible(instance: google.maps.Circle, visible: boolean): void {\n    instance.setVisible(visible)\n  },\n}\n\ninterface CircleState {\n  circle: google.maps.Circle | null\n}\n\nexport interface CircleProps {\n  options?: google.maps.CircleOptions\n\n  // required\n  /** sets the center of the circle */\n  center: google.maps.LatLng | google.maps.LatLngLiteral\n\n  // required\n  /** Sets the radius of this circle (in meters) */\n  radius: number\n  /** If set to true, the user can drag this circle over the map */\n  draggable?: boolean\n  /** If set to true, the user can edit this circle by dragging the control points shown at the center and around the circumference of the circle. */\n  editable?: boolean\n  /** Hides this circle if set to false. */\n  visible?: boolean\n  /** This event is fired when the DOM dblclick event is fired on the circle. */\n  onDblClick?: (e: google.maps.MouseEvent) => void\n  /** This event is fired when the user stops dragging the circle. */\n  onDragEnd?: (e: google.maps.MouseEvent) => void\n  /**  This event is fired when the user starts dragging the circle. */\n  onDragStart?: (e: google.maps.MouseEvent) => void\n  /** This event is fired when the DOM mousedown event is fired on the circle. */\n  onMouseDown?: (e: google.maps.MouseEvent) => void\n  /** This event is fired when the DOM mousemove event is fired on the circle. */\n  onMouseMove?: (e: google.maps.MouseEvent) => void\n  /** This event is fired on circle mouseout. */\n  onMouseOut?: (e: google.maps.MouseEvent) => void\n  /** This event is fired on circle mouseover. */\n  onMouseOver?: (e: google.maps.MouseEvent) => void\n  /** This event is fired when the DOM mouseup event is fired on the circle. */\n  onMouseUp?: (e: google.maps.MouseEvent) => void\n  /** This event is fired when the circle is right-clicked on. */\n  onRightClick?: (e: google.maps.MouseEvent) => void\n  /** This event is fired when the circle's center is changed. */\n  onCenterChanged?: () => void\n  /** This event is fired when the DOM click event is fired on the circle. */\n  onClick?: (e: google.maps.MouseEvent) => void\n  /** This event is repeatedly fired while the user drags the circle. */\n  onDrag?: (e: google.maps.MouseEvent) => void\n  /** This event is fired when the circle's radius is changed. */\n  onRadiusChanged?: () => void\n  /** This callback is called when the circle instance has loaded. It is called with the circle instance. */\n  onLoad?: (circle: google.maps.Circle) => void\n  /** This callback is called when the component unmounts. It is called with the circle instance. */\n  onUnmount?: (circle: google.maps.Circle) => void\n}\n\nexport class Circle extends React.PureComponent<CircleProps, CircleState> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  state: CircleState = {\n    circle: null,\n  }\n\n  setCircleCallback = (): void => {\n    if (this.state.circle !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.circle)\n    }\n  }\n\n  componentDidMount(): void {\n    const circle = new google.maps.Circle({\n      ...(this.props.options || {}),\n      map: this.context,\n    })\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: circle,\n    })\n\n    this.setState(function setCircle() {\n      return {\n        circle,\n      }\n    }, this.setCircleCallback)\n  }\n\n  componentDidUpdate(prevProps: CircleProps): void {\n    if (this.state.circle !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.circle,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.circle !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.circle)\n      }\n\n      unregisterEvents(this.registeredEvents)\n\n      this.state.circle && this.state.circle.setMap(null)\n    }\n  }\n\n  render(): JSX.Element {\n    return <></>\n  }\n}\n\nexport default Circle\n","import * as React from 'react'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\n\nimport MapContext from '../../map-context'\n\nconst eventMap = {\n  onAddFeature: 'addfeature',\n  onClick: 'click',\n  onDblClick: 'dblclick',\n  onMouseDown: 'mousedown',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n  onMouseUp: 'mouseup',\n  onRemoveFeature: 'removefeature',\n  onRemoveProperty: 'removeproperty',\n  onRightClick: 'rightclick',\n  onSetGeometry: 'setgeometry',\n  onSetProperty: 'setproperty',\n}\n\nconst updaterMap = {\n  add(\n    instance: google.maps.Data,\n    features: google.maps.Data.Feature | google.maps.Data.FeatureOptions\n  ): void {\n    instance.add(features)\n  },\n  addgeojson(\n    instance: google.maps.Data,\n    geojson: object,\n    options?: google.maps.Data.GeoJsonOptions\n  ): void {\n    instance.addGeoJson(geojson, options)\n  },\n  contains(instance: google.maps.Data, feature: google.maps.Data.Feature): void {\n    instance.contains(feature)\n  },\n  foreach(instance: google.maps.Data, callback: (feature: google.maps.Data.Feature) => void): void {\n    instance.forEach(callback)\n  },\n  loadgeojson(\n    instance: google.maps.Data,\n    url: string,\n    options: google.maps.Data.GeoJsonOptions,\n    callback: (features: google.maps.Data.Feature[]) => void\n  ): void {\n    instance.loadGeoJson(url, options, callback)\n  },\n  overridestyle(\n    instance: google.maps.Data,\n    feature: google.maps.Data.Feature,\n    style: google.maps.Data.StyleOptions\n  ): void {\n    instance.overrideStyle(feature, style)\n  },\n  remove(instance: google.maps.Data, feature: google.maps.Data.Feature): void {\n    instance.remove(feature)\n  },\n  revertstyle(instance: google.maps.Data, feature: google.maps.Data.Feature): void {\n    instance.revertStyle(feature)\n  },\n  controlposition(instance: google.maps.Data, controlPosition: google.maps.ControlPosition): void {\n    instance.setControlPosition(controlPosition)\n  },\n  controls(instance: google.maps.Data, controls: google.maps.DrawingMode[] | null): void {\n    instance.setControls(controls)\n  },\n  drawingmode(instance: google.maps.Data, mode: google.maps.DrawingMode): void {\n    instance.setDrawingMode(mode)\n  },\n  map(instance: google.maps.Data, map: google.maps.Map): void {\n    instance.setMap(map)\n  },\n  style(\n    instance: google.maps.Data,\n    style: google.maps.Data.StylingFunction | google.maps.Data.StyleOptions\n  ): void {\n    instance.setStyle(style)\n  },\n  togeojson(instance: google.maps.Data, callback: (feature: object) => void): void {\n    instance.toGeoJson(callback)\n  },\n}\n\ninterface DataState {\n  data: google.maps.Data | null\n}\nexport interface DataProps {\n  options?: google.maps.Data.DataOptions\n  /**  This event is fired when a feature is added to the collection. */\n  onAddFeature?: (e: google.maps.Data.AddFeatureEvent) => void\n  /**  This event is fired for a click on the geometry. */\n  onClick?: (e: google.maps.Data.MouseEvent) => void\n  /**  This event is fired for a double click on the geometry. */\n  onDblClick?: (e: google.maps.Data.MouseEvent) => void\n  /**  This event is fired for a mousedown on the geometry. */\n  onMouseDown?: (e: google.maps.Data.MouseEvent) => void\n  /**  This event is fired when the mouse leaves the area of the geometry. */\n  onMouseOut?: (e: google.maps.Data.MouseEvent) => void\n  /**  This event is fired when the mouse enters the area of the geometry. */\n  onMouseOver?: (e: google.maps.Data.MouseEvent) => void\n  /**  This event is fired for a mouseup on the geometry. */\n  onMouseUp?: (e: google.maps.Data.MouseEvent) => void\n  /**  This event is fired when a feature is removed from the collection. */\n  onRemoveFeature?: (e: google.maps.Data.RemoveFeatureEvent) => void\n  /**  This event is fired when a feature's property is removed. */\n  onRemoveProperty?: (e: google.maps.Data.RemovePropertyEvent) => void\n  /**  This event is fired for a rightclick on the geometry. */\n  onRightClick?: (e: google.maps.Data.MouseEvent) => void\n  /**  This event is fired when a feature's geometry is set. */\n  onSetGeometry?: (e: google.maps.Data.SetGeometryEvent) => void\n  /**  This event is fired when a feature's property is set. */\n  onSetProperty?: (e: google.maps.Data.SetPropertyEvent) => void\n  /**  This callback is called when the data instance has loaded. It is called with the data instance. */\n  onLoad?: (data: google.maps.Data) => void\n  /**  This callback is called when the component unmounts. It is called with the data instance.  */\n  onUnmount?: (data: google.maps.Data) => void\n}\n\nexport class Data extends React.PureComponent<DataProps, DataState> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  state: DataState = {\n    data: null,\n  }\n\n  setDataCallback = (): void => {\n    if (this.state.data !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.data)\n    }\n  }\n\n  componentDidMount(): void {\n    const data = new google.maps.Data({\n      ...(this.props.options || {}),\n      map: this.context,\n    })\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: data,\n    })\n\n    this.setState(function setData() {\n      return {\n        data,\n      }\n    }, this.setDataCallback)\n  }\n\n  componentDidUpdate(prevProps: DataProps): void {\n    if (this.state.data !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.data,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.data !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.data)\n      }\n\n      unregisterEvents(this.registeredEvents)\n\n      if (this.state.data) {\n        this.state.data.setMap(null)\n      }\n    }\n  }\n\n  render(): null {\n    return null\n  }\n}\n\nexport default Data\n","import { PureComponent } from 'react'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\nimport MapContext from '../../map-context'\n\nconst eventMap = {\n  onClick: 'click',\n  onDefaultViewportChanged: 'defaultviewport_changed',\n  onStatusChanged: 'status_changed',\n}\n\nconst updaterMap = {\n  options(instance: google.maps.KmlLayer, options: google.maps.KmlLayerOptions): void {\n    instance.setOptions(options)\n  },\n  url(instance: google.maps.KmlLayer, url: string): void {\n    instance.setUrl(url)\n  },\n  zIndex(instance: google.maps.KmlLayer, zIndex: number): void {\n    instance.setZIndex(zIndex)\n  },\n}\n\ninterface KmlLayerState {\n  kmlLayer: google.maps.KmlLayer | null\n}\n\nexport interface KmlLayerProps {\n  options?: google.maps.KmlLayerOptions\n  /** The URL of the KML document to display. */\n  url?: string\n  /** The z-index of the layer. */\n  zIndex?: number\n  /** This event is fired when a feature in the layer is clicked. */\n  onClick?: (e: google.maps.MouseEvent) => void\n  /** This event is fired when the KML layers default viewport has changed. */\n  onDefaultViewportChanged?: () => void\n  /** This event is fired when the KML layer has finished loading. At this point it is safe to read the status property to determine if the layer loaded successfully. */\n  onStatusChanged?: () => void\n  /** This callback is called when the kmlLayer instance has loaded. It is called with the kmlLayer instance. */\n  onLoad: (kmlLayer: google.maps.KmlLayer) => void\n  /** This callback is called when the component unmounts. It is called with the kmlLayer instance. */\n  onUnmount: (kmlLayer: google.maps.KmlLayer) => void\n}\n\nexport class KmlLayer extends PureComponent<KmlLayerProps, KmlLayerState> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  state: KmlLayerState = {\n    kmlLayer: null,\n  }\n\n  setKmlLayerCallback = (): void => {\n    if (this.state.kmlLayer !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.kmlLayer)\n    }\n  }\n\n  componentDidMount(): void {\n    const kmlLayer = new google.maps.KmlLayer({\n      ...this.props.options,\n      map: this.context,\n    })\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: kmlLayer,\n    })\n\n    this.setState(function setLmlLayer() {\n      return {\n        kmlLayer,\n      }\n    }, this.setKmlLayerCallback)\n  }\n\n  componentDidUpdate(prevProps: KmlLayerProps): void {\n    if (this.state.kmlLayer !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.kmlLayer,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.kmlLayer !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.kmlLayer)\n      }\n\n      unregisterEvents(this.registeredEvents)\n\n      this.state.kmlLayer.setMap(null)\n    }\n  }\n\n  render(): React.ReactNode {\n    return null\n  }\n}\n\nexport default KmlLayer\n","import { PositionDrawProps } from \"../../types\"\n\n/* eslint-disable filenames/match-regex */\nexport function getOffsetOverride(\n  containerElement: HTMLElement,\n  getPixelPositionOffset?: (offsetWidth: number, offsetHeight: number) => { x: number; y: number }\n): { x: number; y: number } | {} {\n  return typeof getPixelPositionOffset === 'function'\n    ? getPixelPositionOffset(containerElement.offsetWidth, containerElement.offsetHeight)\n    : {}\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst createLatLng = (inst: any, Type: any): any => new Type(inst.lat, inst.lng)\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst createLatLngBounds = (inst: any, Type: any): any =>\n  new Type(\n    new google.maps.LatLng(inst.ne.lat, inst.ne.lng),\n    new google.maps.LatLng(inst.sw.lat, inst.sw.lng)\n  )\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst ensureOfType = (inst: any, type: any, factory: any): any => {\n  return inst instanceof type ? inst : factory(inst, type)\n}\n\nconst getLayoutStylesByBounds = (\n  mapCanvasProjection: google.maps.MapCanvasProjection,\n  offset: { x: number; y: number },\n  bounds: google.maps.LatLngBounds\n): { left: string; top: string; width?: string; height?: string } => {\n  const ne = mapCanvasProjection && mapCanvasProjection.fromLatLngToDivPixel(bounds.getNorthEast())\n\n  const sw = mapCanvasProjection && mapCanvasProjection.fromLatLngToDivPixel(bounds.getSouthWest())\n\n  if (ne && sw) {\n    return {\n      left: `${sw.x + offset.x}px`,\n      top: `${ne.y + offset.y}px`,\n      width: `${ne.x - sw.x - offset.x}px`,\n      height: `${sw.y - ne.y - offset.y}px`,\n    }\n  }\n\n  return {\n    left: '-9999px',\n    top: '-9999px',\n  }\n}\n\nconst getLayoutStylesByPosition = (\n  mapCanvasProjection: google.maps.MapCanvasProjection,\n  offset: { x: number; y: number },\n  position: google.maps.LatLng\n): { left: string; top: string } => {\n  const point = mapCanvasProjection && mapCanvasProjection.fromLatLngToDivPixel(position)\n\n  if (point) {\n    const { x, y } = point\n\n    return {\n      left: `${x + offset.x}px`,\n      top: `${y + offset.y}px`,\n    }\n  }\n\n  return {\n    left: '-9999px',\n    top: '-9999px',\n  }\n}\n\nexport const getLayoutStyles = (\n  mapCanvasProjection: google.maps.MapCanvasProjection,\n  offset: { x: number; y: number },\n  bounds?: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral,\n  position?: google.maps.LatLng | google.maps.LatLngLiteral\n): PositionDrawProps => {\n  return bounds !== undefined\n    ? getLayoutStylesByBounds(\n        mapCanvasProjection,\n        offset,\n        ensureOfType(bounds, google.maps.LatLngBounds, createLatLngBounds)\n      )\n    : getLayoutStylesByPosition(\n        mapCanvasProjection,\n        offset,\n        ensureOfType(position, google.maps.LatLng, createLatLng)\n      )\n}\n\nexport const arePositionsEqual = (\n  currentPosition: PositionDrawProps,\n  previousPosition: PositionDrawProps\n): boolean => {\n  return currentPosition.left === previousPosition.left\n    && currentPosition.top === previousPosition.top\n    && currentPosition.width === previousPosition.height\n    && currentPosition.height === previousPosition.height;\n}","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\n\nimport invariant from 'invariant'\n\nimport MapContext from '../../map-context'\n\nimport { getOffsetOverride, getLayoutStyles, arePositionsEqual } from './dom-helper'\n\ninterface OverlayViewState {\n  paneEl: Element | null\n  containerStyle: React.CSSProperties\n}\n\nfunction convertToLatLngString(latLngLike?: google.maps.LatLng | google.maps.LatLngLiteral | null) {\n  if (!latLngLike) {\n    return ''\n  }\n\n  const latLng = latLngLike instanceof google.maps.LatLng\n    ? latLngLike\n    : new google.maps.LatLng(latLngLike.lat, latLngLike.lng)\n\n  return latLng + ''\n}\n\nfunction convertToLatLngBoundsString(latLngBoundsLike?: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral | null) {\n  if (!latLngBoundsLike) {\n    return ''\n  }\n\n  const latLngBounds = latLngBoundsLike instanceof google.maps.LatLngBounds\n    ? latLngBoundsLike\n    : new google.maps.LatLngBounds(\n        new google.maps.LatLng(latLngBoundsLike.south, latLngBoundsLike.east),\n        new google.maps.LatLng(latLngBoundsLike.north, latLngBoundsLike.west)\n      )\n\n  return latLngBounds + ''\n}\n\nexport type PaneNames = keyof google.maps.MapPanes\nexport interface OverlayViewProps {\n  // required\n  mapPaneName: PaneNames\n  getPixelPositionOffset?: (offsetWidth: number, offsetHeight: number) => { x: number; y: number }\n  bounds?: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral\n  position?: google.maps.LatLng | google.maps.LatLngLiteral\n  onLoad?: (overlayView: google.maps.OverlayView) => void\n  onUnmount?: (overlayView: google.maps.OverlayView) => void\n}\n\nexport class OverlayView extends React.PureComponent<OverlayViewProps, OverlayViewState> {\n  static FLOAT_PANE: PaneNames = `floatPane`\n  static MAP_PANE: PaneNames = `mapPane`\n  static MARKER_LAYER: PaneNames = `markerLayer`\n  static OVERLAY_LAYER: PaneNames = `overlayLayer`\n  static OVERLAY_MOUSE_TARGET: PaneNames = `overlayMouseTarget`\n\n  static contextType = MapContext\n\n  state: OverlayViewState = {\n    paneEl: null,\n    containerStyle: {\n      // set initial position\n      position: 'absolute'\n    },\n  }\n\n  overlayView: google.maps.OverlayView\n  containerRef: React.RefObject<HTMLDivElement>\n\n  updatePane = (): void => {\n    const mapPaneName = this.props.mapPaneName\n\n    // https://developers.google.com/maps/documentation/javascript/3.exp/reference#MapPanes\n    const mapPanes = this.overlayView.getPanes()\n    invariant(\n      !!mapPaneName,\n      `OverlayView requires props.mapPaneName but got %s`,\n      mapPaneName\n    )\n\n    if (mapPanes) {\n      this.setState({\n        paneEl: mapPanes[mapPaneName]\n      })\n    } else {\n      this.setState({\n        paneEl: null\n      })\n    }\n  }\n  onAdd = (): void => {\n    this.updatePane()\n    this.props.onLoad?.(this.overlayView)\n  }\n\n  onPositionElement = (): void => {\n    const mapCanvasProjection = this.overlayView.getProjection()\n\n    const offset = {\n      x: 0,\n      y: 0,\n      ...(this.containerRef.current\n        ? getOffsetOverride(this.containerRef.current, this.props.getPixelPositionOffset)\n        : {}),\n    }\n\n    const layoutStyles = getLayoutStyles(\n      mapCanvasProjection,\n      offset,\n      this.props.bounds,\n      this.props.position\n    )\n\n    const { left, top, width, height } = this.state.containerStyle;\n    if(!arePositionsEqual(layoutStyles, { left, top, width, height })) {\n      this.setState({\n        containerStyle: {\n          ...layoutStyles,\n          position: 'absolute'\n        },\n      })\n    }\n  }\n\n  draw = (): void => {\n    this.onPositionElement()\n  }\n\n  onRemove = (): void => {\n    this.setState(() => ({\n      paneEl: null\n    }))\n    // this.mapPaneEl = null\n    this.props.onUnmount?.(this.overlayView)\n  }\n\n  constructor(props: OverlayViewProps) {\n    super(props)\n\n    this.containerRef = React.createRef()\n    // You must implement three methods: onAdd(), draw(), and onRemove().\n    const overlayView = new google.maps.OverlayView()\n    overlayView.onAdd = this.onAdd\n    overlayView.draw = this.draw\n    overlayView.onRemove = this.onRemove\n    this.overlayView = overlayView\n  }\n\n  componentDidMount(): void {\n    // You must call setMap() with a valid Map object to trigger the call to\n    // the onAdd() method and setMap(null) in order to trigger the onRemove() method.\n    this.overlayView.setMap(this.context)\n  }\n\n  componentDidUpdate(prevProps: OverlayViewProps): void {\n    const prevPositionString = convertToLatLngString(prevProps.position)\n    const positionString = convertToLatLngString(this.props.position)\n    const prevBoundsString = convertToLatLngBoundsString(prevProps.bounds)\n    const boundsString = convertToLatLngBoundsString(this.props.bounds)\n\n    if (prevPositionString !== positionString || prevBoundsString !== boundsString) {\n      this.overlayView.draw()\n    }\n    if (prevProps.mapPaneName !== this.props.mapPaneName) {\n      this.updatePane()\n    }\n  }\n\n  componentWillUnmount(): void {\n    this.overlayView.setMap(null)\n  }\n\n  render(): React.ReactPortal | React.ReactNode {\n    const paneEl = this.state.paneEl\n    if (paneEl) {\n      return ReactDOM.createPortal(\n        <div\n          ref={this.containerRef}\n          style={this.state.containerStyle}\n        >\n          {React.Children.only(this.props.children)}\n        </div>,\n        paneEl\n      )\n    } else {\n      return null\n    }\n  }\n}\n\nexport default OverlayView\n","import * as React from 'react'\n\nimport invariant from 'invariant'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\n\nimport MapContext from '../../map-context'\nimport { noop } from '../../utils/noop'\n\nconst eventMap = {\n  onDblClick: 'dblclick',\n  onClick: 'click',\n}\n\nconst updaterMap = {\n  opacity(instance: google.maps.GroundOverlay, opacity: number): void {\n    instance.setOpacity(opacity)\n  },\n}\n\ninterface GroundOverlayState {\n  groundOverlay: google.maps.GroundOverlay | null\n}\n\nexport interface GroundOverlayProps {\n  options?: google.maps.GroundOverlayOptions\n  /** The opacity of the overlay, expressed as a number between 0 and 1. Optional. Defaults to 1. */\n  opacity?: number\n  /** This event is fired when the DOM dblclick event is fired on the GroundOverlay. */\n  onDblClick?: (e: google.maps.MouseEvent) => void\n  /** This event is fired when the DOM click event is fired on the GroundOverlay. */\n  onClick?: (e: google.maps.MouseEvent) => void\n  /** The url of the projected image */\n  url: string\n  /** The bounds that the image will be scaled to fit */\n  bounds: google.maps.LatLngBounds\n  /** This callback is called when the groundOverlay instance has loaded. It is called with the groundOverlay instance. */\n  onLoad?: (groundOverlay: google.maps.GroundOverlay) => void\n  /** This callback is called when the component unmounts. It is called with the groundOverlay instance. */\n  onUnmount?: (groundOverlay: google.maps.GroundOverlay) => void\n}\n\nexport class GroundOverlay extends React.PureComponent<GroundOverlayProps, GroundOverlayState> {\n  public static defaultProps = {\n    onLoad: noop,\n  }\n\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  state: GroundOverlayState = {\n    groundOverlay: null,\n  }\n\n  setGroundOverlayCallback = (): void => {\n    if (this.state.groundOverlay !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.groundOverlay)\n    }\n  }\n\n  componentDidMount(): void {\n    invariant(\n      !!this.props.url || !!this.props.bounds,\n      `For GroundOverlay, url and bounds are passed in to constructor and are immutable after instantiated. This is the behavior of Google Maps JavaScript API v3 ( See https://developers.google.com/maps/documentation/javascript/reference#GroundOverlay) Hence, use the corresponding two props provided by \\`react-google-maps-api\\`, url and bounds. In some cases, you'll need the GroundOverlay component to reflect the changes of url and bounds. You can leverage the React's key property to remount the component. Typically, just \\`key={url}\\` would serve your need. See https://github.com/tomchentw/react-google-maps/issues/655`\n    )\n\n    const groundOverlay = new google.maps.GroundOverlay(this.props.url, this.props.bounds, {\n      ...this.props.options,\n      map: this.context,\n    })\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: groundOverlay,\n    })\n\n    this.setState(function setGroundOverlay() {\n      return {\n        groundOverlay,\n      }\n    }, this.setGroundOverlayCallback)\n  }\n\n  componentDidUpdate(prevProps: GroundOverlayProps): void {\n    if (this.state.groundOverlay !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.groundOverlay,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.groundOverlay) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.groundOverlay)\n      }\n\n      this.state.groundOverlay.setMap(null)\n    }\n  }\n\n  render(): React.ReactNode {\n    return null\n  }\n}\n\nexport default GroundOverlay\n","import * as React from 'react'\nimport invariant from 'invariant'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\n\nimport MapContext from '../../map-context'\n\nconst eventMap = {}\n\nconst updaterMap = {\n  data(\n    instance: google.maps.visualization.HeatmapLayer,\n    data:\n      | google.maps.MVCArray<google.maps.LatLng | google.maps.visualization.WeightedLocation>\n      | google.maps.LatLng[]\n      | google.maps.visualization.WeightedLocation[]\n  ): void {\n    instance.setData(data)\n  },\n  map(instance: google.maps.visualization.HeatmapLayer, map: google.maps.Map): void {\n    instance.setMap(map)\n  },\n  options(\n    instance: google.maps.visualization.HeatmapLayer,\n    options: google.maps.visualization.HeatmapLayerOptions\n  ): void {\n    instance.setOptions(options)\n  },\n}\n\ninterface HeatmapLayerState {\n  heatmapLayer: google.maps.visualization.HeatmapLayer | null\n}\n\nexport interface HeatmapLayerProps {\n  // required\n  /** The data points to display. Required. */\n  data:\n    | google.maps.MVCArray<google.maps.LatLng | google.maps.visualization.WeightedLocation>\n    | google.maps.LatLng[]\n    | google.maps.visualization.WeightedLocation[]\n  options?: google.maps.visualization.HeatmapLayerOptions\n  /** This callback is called when the heatmapLayer instance has loaded. It is called with the heatmapLayer instance. */\n  onLoad?: (heatmapLayer: google.maps.visualization.HeatmapLayer) => void\n  /** This callback is called when the component unmounts. It is called with the heatmapLayer instance. */\n  onUnmount?: (heatmapLayer: google.maps.visualization.HeatmapLayer) => void\n}\n\nexport class HeatmapLayer extends React.PureComponent<HeatmapLayerProps, HeatmapLayerState> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  state: HeatmapLayerState = {\n    heatmapLayer: null,\n  }\n\n  setHeatmapLayerCallback = (): void => {\n    if (this.state.heatmapLayer !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.heatmapLayer)\n    }\n  }\n\n  componentDidMount(): void {\n    invariant(\n      !!google.maps.visualization,\n      'Did you include prop libraries={[\"visualization\"]} to <LoadScript />? %s',\n      google.maps.visualization\n    )\n\n    invariant(!!this.props.data, 'data property is required in HeatmapLayer %s', this.props.data)\n\n    const heatmapLayer = new google.maps.visualization.HeatmapLayer({\n      ...(this.props.options || {}),\n      data: this.props.data,\n      map: this.context,\n    })\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: heatmapLayer,\n    })\n\n    this.setState(function setHeatmapLayer() {\n      return {\n        heatmapLayer,\n      }\n    }, this.setHeatmapLayerCallback)\n  }\n\n  componentDidUpdate(prevProps: HeatmapLayerProps): void {\n    unregisterEvents(this.registeredEvents)\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps,\n      nextProps: this.props,\n      instance: this.state.heatmapLayer,\n    })\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.heatmapLayer !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.heatmapLayer)\n      }\n\n      unregisterEvents(this.registeredEvents)\n\n      this.state.heatmapLayer.setMap(null)\n    }\n  }\n\n  render(): React.ReactNode {\n    return null\n  }\n}\n\nexport default HeatmapLayer\n","import * as React from 'react'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\n\nimport MapContext from '../../map-context'\n\nconst eventMap = {\n  onCloseClick: 'closeclick',\n  onPanoChanged: 'pano_changed',\n  onPositionChanged: 'position_changed',\n  onPovChanged: 'pov_changed',\n  onResize: 'resize',\n  onStatusChanged: 'status_changed',\n  onVisibleChanged: 'visible_changed',\n  onZoomChanged: 'zoom_changed',\n}\n\nconst updaterMap = {\n  register(\n    instance: google.maps.StreetViewPanorama,\n    provider: (input: string) => google.maps.StreetViewPanoramaData,\n    options: google.maps.PanoProviderOptions\n  ): void {\n    instance.registerPanoProvider(provider, options)\n  },\n  links(instance: google.maps.StreetViewPanorama, links: google.maps.StreetViewLink[]): void {\n    instance.setLinks(links)\n  },\n  motionTracking(instance: google.maps.StreetViewPanorama, motionTracking: boolean): void {\n    instance.setMotionTracking(motionTracking)\n  },\n  options(\n    instance: google.maps.StreetViewPanorama,\n    options: google.maps.StreetViewPanoramaOptions\n  ): void {\n    instance.setOptions(options)\n  },\n  pano(instance: google.maps.StreetViewPanorama, pano: string): void {\n    instance.setPano(pano)\n  },\n  position(\n    instance: google.maps.StreetViewPanorama,\n    position: google.maps.LatLng | google.maps.LatLngLiteral\n  ): void {\n    instance.setPosition(position)\n  },\n  pov(instance: google.maps.StreetViewPanorama, pov: google.maps.StreetViewPov): void {\n    instance.setPov(pov)\n  },\n  visible(instance: google.maps.StreetViewPanorama, visible: boolean): void {\n    instance.setVisible(visible)\n  },\n  zoom(instance: google.maps.StreetViewPanorama, zoom: number): void {\n    instance.setZoom(zoom)\n  },\n}\n\ninterface StreetViewPanoramaState {\n  streetViewPanorama: google.maps.StreetViewPanorama | null\n}\n\nexport interface StreetViewPanoramaProps {\n  options?: google.maps.StreetViewPanoramaOptions\n  /** This event is fired when the close button is clicked. */\n  onCloseclick?: (event: google.maps.MouseEvent) => void\n  /** This event is fired when the panorama's pano id changes. The pano may change as the user navigates through the panorama or the position is manually set. Note that not all position changes trigger a pano_changed. */\n  onPanoChanged?: () => void\n  /** This event is fired when the panorama's position changes. The position changes as the user navigates through the panorama or the position is set manually. */\n  onPositionChanged?: () => void\n  /** This event is fired when the panorama's point-of-view changes. The point of view changes as the pitch, zoom, or heading changes. */\n  onPovChanged?: () => void\n  /** Developers should trigger this event on the panorama when its div changes size: google.maps.event.trigger(panorama, 'resize'). */\n  onResize?: () => void\n  /** This event is fired after every panorama lookup by id or location, via setPosition() or setPano(). */\n  onStatusChanged?: () => void\n  /** This event is fired when the panorama's visibility changes. The visibility is changed when the Pegman is dragged onto the map, the close button is clicked, or setVisible() is called. */\n  onVisibleChanged?: () => void\n  /** This event is fired when the panorama's zoom level changes. */\n  onZoomChange?: () => void\n  /** This callback is called when the streetViewPanorama instance has loaded. It is called with the streetViewPanorama instance. */\n  onLoad?: (streetViewPanorama: google.maps.StreetViewPanorama) => void\n  /** This callback is called when the component unmounts. It is called with the streetViewPanorama instance. */\n  onUnmount?: (streetViewPanorama: google.maps.StreetViewPanorama) => void\n}\n\nexport class StreetViewPanorama extends React.PureComponent<\n  StreetViewPanoramaProps,\n  StreetViewPanoramaState\n> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  state: StreetViewPanoramaState = {\n    streetViewPanorama: null,\n  }\n\n  setStreetViewPanoramaCallback = (): void => {\n    if (this.state.streetViewPanorama !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.streetViewPanorama)\n    }\n  }\n\n  componentDidMount(): void {\n    const streetViewPanorama = this.context.getStreetView()\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: streetViewPanorama,\n    })\n\n    this.setState(function setStreetViewPanorama() {\n      return {\n        streetViewPanorama,\n      }\n    }, this.setStreetViewPanoramaCallback)\n  }\n\n  componentDidUpdate(prevProps: StreetViewPanoramaProps): void {\n    if (this.state.streetViewPanorama !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.streetViewPanorama,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.streetViewPanorama !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.streetViewPanorama)\n      }\n\n      unregisterEvents(this.registeredEvents)\n\n      this.state.streetViewPanorama.setVisible(false)\n    }\n  }\n\n  render(): React.ReactNode {\n    return null\n  }\n}\n\nexport default StreetViewPanorama\n","import * as React from 'react'\n\nimport MapContext from '../../map-context'\n\nexport interface StreetViewServiceProps {\n  /** This callback is called when the streetViewService instance has loaded. It is called with the streetViewService instance. */\n  onLoad?: (streetViewService: google.maps.StreetViewService | null) => void\n  /** This callback is called when the component unmounts. It is called with the streetViewService instance. */\n  onUnmount?: (streetViewService: google.maps.StreetViewService | null) => void\n}\n\ninterface StreetViewServiceState {\n  streetViewService: google.maps.StreetViewService | null\n}\n\nexport class StreetViewService extends React.PureComponent<\n  StreetViewServiceProps,\n  StreetViewServiceState\n> {\n  static contextType = MapContext\n\n  state = {\n    streetViewService: null,\n  }\n\n  setStreetViewServiceCallback = (): void => {\n    if (this.state.streetViewService !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.streetViewService)\n    }\n  }\n\n  componentDidMount(): void {\n    const streetViewService = new google.maps.StreetViewService()\n\n    this.setState(function setStreetViewService() {\n      return {\n        streetViewService,\n      }\n    }, this.setStreetViewServiceCallback)\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.streetViewService !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.streetViewService)\n      }\n    }\n  }\n\n  render(): React.ReactNode {\n    return null\n  }\n}\n\nexport default StreetViewService\n","import * as React from 'react'\nimport invariant from 'invariant'\n\ninterface DirectionsServiceState {\n  directionsService: google.maps.DirectionsService | null\n}\n\nexport interface DirectionsServiceProps {\n  // required for default functionality\n  options: google.maps.DirectionsRequest\n\n  // required for default functionality\n  callback: (\n    // required\n    /** The directions response retrieved from the directions server. You can render these using a DirectionsRenderer or parse this object and render it yourself. You must display the warnings and copyrights as noted in the Google Maps Platform Terms of Service. Note that though this result is \"JSON-like,\" it is not strictly JSON, as it indirectly includes LatLng objects */\n    result: google.maps.DirectionsResult,\n    // required\n    /** The status returned by the DirectionsService on the completion of a call to route(). Specify these by value, or by using the constant's name. For example, 'OK' or google.maps.DirectionsStatus.OK */\n    status: google.maps.DirectionsStatus\n  ) => void\n  /** This callback is called when the directionsService instance has loaded. It is called with the directionsService instance. */\n  onLoad?: (directionsService: google.maps.DirectionsService) => void\n  /** This callback is called when the component unmounts. It is called with the directionsService instance. */\n  onUnmount?: (directionsService: google.maps.DirectionsService) => void\n}\n\nexport class DirectionsService extends React.PureComponent<\n  DirectionsServiceProps,\n  DirectionsServiceState\n> {\n  state: DirectionsServiceState = {\n    directionsService: null,\n  }\n\n  setDirectionsServiceCallback = (): void => {\n    if (this.state.directionsService !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.directionsService)\n    }\n  }\n\n  componentDidMount(): void {\n    invariant(\n      !!this.props.options,\n      'DirectionsService expected options object as parameter, but got %s',\n      this.props.options\n    )\n\n    const directionsService = new google.maps.DirectionsService()\n\n    this.setState(function setDirectionsService() {\n      return {\n        directionsService,\n      }\n    }, this.setDirectionsServiceCallback)\n  }\n\n  componentDidUpdate(): void {\n    if (this.state.directionsService !== null) {\n      this.state.directionsService.route(this.props.options, this.props.callback)\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.directionsService !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.directionsService)\n      }\n    }\n  }\n\n  render(): JSX.Element {\n    return <></>\n  }\n}\n\nexport default DirectionsService\n","import * as React from 'react'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\n\nimport MapContext from '../../map-context'\n\nconst eventMap = {\n  onDirectionsChanged: 'directions_changed',\n}\n\nconst updaterMap = {\n  directions(\n    instance: google.maps.DirectionsRenderer,\n    directions: google.maps.DirectionsResult\n  ): void {\n    instance.setDirections(directions)\n  },\n  map(instance: google.maps.DirectionsRenderer, map: google.maps.Map): void {\n    instance.setMap(map)\n  },\n  options(\n    instance: google.maps.DirectionsRenderer,\n    options: google.maps.DirectionsRendererOptions\n  ): void {\n    instance.setOptions(options)\n  },\n  panel(instance: google.maps.DirectionsRenderer, panel: Element): void {\n    instance.setPanel(panel)\n  },\n  routeIndex(instance: google.maps.DirectionsRenderer, routeIndex: number): void {\n    instance.setRouteIndex(routeIndex)\n  },\n}\n\ninterface DirectionsRendererState {\n  directionsRenderer: google.maps.DirectionsRenderer | null\n}\n\nexport interface DirectionsRendererProps {\n  options?: google.maps.DirectionsRendererOptions\n  /** The directions to display on the map and/or in a <div> panel, retrieved as a DirectionsResult object from DirectionsService. */\n  directions?: google.maps.DirectionsResult\n  /** The <div> in which to display the directions steps. */\n  panel?: Element\n  /** The index of the route within the DirectionsResult object. The default value is 0. */\n  routeIndex?: number\n  /** This event is fired when the rendered directions change, either when a new DirectionsResult is set or when the user finishes dragging a change to the directions path. */\n  onDirectionsChanged?: () => void\n  /** This callback is called when the directionsRenderer instance has loaded. It is called with the directionsRenderer instance. */\n  onLoad?: (directionsRenderer: google.maps.DirectionsRenderer) => void\n  /** This callback is called when the component unmounts. It is called with the directionsRenderer instance. */\n  onUnmount?: (directionsRenderer: google.maps.DirectionsRenderer) => void\n}\n\nexport class DirectionsRenderer extends React.PureComponent<\n  DirectionsRendererProps,\n  DirectionsRendererState\n> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  state: DirectionsRendererState = {\n    directionsRenderer: null,\n  }\n\n  setDirectionsRendererCallback = (): void => {\n    if (this.state.directionsRenderer !== null) {\n      this.state.directionsRenderer.setMap(this.context)\n\n      if (this.props.onLoad) {\n        this.props.onLoad(this.state.directionsRenderer)\n      }\n    }\n  }\n\n  componentDidMount(): void {\n    const directionsRenderer = new google.maps.DirectionsRenderer(this.props.options)\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: directionsRenderer,\n    })\n\n    this.setState(function setDirectionsRenderer() {\n      return {\n        directionsRenderer,\n      }\n    }, this.setDirectionsRendererCallback)\n  }\n\n  componentDidUpdate(prevProps: DirectionsRendererProps): void {\n    if (this.state.directionsRenderer !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.directionsRenderer,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.directionsRenderer !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.directionsRenderer)\n      }\n\n      unregisterEvents(this.registeredEvents)\n\n      if (this.state.directionsRenderer) {\n        this.state.directionsRenderer.setMap(null)\n      }\n    }\n  }\n\n  render(): JSX.Element {\n    return <></>\n  }\n}\n\nexport default DirectionsRenderer\n","import * as React from 'react'\n\nimport invariant from 'invariant'\n\ninterface DistanceMatrixServiceState {\n  distanceMatrixService: google.maps.DistanceMatrixService | null\n}\n\nexport interface DistanceMatrixServiceProps {\n  // required for default functionality\n  options: google.maps.DistanceMatrixRequest\n\n  // required for default functionality\n  callback: (\n    // required\n    /** The response to a DistanceMatrixService request, consisting of the formatted origin and destination addresses, and a sequence of DistanceMatrixResponseRows, one for each corresponding origin address. */\n    response: google.maps.DistanceMatrixResponse,\n    // required\n    /** The top-level status about the request in general returned by the DistanceMatrixService upon completion of a distance matrix request. Specify these by value, or by using the constant's name. For example, 'OK' or google.maps.DistanceMatrixStatus.OK. */\n    status: google.maps.DistanceMatrixStatus\n  ) => void\n  /** This callback is called when the distanceMatrixService instance has loaded. It is called with the distanceMatrixService instance. */\n  onLoad?: (distanceMatrixService: google.maps.DistanceMatrixService) => void\n  /** This callback is called when the component unmounts. It is called with the distanceMatrixService instance. */\n  onUnmount?: (distanceMatrixService: google.maps.DistanceMatrixService) => void\n}\n\nexport class DistanceMatrixService extends React.PureComponent<\n  DistanceMatrixServiceProps,\n  DistanceMatrixServiceState\n> {\n  state: DistanceMatrixServiceState = {\n    distanceMatrixService: null,\n  }\n\n  setDistanceMatrixServiceCallback = (): void => {\n    if (this.state.distanceMatrixService !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.distanceMatrixService)\n    }\n  }\n\n  componentDidMount(): void {\n    invariant(\n      !!this.props.options,\n      'DistanceMatrixService expected options object as parameter, but go %s',\n      this.props.options\n    )\n\n    const distanceMatrixService = new google.maps.DistanceMatrixService()\n\n    this.setState(function setDistanceMatrixService() {\n      return {\n        distanceMatrixService,\n      }\n    }, this.setDistanceMatrixServiceCallback)\n  }\n\n  componentDidUpdate(): void {\n    if (this.state.distanceMatrixService !== null) {\n      this.state.distanceMatrixService.getDistanceMatrix(this.props.options, this.props.callback)\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.distanceMatrixService !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.distanceMatrixService)\n      }\n    }\n  }\n\n  render(): JSX.Element {\n    return <></>\n  }\n}\n\nexport default DistanceMatrixService\n","import * as React from 'react'\n\nimport invariant from 'invariant'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\n\nimport MapContext from '../../map-context'\n\nconst eventMap = {\n  onPlacesChanged: 'places_changed',\n}\n\nconst updaterMap = {\n  bounds(\n    instance: google.maps.places.SearchBox,\n    bounds: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral\n  ): void {\n    instance.setBounds(bounds)\n  },\n}\n\ninterface StandaloneSearchBoxState {\n  searchBox: google.maps.places.SearchBox | null\n}\n\nexport interface StandaloneSearchBoxProps {\n  /** The area towards which to bias query predictions. Predictions are biased towards, but not restricted to, queries targeting these bounds. */\n  bounds?: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral\n  options?: google.maps.places.SearchBoxOptions\n  /** This event is fired when the user selects a query, getPlaces should be used to get new places. */\n  onPlacesChanged?: () => void\n  /** This callback is called when the searchBox instance has loaded. It is called with the searchBox instance. */\n  onLoad?: (searchBox: google.maps.places.SearchBox) => void\n  /** This callback is called when the component unmounts. It is called with the searchBox instance. */\n  onUnmount?: (searchBox: google.maps.places.SearchBox) => void\n}\n\nclass StandaloneSearchBox extends React.PureComponent<\n  StandaloneSearchBoxProps,\n  StandaloneSearchBoxState\n> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  containerElement: React.RefObject<HTMLDivElement> = React.createRef()\n\n  state: StandaloneSearchBoxState = {\n    searchBox: null,\n  }\n\n  setSearchBoxCallback = (): void => {\n    if (this.state.searchBox !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.searchBox)\n    }\n  }\n\n  componentDidMount(): void {\n    invariant(\n      !!google.maps.places,\n      'You need to provide libraries={[\"places\"]} prop to <LoadScript /> component %s',\n      google.maps.places\n    )\n\n    if (this.containerElement !== null && this.containerElement.current !== null) {\n      const input = this.containerElement.current.querySelector('input')\n\n      if (input !== null) {\n        const searchBox = new google.maps.places.SearchBox(input, this.props.options)\n\n        this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n          updaterMap,\n          eventMap,\n          prevProps: {},\n          nextProps: this.props,\n          instance: searchBox,\n        })\n\n        this.setState(function setSearchBox() {\n          return {\n            searchBox,\n          }\n        }, this.setSearchBoxCallback)\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps: StandaloneSearchBoxProps): void {\n    if (this.state.searchBox !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.searchBox,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.searchBox !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.searchBox)\n      }\n\n      unregisterEvents(this.registeredEvents)\n    }\n  }\n\n  render(): React.ReactNode {\n    return <div ref={this.containerElement}>{React.Children.only(this.props.children)}</div>\n  }\n}\n\nexport default StandaloneSearchBox\n","import * as React from 'react'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\n\nimport MapContext from '../../map-context'\n\nimport invariant from 'invariant'\n\nconst eventMap = {\n  onPlaceChanged: 'place_changed',\n}\n\nconst updaterMap = {\n  bounds(\n    instance: google.maps.places.Autocomplete,\n    bounds: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral\n  ): void {\n    instance.setBounds(bounds)\n  },\n  restrictions(\n    instance: google.maps.places.Autocomplete,\n    restrictions: google.maps.places.ComponentRestrictions\n  ): void {\n    instance.setComponentRestrictions(restrictions)\n  },\n  fields(instance: google.maps.places.Autocomplete, fields: string[]): void {\n    instance.setFields(fields)\n  },\n  options(\n    instance: google.maps.places.Autocomplete,\n    options: google.maps.places.AutocompleteOptions\n  ): void {\n    instance.setOptions(options)\n  },\n  types(instance: google.maps.places.Autocomplete, types: string[]): void {\n    instance.setTypes(types)\n  },\n}\n\ninterface AutocompleteState {\n  autocomplete: google.maps.places.Autocomplete | null\n}\n\nexport interface AutocompleteProps {\n  // required\n  children: React.ReactChild\n  /** The area in which to search for places. */\n  bounds?: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral\n  /** The component restrictions. Component restrictions are used to restrict predictions to only those within the parent component. For example, the country. */\n  restrictions?: google.maps.places.ComponentRestrictions\n  /** Fields to be included for the Place in the details response when the details are successfully retrieved. For a list of fields see PlaceResult. Nested fields can be specified with dot-paths (for example, \"geometry.location\"). */\n  fields?: string[]\n  options?: google.maps.places.AutocompleteOptions\n  /** The types of predictions to be returned. For a list of supported types, see the developer's guide. If nothing is specified, all types are returned. In general only a single type is allowed. The exception is that you can safely mix the 'geocode' and 'establishment' types, but note that this will have the same effect as specifying no types. */\n  types?: string[]\n  /** This event is fired when a PlaceResult is made available for a Place the user has selected. If the user enters the name of a Place that was not suggested by the control and presses the Enter key, or if a Place Details request fails, the PlaceResult contains the user input in the name property, with no other properties defined. */\n  onPlaceChanged?: () => void\n  /** This callback is called when the autocomplete instance has loaded. It is called with the autocomplete instance. */\n  onLoad?: (autocomplete: google.maps.places.Autocomplete) => void\n  /** This callback is called when the component unmounts. It is called with the autocomplete instance. */\n  onUnmount?: (autocomplete: google.maps.places.Autocomplete) => void\n  className?: string\n}\n\nexport class Autocomplete extends React.PureComponent<AutocompleteProps, AutocompleteState> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n  containerElement: React.RefObject<HTMLDivElement> = React.createRef()\n\n  state: AutocompleteState = {\n    autocomplete: null,\n  }\n\n  setAutocompleteCallback = (): void => {\n    if (this.state.autocomplete !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.autocomplete)\n    }\n  }\n\n  componentDidMount(): void {\n    invariant(\n      !!google.maps.places,\n      'You need to provide libraries={[\"places\"]} prop to <LoadScript /> component %s',\n      google.maps.places\n    )\n\n    // TODO: why current could be equal null?\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    const input = this.containerElement.current.querySelector('input')\n\n    if (input) {\n      const autocomplete = new google.maps.places.Autocomplete(input, this.props.options)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps: {},\n        nextProps: this.props,\n        instance: autocomplete,\n      })\n\n      this.setState(function setAutocomplete() {\n        return {\n          autocomplete,\n        }\n      }, this.setAutocompleteCallback)\n    }\n  }\n\n  componentDidUpdate(prevProps: AutocompleteProps): void {\n    unregisterEvents(this.registeredEvents)\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps,\n      nextProps: this.props,\n      instance: this.state.autocomplete,\n    })\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.autocomplete !== null) {\n      unregisterEvents(this.registeredEvents)\n    }\n  }\n\n  render(): React.ReactNode {\n    return <div ref={this.containerElement} className={this.props.className || ''}>{React.Children.only(this.props.children)}</div>\n  }\n}\n\nexport default Autocomplete\n"],"sourceRoot":""}